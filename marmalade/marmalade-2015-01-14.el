'(
  (abl-mode . [(0 9 0) nil "Python TDD minor mode" single "marmalade"])
  (ac-R . [(0 2) nil "Autocompletion routines for R" single "marmalade"])
  (ac-cider . [(0 2 0) ((cider (0 8 0)) (auto-complete (1 4)) (cl-lib (0 3))) "Clojure auto-complete sources using CIDER" single "marmalade"])
  (ac-cider-compliment . [(0 1 0) ((cider (0 5 0)) (auto-complete (1 4))) "auto-complete sources for Clojure using" single "marmalade"])
  (ac-geiser . [(0 1) ((geiser (0 5)) (auto-complete (1 4))) "Auto-complete backend for geiser" tar "marmalade"])
  (ac-inf-ruby . [(0 4) ((inf-ruby (2 3 2)) (auto-complete (1 4))) "Enable auto-complete in inf-ruby sessions" single "marmalade"])
  (ac-ja . [(0 0 1) nil "auto-complete-mode source for Japanese" single "marmalade"])
  (ac-nrepl . [(0 21) ((cider (0 1)) (auto-complete (1 4))) "auto-complete sources for Clojure using nrepl completions" single "marmalade"])
  (ac-python . [(20110519) ((auto-complete (1 4))) "Simple Python Completion Source for Auto-Complete" single "marmalade"])
  (ac-slime . [(0 5) nil "An auto-complete source using slime completions" single "marmalade"])
  (ace-jump-mode . [(2 0 0 0) nil "a quick cursor location minor mode for emacs" single "marmalade"])
  (ack-and-a-half . [(1 2 0) nil "Yet another front-end for ack" single "marmalade"])
  (adoc-mode . [(0 6 2) ((markup-faces (1 0 0))) "a major-mode for editing AsciiDoc files in Emacs" single "marmalade"])
  (ag . [(0 42) nil "A front-end for ag ('the silver searcher'), the C ack replacement." single "marmalade"])
  (ahg . [(0 99) nil "Alberto's Emacs interface for Mercurial (Hg)" single "marmalade"])
  (alchemist . [(0 12 0) ((emacs (24))) "Elixir tooling integration into emacs" tar "marmalade"])
  (align-cljlet . [(0 3) ((clojure-mode (1 11 5))) "Space align various Clojure forms" single "marmalade"])
  (alpha . [(1 0) nil "increase frame transparency" single "marmalade"])
  (ample-theme . [(0 12) ((color-theme (6 5 5))) "Calm Dark Theme for Emacs" single "marmalade"])
  (ample-zen-theme . [(0 2) nil "AmpleZen Theme for Emacs 24" single "marmalade"])
  (anaphora . [(1 0 0) nil "anaphoric macros providing implicit temp variables" single "marmalade"])
  (android-mode . [(0 4 0) nil "Minor mode for Android application development" single "marmalade"])
  (angular-snippets . [(0 2 3) ((s (1 4 0)) (dash (1 2 0))) "Yasnippets for AngularJS" tar "marmalade"])
  (ansible-doc . [(0 3) ((emacs (24 1))) "Ansible documentation Minor Mode" single "marmalade"])
  (anzu . [(0 22) nil "Show number of matches in mode-line while searching" single "marmalade"])
  (aok . [(0 1) nil "various useful ways to do `multi-occur'" single "marmalade"])
  (apache-mode . [(2 0) nil "major mode for editing Apache configuration files" single "marmalade"])
  (applescript-mode . [(1 1) nil "major mode for editing AppleScript source" single "marmalade"])
  (apt-utils . [(1 212) nil "Emacs interface to APT (Debian package management)" single "marmalade"])
  (apt-utils-ido . [(0 2) ((apt-utils (1 212))) "Ido commands for apt-utils" single "marmalade"])
  (ariadne . [(0 1) ((bert (0 1))) "Ariadne plugin for Emacs" single "marmalade"])
  (ascii . [(3 1) nil "ASCII code display." single "marmalade"])
  (assemblage-theme . [(20130715 621) nil "a dark theme for Emacs 24" single "marmalade"])
  (auto-complete . [(1 4) ((popup (0 5))) "Auto Completion for GNU Emacs" tar "marmalade"])
  (auto-complete-etags . [(0 2) ((auto-complete (1 3))) "Auto-complete etags" single "marmalade"])
  (auto-complete-octave . [(0 1) nil "Auto-complete for Octave" single "marmalade"])
  (auto-complete-verilog . [(0 0) nil "Verukig" single "marmalade"])
  (auto-highlight-symbol . [(1 55) nil "Automatic highlighting current symbol minor mode" single "marmalade"])
  (auto-indent-mode . [(0 126) nil "Auto indent Minor mode" single "marmalade"])
  (autopair . [(0 3) nil "Automagically pair braces and quotes like TextMate" single "marmalade"])
  (awk-it . [(0 77) nil "Run AWK interactively on region!" single "marmalade"])
  (babcore . [(0 0 5) nil "Core Emacs configuration. This should be the minimum in every emacs config." single "marmalade"])
  (back-button . [(0 6 6) ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Visual navigation through mark rings" single "marmalade"])
  (backtrace-mode . [(0 0 10) nil "A better way to browse /var/log/messages files" single "marmalade"])
  (bang . [(0 1 0) nil "A modern list library for Emacs" single "marmalade"])
  (bar-cursor . [(1 1) nil "package used to switch block cursor to a bar" single "marmalade"])
  (batch-mode . [(1 0) nil "major mode for editing ESRI batch scrips" single "marmalade"])
  (bbcode-mode . [(1 1 0) nil "Major mode for writing BBCode markup" single "marmalade"])
  (bbdb-ext . [(0 1) ((bbdb (2 36))) "Extra commands for BBDB" single "marmalade"])
  (bbdb2erc . [(0 1 0) nil "make bbdb show if pal is online with ERC, click i to chat" single "marmalade"])
  (bert . [(0 1) nil "BERT serialization library for Emacs" single "marmalade"])
  (better-defaults . [(0 1 2) nil "Fixing weird quirks and poor defaults" single "marmalade"])
  (bigint . [(1 0 0) nil "A simple bigint package for emacs" single "marmalade"])
  (bitlbee . [(1 0) nil "Help get Bitlbee (http://www.bitlbee.org) up and running" single "marmalade"])
  (bitly . [(1 0) nil "Shorten URLs using the bitly.com shortener service" single "marmalade"])
  (bm . [(1 53) nil "Visible bookmarks in buffer." single "marmalade"])
  (boxquote . [(1 23) nil "Quote text with a semi-box." single "marmalade"])
  (browse-kill-ring . [(2 0 0) nil "interactively insert items from kill-ring" single "marmalade"])
  (browse-url-dwim . [(0 6 6) ((string-utils (0 3 2))) "Context-sensitive external browse URL or Internet search" single "marmalade"])
  (bs-ext . [(0 2) nil "Extensions to emacs buffer-selection library (bs.el)" single "marmalade"])
  (bubbleberry-theme . [(0 1 2) ((emacs (24 1))) "A theme based on LightTable for Emacs24" single "marmalade"])
  (buffer-file-utils . [(1 0) nil "utilities operating on a buffer and the associated file" single "marmalade"])
  (buffer-move . [(0 6 1) nil "" single "marmalade"])
  (buffer-stack . [(1 5) nil "Enhanced intelligent switch-to-other-buffer replacement." single "marmalade"])
  (buffer-utils . [(0 1 0) nil "Buffer-manipulation utility functions" single "marmalade"])
  (bufshow . [(0 1 0) nil "A simple presentation tool for Emacs." tar "marmalade"])
  (bug-reference-github . [(0 2 0) nil "Automatically set `bug-reference-url-format' in Github repositories." single "marmalade"])
  (butler . [(0 2 0) ((deferred (3 1)) (json (1 2))) "Emacs client for Jenkins" tar "marmalade"])
  (button-lock . [(1 0 0) nil "Clickable text defined by regular expression" single "marmalade"])
  (c-eldoc . [(0 7) nil "helpful description of the arguments to C functions" single "marmalade"])
  (cache . [(0 1) nil "implementation of a hash table whose key-value pairs expire" single "marmalade"])
  (cacoo . [(2 1 2) ((concurrent (0 3 1))) "Minor mode for Cacoo : http://cacoo.com" tar "marmalade"])
  (calfw-gcal . [(0 0 3) nil "edit Google calendar for calfw.el." single "marmalade"])
  (caml . [(3 12 0 1) nil "OCaml code editing commands for Emacs" tar "marmalade"])
  (cdlatex . [(4 0) nil "Fast input methods for LaTeX environments and math" single "marmalade"])
  (cedit . [(0 0 0) nil "paredit-like commands for c-like languages" single "marmalade"])
  (center-text . [(0 8) nil "Center the text in a fixed-width column" single "marmalade"])
  (centered-cursor-mode . [(0 5 1) nil "cursor stays vertically centered" single "marmalade"])
  (charmap . [(0 0 1) nil "Unicode table for Emacs" single "marmalade"])
  (checkbox . [(0 2 1) ((emacs (24)) (cl-lib (0 5))) "Quick manipulation of textual checkboxes" single "marmalade"])
  (chicken-scheme . [(1 3 0) nil "Scheme-mode extensions for Chicken Scheme" single "marmalade"])
  (chm-view . [(0 2 2) nil "View CHM file." single "marmalade"])
  (cider . [(0 8 2) ((clojure-mode (3 0 0)) (cl-lib (0 5)) (dash (2 4 1)) (pkg-info (0 4)) (emacs (24)) (queue (0 1 1))) "Clojure Integrated Development Environment and REPL" tar "marmalade"])
  (circe . [(1 5) ((lui (1 5)) (lcs (1 5))) "Client for IRC in Emacs" tar "marmalade"])
  (citrus-mode . [(0 0 2) nil "Major mode for editing Citrus files" single "marmalade"])
  (cl-format . [(1 1) nil "CL format routine." tar "marmalade"])
  (cl-lib-highlight . [(1 0 0) ((cl-lib (0 3))) "full cl-lib font-lock highlighting" single "marmalade"])
  (clips-mode . [(0 7) nil "Major mode for editing CLIPS code and REPL" tar "marmalade"])
  (clj-mode . [(0 9) nil "basic Major mode (clj) for Clojure code" single "marmalade"])
  (clj-refactor . [(0 13 0) ((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2)) (cider (0 6 0))) "A collection of clojure refactoring functions" single "marmalade"])
  (cljdoc . [(0 1 0) nil "eldoc mode for clojure" single "marmalade"])
  (cljsbuild-mode . [(0 2 0) nil "A minor mode for the ClojureScript 'lein cljsbuild' command" single "marmalade"])
  (clojure-env . [(0 0 4) nil "manage clojure environments with Emacs" single "marmalade"])
  (clojure-here . [(0 11) nil "Clojure process in a buffer" single "marmalade"])
  (clojure-mode . [(4 0 1) ((emacs (24 1))) "Major mode for Clojure code" single "marmalade"])
  (clojure-mode-extra-font-locking . [(3 0 0) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" single "marmalade"])
  (clojure-project . [(1 0) ((project-mode (1 0))) "Extends project-mode for Clojure projects" single "marmalade"])
  (clojure-project-mode . [(1 0) ((project-mode (1 0))) "Extends project-mode for Clojure projects" single "marmalade"])
  (clojurescript-mode . [(0 5) nil "Major mode for ClojureScript code" single "marmalade"])
  (closure-lint-mode . [(0 1) nil "minor mode for the Closure Linter" single "marmalade"])
  (closure-template-html-mode . [(0 1) nil "highlighting for google closure templates" single "marmalade"])
  (cloud-to-butt-erc . [(1 0 0) nil "Replace 'the cloud' with 'my butt'" single "marmalade"])
  (clues-theme . [(20130908 801) ((emacs (24 0))) "an Emacs 24 theme which may well be fully awesome..." single "marmalade"])
  (cm-mode . [(0 1 0) nil "Wrapper for CodeMirror-style Emacs modes" single "marmalade"])
  (cmake-mode . [(20110824) nil "Major mode for editing CMake sources." single "marmalade"])
  (cmake-project . [(0 7) nil "Integrates CMake build process with Emacs" single "marmalade"])
  (cmuclojure . [(0 2) nil "Clojure process in a buffer" single "marmalade"])
  (cobra-mode . [(1 0 1) nil "Major mode for .NET-based Cobra language" single "marmalade"])
  (code-headers . [(0 7) nil "Navigate code with headers embedded in comments.  -*- mode: Emacs-Lisp; lexical-binding: t; -*" single "marmalade"])
  (coffee-mode . [(0 3 0) nil "Major mode to edit CoffeeScript files in Emacs" single "marmalade"])
  (col-highlight . [(22 0) ((vline (1 10))) "Highlight the current column." single "marmalade"])
  (color-file-completion . [(1 0 1) nil "add colors to file completion" single "marmalade"])
  (color-theme . [(6 6 1) nil "install color themes" single "marmalade"])
  (color-theme-actress . [(0 2 2) ((color-theme (6 6 1))) "A dark color theme for GNU Emacs." single "marmalade"])
  (color-theme-buffer-local . [(0 0 2) nil "Install color-themes by buffer." single "marmalade"])
  (color-theme-cobalt . [(0 0 2) ((color-theme (6 6 1))) "Cobalt Color Theme for Emacs" single "marmalade"])
  (color-theme-complexity . [(0 1 1) ((color-theme (6 6 0))) "A black and green color theme for Emacs." single "marmalade"])
  (color-theme-dg . [(0 1 0) ((color-theme (6 6 0))) "A black and green color theme for Emacs." single "marmalade"])
  (color-theme-dpaste . [(0 0 1) ((color-theme (6 6 1))) "Dpaste color theme for GNU Emacs." single "marmalade"])
  (color-theme-eclipse . [(0 0 2) ((color-theme (6 6 1))) "Eclipse color theme for GNU Emacs." single "marmalade"])
  (color-theme-emacs-revert-theme . [(0 1) nil "Color-theme revert to emacs colors" single "marmalade"])
  (color-theme-github . [(0 0 3) ((color-theme (6 6 1))) "Github color theme for GNU Emacs." single "marmalade"])
  (color-theme-gruber-darker . [(1) ((color-theme (6 6 1))) "Gruber Darker color theme for Emacs by Jason Blevins" single "marmalade"])
  (color-theme-heroku . [(1 0 0) nil "Heroku color theme" single "marmalade"])
  (color-theme-ir-black . [(1 0 1) ((color-theme (6 6 1))) "pastel color theme" single "marmalade"])
  (color-theme-library . [(0 0 10) ((color-theme (6 6 1))) "The real color theme functions" single "marmalade"])
  (color-theme-molokai . [(0 1) nil "Molokai color theme by Lloyd" single "marmalade"])
  (color-theme-monokai . [(0 0 5) ((color-theme (6 5 5))) "Monokai Color Theme for Emacs." single "marmalade"])
  (color-theme-railscasts . [(0 0 2) ((color-theme (6 6 1))) "Railscasts color theme for GNU Emacs." single "marmalade"])
  (color-theme-sanityinc-solarized . [(2 25) nil "A version of Ethan Schoonover's Solarized themes" tar "marmalade"])
  (color-theme-sanityinc-tomorrow . [(1 10) nil "A version of Chris Kempson's various Tomorrow themes" tar "marmalade"])
  (color-theme-solarized . [(20120301) nil "Solarized themes for Emacs" tar "marmalade"])
  (color-theme-tango . [(0 0 2) ((color-theme (6 6 1))) "Tango palette color theme for GNU Emacs." single "marmalade"])
  (color-theme-tangotango . [(0 0 2) ((color-theme (6 6 1))) "Tango Palette color theme for Emacs." single "marmalade"])
  (color-theme-twilight . [(0 1) nil "Twilight Colour Theme for Emacs." single "marmalade"])
  (color-theme-vim-insert-mode . [(0 1) nil "Color theme VIM insert mode" single "marmalade"])
  (color-theme-wombat . [(0 0 1) ((color-theme (6 6 1))) "The wombat color theme for Emacs." single "marmalade"])
  (color-theme-x . [(1 3) nil "convert color themes to X11 resource settings" single "marmalade"])
  (color-theme-zenburn . [(0 3) ((color-theme (6 6 1))) "A low contrast color theme for Emacs." single "marmalade"])
  (colour-region . [(0 4) nil "Toggle regions of the buffer with different text snippets" single "marmalade"])
  (combinators . [(0 0 1) nil "" single "marmalade"])
  (comint-better-defaults . [(1 0) nil "better defaults for comint-derived modes" single "marmalade"])
  (command-frequency . [(1 1) nil "Track command frequencies" single "marmalade"])
  (command-stats . [(0 1) nil "Track frequency of commands executed in emacs" single "marmalade"])
  (command-t . [(0 0 1) ((find-file-in-project (3 2)) (popwin (0 4))) "Finds file in project using fuzzy search." single "marmalade"])
  (company-cmake . [(0 1) ((company (0 6 8))) "company-mode completion back-end for CMake" single "marmalade"])
  (company-inf-ruby . [(0 2) ((company (0 6 10)) (inf-ruby (2 2 7))) "company-mode completion back-end for inf-ruby" single "marmalade"])
  (concurrent . [(0 3 1) ((deferred (0 3 1))) "Concurrent utility functions for emacs lisp" single "marmalade"])
  (config-block . [(0 0 1) nil "config-block is utility for individual settings (e.g. .emacs)." single "marmalade"])
  (confluence . [(1 6) ((xml-rpc (1 6 7))) "Confluence major mode" tar "marmalade"])
  (control-lock . [(1 1 2) nil "Like caps-lock, but for your control key.  Give your pinky a rest!" single "marmalade"])
  (cppcheck . [(1 0) nil "run cppcheck putting hits in a grep buffer" single "marmalade"])
  (cpputils-cmake . [(0 4 8) nil "Easy real time C++ syntax check and intellisense if you use CMake" tar "marmalade"])
  (creds . [(0 0 6 1) ((s (1 9 0)) (dash (2 5 0))) "A parser credentials file library (not limited to credentials entries)" tar "marmalade"])
  (creole . [(1 0 6) ((noflet (0 0 3)) (kv (0 0 17))) "A parser for the Creole Wiki language" single "marmalade"])
  (creole-mode . [(0 0 5) nil "a markup mode for creole" single "marmalade"])
  (crontab-mode . [(1 2) nil "Mode for editing crontab files" single "marmalade"])
  (crosshairs . [(22 0) nil "Highlight the current line and column." single "marmalade"])
  (cryptol-mode . [(0 1 0) nil "Cryptol major mode for Emacs" single "marmalade"])
  (csharp-mode . [(0 8 8) nil "C# mode derived mode" tar "marmalade"])
  (ctable . [(0 1 1) nil "Table component for Emacs Lisp" single "marmalade"])
  (ctags . [(1 1 1) nil "Exuberant Ctags utilities for Emacs" single "marmalade"])
  (ctags-update . [(0 1 2) nil "auto update TAGS in parent directory using exuberant-ctags" single "marmalade"])
  (ctypes . [(1 2) nil "Enhanced Font lock support for custom defined types." single "marmalade"])
  (cubicle-mode . [(0 1) nil "Cubicle major mode for emacs" single "marmalade"])
  (cups . [(0 1) nil "CUPS features for Emacs" single "marmalade"])
  (current-story . [(0 1 0) nil "Track and insert current Pivotal Tracker" single "marmalade"])
  (cursor-chg . [(20 1) nil "Change cursor dynamically, depending on the context." single "marmalade"])
  (cycbuf . [(0 5 0) nil "Cycle buffers code by Martin Pohlack, inspired by" single "marmalade"])
  (cygwin-mount . [(2001) nil "Teach EMACS about cygwin styles and mount points." single "marmalade"])
  (d-mode . [(2 0 4) nil "D Programming Language mode for (X)Emacs" tar "marmalade"])
  (dart-mode . [(0 9) nil "Major mode for editing Dart files" single "marmalade"])
  (dash . [(2 10 0) nil "A modern list library for Emacs" single "marmalade"])
  (dash-functional . [(1 2 0) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single "marmalade"])
  (db . [(0 0 7) ((kv (0 0 19))) "A database for EmacsLisp" single "marmalade"])
  (db-pg . [(0 0 3) ((pg (0 12)) (db (0 0 6))) "A PostgreSQL adapter for emacs-db" single "marmalade"])
  (debian-changelog-mode . [(1 96) nil "major mode for Debian changelog files." single "marmalade"])
  (dedicated . [(1 0 0) nil "A very simple minor mode for dedicated buffers" single "marmalade"])
  (deep-thought-theme . [(0 1 1) nil "Emacs 24 theme with the Answer to The Ultimate Question" single "marmalade"])
  (deferred . [(0 3 1) nil "Simple asynchronous functions for emacs lisp" single "marmalade"])
  (deft . [(0 3) nil "quickly browse, filter, and edit plain text notes" single "marmalade"])
  (demo-multifile . [(0 0 2) nil "a demo multifile package." tar "marmalade"])
  (descbinds-anything . [(1 5) ((anything (1 287))) "Yet Another `describe-bindings' with `anything'." single "marmalade"])
  (desktop . [(0 1) nil "save partial status of Emacs when killed" single "marmalade"])
  (desktop-registry . [(1 2 0) nil "Keep a central registry of desktop files" single "marmalade"])
  (diatheke . [(1 0) nil "A minor mode using the diatheke command-line Bible tool" single "marmalade"])
  (diminish . [(0 44) nil "Diminished modes are minor modes with no modeline display" single "marmalade"])
  (dircmp . [(1) nil "Compare and sync directories." single "marmalade"])
  (dired-details . [(1 3 1) nil "make file details hide-able in dired" single "marmalade"])
  (dired-dups . [(0 3) nil "Find duplicate files and display them in a dired buffer" single "marmalade"])
  (dired-efap . [(0 8) nil "Edit Filename At Point in a dired buffer" single "marmalade"])
  (dired-nav-enhance . [(1 0) nil "Enhanced navigation for dired buffers" single "marmalade"])
  (dired-single . [(1 7) nil "reuse the current dired buffer to visit another directory" single "marmalade"])
  (dirtrack-buffer-name-track-mode . [(1 0 0) nil "minor mode to cause shell buffers to reflect the working directory" single "marmalade"])
  (discord . [(0 5) nil "Discordian dates for calendar" single "marmalade"])
  (dispass . [(1 1 2) nil "Emacs wrapper for DisPass" single "marmalade"])
  (dix . [(0 1 0) nil "minor mode for editing Apertium XML dictionary files" single "marmalade"])
  (dizzee . [(0 1 1) nil "A more pleasant way to manage your project's subprocesses in Emacs." tar "marmalade"])
  (django-theme . [(1 3 0) nil "Custom face theme for Emacs" single "marmalade"])
  (dna-mode . [(1 44) nil "a major mode for editing dna sequences" single "marmalade"])
  (doctags . [(0 1) nil "Generation of tags documentation in Doxygen syntax" single "marmalade"])
  (dot-mode . [(1 12) nil "minor mode to repeat typing or commands" single "marmalade"])
  (dotassoc . [(0 0 1) nil "dot access embedded alists" single "marmalade"])
  (downplay-mode . [(0 1) nil "focus attention on a region of the buffer" single "marmalade"])
  (dpaste . [(0 2) nil "Emacs integration for dpaste.com" single "marmalade"])
  (drag-stuff . [(0 0 4) nil "Drag stuff (lines, words, region, etc...) around" single "marmalade"])
  (dropbox . [(0 9 1) ((json (1 2)) (oauth (1 0 3))) "Emacs backend for dropbox" single "marmalade"])
  (drupal-mode . [(0 5 0) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar "marmalade"])
  (drupal-spell . [(0 2 2) nil "Aspell extra dictionary for Drupal" tar "marmalade"])
  (dsvn . [(922257) nil "Subversion interface" single "marmalade"])
  (dtrt-indent . [(0 2 0) nil "Adapt to foreign indentation offsets" single "marmalade"])
  (dummy-package . [(0 0 25) ((timeclock (2 6 1))) "a fake package for the marmalade test suite" single "marmalade"])
  (durendal . [(0 2) ((clojure-mode (1 7)) (slime (20100404)) (paredit (22))) "A bucket of tricks for Clojure and Slime." single "marmalade"])
  (dynamic-fonts . [(0 6 4) ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Set faces based on available fonts" single "marmalade"])
  (ecb . [(2 40) nil "Emacs Code Browser" tar "marmalade"])
  (ecb-snapshot . [(20120830) nil "Emacs Code Browser CVS snapshot" tar "marmalade"])
  (edbi . [(0 1 1) ((concurrent (0 3 1)) (ctable (0 1 1)) (epc (0 1 1))) "Emacs Database Interface" tar "marmalade"])
  (edebug-x . [(1 2) ((dash (1 1 0))) "Extensions for Edebug" single "marmalade"])
  (edit-list . [(0 4) nil "edit a single list" single "marmalade"])
  (editorconfig . [(0 4) nil "EditorConfig Emacs extension" single "marmalade"])
  (egison-mode . [(0 1 4) nil "Egison editing mode" single "marmalade"])
  (eh-basic . [(0 0 2) ((starter-kit (2 0 2)) (browse-kill-ring (1 3 1))) "tuamshu's emacs basic configure" tar "marmalade"])
  (eh-common . [(0 0 1) nil "Tumashu's  emacs functions" single "marmalade"])
  (eh-functions . [(0 0 1) ((starter-kit (2 0 2))) "tuamshu's emacs functions" tar "marmalade"])
  (eh-gnus . [(0 0 6) nil "tuamshu's gnus configure" tar "marmalade"])
  (eh-keybindings . [(0 0 1) ((eh-functions (0 0 1)) (starter-kit-bindings (2 0 2))) "tuamshu's emacs keybindings" tar "marmalade"])
  (eieio . [(1 4) nil "Enhanced Implementation of Emacs Interpreted Objects" single "marmalade"])
  (eimp . [(1 4 0) nil "Emacs Image Manipulation Package" single "marmalade"])
  (el-autoyas . [(0 20) nil "Automatically create Emacs-Lisp Yasnippets" single "marmalade"])
  (el-init . [(20130416) nil "Loader for configuration files" tar "marmalade"])
  (el-spec . [(0 2) nil "ruby's rspec like syntax test frame work" single "marmalade"])
  (el-swank-fuzzy . [(0 1) nil "fuzzy symbol completion." single "marmalade"])
  (el-x . [(0 3 0) ((cl-lib (0 2))) "Emacs-lisp extensions." tar "marmalade"])
  (eldoro . [(0 1 0) nil "A pomodoro timer/tracker that works with org-mode." tar "marmalade"])
  (electric-case . [(2 2 1) nil "insert camelCase, snake_case words without \"Shift\"ing" single "marmalade"])
  (elein . [(0 2 2) nil "running leiningen commands from emacs" single "marmalade"])
  (elfeed . [(1 1 2) ((emacs (24 1))) "an Emacs Atom/RSS feed reader" tar "marmalade"])
  (elfeed-web . [(1 1 0) ((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1))) "web interface to Elfeed" tar "marmalade"])
  (elisp-cache . [(1 15) nil "Faster emacs startup through byte-compiling." single "marmalade"])
  (elisp-depend . [(1 0 2) nil "Parse depend libraries of elisp file." single "marmalade"])
  (elisp-indexer . [(0 0 9) nil "indexing utils for emacslisp" single "marmalade"])
  (elisp-slime-nav . [(0 7) ((cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" single "marmalade"])
  (elixir-mix . [(1 0 0) nil "Emacs integration for Elixir's mix" single "marmalade"])
  (elixir-mode . [(1 0 0) nil "Major mode for editing Elixir files" single "marmalade"])
  (elnode . [(0 9 9 8 8) ((web (0 4 3)) (dash (2 9 0)) (noflet (0 0 14)) (s (1 5 0)) (creole (1 0 6)) (fakir (0 1 9)) (db (0 0 6)) (kv (0 0 19))) "The Emacs webserver." tar "marmalade"])
  (elpa-audit . [(0 4) nil "Handy functions for inspecting and comparing package archives" single "marmalade"])
  (elpa-mirror . [(1 1 2) nil "ELPA mirror from locally installed packages is easy" tar "marmalade"])
  (elpakit . [(2 0 4) ((dash (2 9 0)) (shadchen (1 2)) (noflet (0 0 14)) (s (1 9 0))) "The ELPA package maintainer's friend" tar "marmalade"])
  (elpy . [(1 6 0) ((company (0 8 2)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (pyvenv (1 3)) (yasnippet (0 8 0))) "Emacs Python Development Environment" tar "marmalade"])
  (elscreen . [(1 4 6) nil "Screen for Emacsen" single "marmalade"])
  (emacs-cl . [(0 5) nil "Emacs Common Lisp" tar "marmalade"])
  (emacs-droid . [(0 0 0) nil "Android application development tools for Emacs" single "marmalade"])
  (emacs-xkcd . [(1 0) ((json (1 4))) "View xkcd from Emacs" single "marmalade"])
  (emacsd-tile . [(0 1) nil "tiling windows for emacs" single "marmalade"])
  (emamux . [(0 1) nil "Interact with tmux" single "marmalade"])
  (emmet-mode . [(1 0 10) nil "Unofficial Emmet's support for emacs" single "marmalade"])
  (emms-mark-ext . [(0 3) ((emms (3 0))) "Extra functions for emms-mark-mode and emms-tag-edit-mode" single "marmalade"])
  (emstar . [(1 4) nil "Casual game, like a brainy Pac-Man" tar "marmalade"])
  (enclose . [(0 0 2) nil "Enclose cursor within punctuation pairs" single "marmalade"])
  (env-var-import . [(2 1) nil "Import shell environment variables in GUI Emacs" single "marmalade"])
  (epc . [(0 1 1) ((concurrent (0 3 1)) (ctable (0 1 1))) "A RPC stack for the Emacs Lisp" single "marmalade"])
  (epl . [(0 7) ((cl-lib (0 3))) "Emacs Package Library" single "marmalade"])
  (eprime-mode . [(1 1 2) nil "An E-prime checking mode for Emacs" single "marmalade"])
  (erc-hl-nicks . [(1 3 1) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" single "marmalade"])
  (erc-nick-notify . [(0 2 1) nil "Notify popup for ERC" single "marmalade"])
  (ercn . [(1 0 2) nil "Flexible ERC notifications" single "marmalade"])
  (eredis . [(0 5 0) nil "eredis, a Redis client in emacs lisp" single "marmalade"])
  (erefactor . [(0 6 10) nil "Emacs-Lisp refactoring utilities" single "marmalade"])
  (erlang . [(2 4 1) nil "Major modes for editing and running Erlang" single "marmalade"])
  (ert . [(0) nil "Emacs Lisp Regression Testing" single "marmalade"])
  (ert-x . [(0) ((ert (0))) "Staging area for experimental extensions to ERT" single "marmalade"])
  (ertx . [(0 0 2) nil "Extra useful testing functions for EmacsLisp." single "marmalade"])
  (es-windows . [(0 2) ((cl-lib (0 3)) (emacs (24))) "Window-management utilities" single "marmalade"])
  (eshell-fringe-status . [(1 0 0) nil "Show last status in fringe" single "marmalade"])
  (eshell-manual . [(20141024) nil "An manual for Eshell." tar "marmalade"])
  (esk . [(0 1) nil "Emacs Search Kit - An easy way to find files and/or strings in a project" tar "marmalade"])
  (ess . [(5 14) nil "Edit and interact with statistical programs like R, S-Plus, SAS, Stata and JAGS" tar "marmalade"])
  (ess-R-object-popup . [(0 0 6) nil "popup description of R object" single "marmalade"])
  (ess-smart-underscore . [(0 79) nil "Ess Smart Underscore" single "marmalade"])
  (esxml . [(0 3 0) ((db (0 0 1))) "Handle HTML with lists." tar "marmalade"])
  (etags-select . [(1 13) nil "Select from multiple tags" single "marmalade"])
  (etags-table . [(1 1) nil "Set tags table(s) based on current file" single "marmalade"])
  (evernote-mode . [(0 41) nil "Evernote client for Emacs" tar "marmalade"])
  (everything . [(0 1 5) nil "Bridge to MS Windows desktop-search engine Everything" single "marmalade"])
  (evil . [(1 0 8) ((undo-tree (0 6 3)) (goto-last-change (1 2))) "Extensible Vi layer for Emacs." tar "marmalade"])
  (evil-escape . [(1 6 0) ((emacs (24)) (evil (1 0 9)) (key-chord (0 6))) "Customizable key sequence to escape from insert state and everything else." single "marmalade"])
  (evil-indent-textobject . [(0 2) ((evil (0))) "evil textobjects based on indentation" single "marmalade"])
  (evil-leader . [(0 4 3) ((evil (0))) "let there be <leader>" single "marmalade"])
  (evil-matchit . [(1 3 0) nil "Vim matchit ported into Emacs (requires EVIL)" tar "marmalade"])
  (evil-nerd-commenter . [(1 3 1) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar "marmalade"])
  (evil-numbers . [(0 4) nil "increment/decrement numbers like in vim" single "marmalade"])
  (evil-paredit . [(0 0 1) ((evil (0 0 0)) (paredit (1))) "Paredit support for evil keybindings" single "marmalade"])
  (exec-path-from-shell . [(1 7) nil "Get environment variables such as $PATH from the shell" single "marmalade"])
  (exercism . [(0 0 1) nil "An Emacs mode for submitting current file to exercism.io" single "marmalade"])
  (expand-region . [(0 10 0) nil "Increase selected region by semantic units." tar "marmalade"])
  (expectations-mode . [(0 0 5) ((cider (0 7 0))) "Minor mode for expectations tests" single "marmalade"])
  (express . [(0 6 0) ((string-utils (0 3 2))) "Alternatives to `message'" single "marmalade"])
  (extend-dnd . [(0 5) nil "R drag and Drop" single "marmalade"])
  (eyebrowse . [(0 3 2) ((dash (2 7 0))) "Easy window config switching" single "marmalade"])
  (f . [(0 11 0) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single "marmalade"])
  (fakir . [(0 1 9) ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) "fakeing bits of Emacs" single "marmalade"])
  (fancy-battery . [(0 2) ((emacs (24 1))) "Fancy battery display" single "marmalade"])
  (fancy-mode . [(0 1) nil "Major mode for programming with the Fancy language." single "marmalade"])
  (fastnav . [(1 0 7) nil "Fast navigation and editing routines." single "marmalade"])
  (feature-mode . [(0 4) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar "marmalade"])
  (fic-ext-mode . [(0 1) nil "Show FIXME/TODO/BUG(...) in special face only in comments and strings" single "marmalade"])
  (file-format . [(0 0 4) ((s (1 5 0))) "templates with files as the source" single "marmalade"])
  (fill-column-indicator . [(1 86) nil "Graphically indicate the fill column" single "marmalade"])
  (finalize . [(1 0 0) ((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4))) "finalizers for Emacs Lisp" tar "marmalade"])
  (find-file-in-git-repo . [(0 1 2) nil "Utility to find files in a git repo" single "marmalade"])
  (find-file-in-project . [(3 3) nil "Find files in a project quickly." single "marmalade"])
  (find-file-in-repository . [(1 3) nil "Quickly find files in a git, mercurial or other repository" single "marmalade"])
  (find-things-fast . [(20111123) nil "An emacs mode to find things fast and move around in a project quickly" tar "marmalade"])
  (findr . [(0 7) nil "Breadth-first file-finding facility for (X)Emacs" single "marmalade"])
  (fiplr . [(0 1 3) nil "Fuzzy finder for files in a project." single "marmalade"])
  (fit-frame . [(0) nil "Resize a frame.  In particular, fit a frame to its buffers." single "marmalade"])
  (fixme-mode . [(1 0 2) nil "fixme minor mode to highlight warning words" single "marmalade"])
  (fixmee . [(0 8 4) ((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) "Quickly navigate to FIXME notices in code" single "marmalade"])
  (flatland-theme . [(0 1 2) nil "A simple theme for Emacs." single "marmalade"])
  (flex-autopair . [(0 3) nil "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable." single "marmalade"])
  (flx . [(0 1) nil "fuzzy matching with good sorting" single "marmalade"])
  (flx-ido . [(0 2) ((flx (0 1))) "flx integration for ido" single "marmalade"])
  (flycheck . [(0 22) ((dash (2 4 0)) (pkg-info (0 4)) (let-alist (1 0 1)) (cl-lib (0 3)) (emacs (24 1))) "Modern on-the-fly syntax checking for GNU Emacs" tar "marmalade"])
  (flycheck-cask . [(0 2 1) ((emacs (24 1)) (flycheck (0 14)) (dash (2 4 0))) "Cask support in Flycheck" single "marmalade"])
  (flycheck-color-mode-line . [(0 3) ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) "Change mode line color with Flycheck status" single "marmalade"])
  (flycheck-haskell . [(0 4) ((flycheck (0 16)) (haskell-mode (13 7)) (dash (2 4 0)) (f (0 11 0))) "Flycheck: Cabal projects and sandboxes" tar "marmalade"])
  (flycheck-hdevtools . [(0 2) ((flycheck (0 15))) "A flycheck checker for Haskell using hdevtools" single "marmalade"])
  (flycheck-ledger . [(0 2) ((flycheck (0 15))) "Flycheck integration for ledger files" single "marmalade"])
  (flycheck-ocaml . [(0 2) ((emacs (24 1)) (flycheck (0 22 -3 1)) (merlin (2 0)) (let-alist (1 0 3))) "Flycheck: OCaml support" single "marmalade"])
  (flycheck-tcl . [(0 4) ((flycheck (0 17))) "A flycheck checker for Tcl using ActiveState's tclchecker" single "marmalade"])
  (flymake . [(0 4 16) nil "a universal on-the-fly syntax checker" single "marmalade"])
  (flymake-checkers . [(0 5) nil "Transition package to Flycheck" single "marmalade"])
  (flymake-coffee . [(0 12) ((flymake-easy (0 1))) "A flymake handler for coffee script" single "marmalade"])
  (flymake-css . [(0 3) ((flymake-easy (0 1))) "Flymake support for css using csslint" single "marmalade"])
  (flymake-csslint . [(1 1 0) ((flymake (0 3))) "making flymake work with CSSLint" tar "marmalade"])
  (flymake-cursor . [(1 0 2) ((flymake (0 3))) "Show flymake messages in the minibuffer after delay" tar "marmalade"])
  (flymake-d . [(0 1) nil "A flymake handler for d-mode files" single "marmalade"])
  (flymake-easy . [(0 9) nil "Helpers for easily building flymake checkers" single "marmalade"])
  (flymake-elixir . [(0 5) nil "A flymake handler for elixir-mode .ex files." single "marmalade"])
  (flymake-go . [(2013 3 14) ((flymake (0 4 13))) "A flymake handler for go-mode files" single "marmalade"])
  (flymake-haml . [(0 7) ((flymake-easy (0 1))) "A flymake handler for haml files" single "marmalade"])
  (flymake-haskell-multi . [(0 3) ((flymake-easy (0 1))) "Syntax-check haskell-mode using both ghc and hlint" single "marmalade"])
  (flymake-hlint . [(0 2) ((flymake-easy (0 1))) "A flymake handler for haskell-mode files using hlint" single "marmalade"])
  (flymake-jshint . [(1 0) nil "making flymake work with JSHint" single "marmalade"])
  (flymake-jslint . [(0 10) ((flymake-easy (0 1))) "A flymake handler for javascript using jslint" single "marmalade"])
  (flymake-json . [(0 1) ((flymake-easy (0 1))) "A flymake handler for json using jsonlint" single "marmalade"])
  (flymake-less . [(0 3) ((less-css-mode (0 15))) "Flymake handler for LESS stylesheets (lesscss.org)" single "marmalade"])
  (flymake-lua . [(1 0) nil "Flymake for Lua" single "marmalade"])
  (flymake-perlcritic . [(1 0 3) ((flymake (0 3))) "Flymake handler for Perl to invoke Perl::Critic" tar "marmalade"])
  (flymake-php . [(0 5) ((flymake-easy (0 1))) "A flymake handler for php-mode files" single "marmalade"])
  (flymake-phpcs . [(1 0 5) ((flymake (0 3))) "Flymake handler for PHP to invoke PHP-CodeSniffer" tar "marmalade"])
  (flymake-puppet . [(1 0 0) ((flymake-easy (0 9))) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" single "marmalade"])
  (flymake-python-pyflakes . [(0 9) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" single "marmalade"])
  (flymake-racket . [(0 40) ((flymake-easy (0 1))) "A flymake handler for scheme-mode files" single "marmalade"])
  (flymake-ruby . [(0 8) ((flymake-easy (0 1))) "A flymake handler for ruby-mode files" single "marmalade"])
  (flymake-sass . [(0 6) ((flymake-easy (0 1))) "Flymake handler for sass files" single "marmalade"])
  (flymake-shell . [(0 8) ((flymake-easy (0 1))) "A flymake syntax-checker for shell scripts" single "marmalade"])
  (flyspell-lazy . [(0 6 6) nil "Improve flyspell responsiveness using idle timers" single "marmalade"])
  (fm . [(20130612 1) nil "follow mode for compilation/output buffers" single "marmalade"])
  (fold-dwim . [(1 2) nil "Unified user interface for Emacs folding modes" single "marmalade"])
  (fold-dwim-org . [(0 5) ((fold-dwim (1 2))) "Fold DWIM bound to org key-strokes." single "marmalade"])
  (fold-this . [(0 1 0) nil "Just fold this region please" single "marmalade"])
  (font-utils . [(0 7 0) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single "marmalade"])
  (fooddice . [(0 1) nil "Help me I am hungry and dont know what to eat!" single "marmalade"])
  (form-feed . [(0 1 5) nil "Display ^L glyphs as horizontal lines" single "marmalade"])
  (fpaste . [(0 1 3) nil "Send text to http://fpaste.org" single "marmalade"])
  (frame-restore . [(0 5) ((emacs (24 1))) "Restore Emacs frame" single "marmalade"])
  (frame-tag . [(0 1 0) nil "Minor mode that assigns a unique number to each frame for easy switching" single "marmalade"])
  (framesize . [(0 0 5) ((key-chord (0 5 20080915))) "change the size of frames in Emacs" single "marmalade"])
  (fringe-helper . [(1 0 1) nil "helper functions for fringe bitmaps" single "marmalade"])
  (fsvn . [(0 9 13) nil "Another frontend of subversion." tar "marmalade"])
  (full-ack . [(0 2 3) nil "a front-end for ack" single "marmalade"])
  (fullscreen-mode . [(0 0 1) nil "fullscreen window support for Emacs" single "marmalade"])
  (furl . [(0 0 2) nil "Friendly URL retrieval" single "marmalade"])
  (fuzzy . [(0 1) nil "Fuzzy Matching" single "marmalade"])
  (fuzzy-format . [(0 1 1) nil "select indent-tabs-mode and format code automatically." single "marmalade"])
  (fuzzy-match . [(1 4) nil "fuzzy matching" single "marmalade"])
  (gandalf-theme . [(0 1) nil "Gandalf color theme" single "marmalade"])
  (garoon . [(0 0 1) nil "A Garoon client." single "marmalade"])
  (gather . [(1 0 4) nil "Gather string in buffer." single "marmalade"])
  (gccsense . [(0 2) nil "GCCSense client for Emacs" single "marmalade"])
  (geben . [(0 26) nil "A remote debugging environment for Emacs." tar "marmalade"])
  (gecf . [(0 1 0) nil "G\366ktu's Emacs configuration framework." single "marmalade"])
  (geiser . [(0 6) nil "GNU Emacs and Scheme talk to each other" tar "marmalade"])
  (generate-autoloads . [(0 0 10) nil "A package to help you lazy-load everything" single "marmalade"])
  (gerrit-download . [(0 2) ((magit (20130828 1540))) "Show gerrit reviews in a diff buffer." single "marmalade"])
  (gh . [(0 8 2) ((eieio (1 4)) (pcache (0 2 4)) (logito (0 1))) "A GitHub library for Emacs" tar "marmalade"])
  (ghc . [(1 10 2) ((haskell-mode (2 8 0))) "Happy Haskell programming on Emacs" tar "marmalade"])
  (ghci-completion . [(0 1 3) nil "Completion for GHCi commands in inferior-haskell buffers" single "marmalade"])
  (gimme . [(2 1) nil "The XMMS2 interface we all love! Check out http://gimmeplayer.org for more info." tar "marmalade"])
  (gist . [(1 2 1) ((eieio (1 4)) (gh (0 8 1)) (tabulated-list (0))) "Emacs integration for gist.github.com" single "marmalade"])
  (git-auto-commit-mode . [(4 3 0) nil "Emacs Minor mode to automatically commit and push" single "marmalade"])
  (git-commit . [(0 1) nil "Major mode for editing git commit messages" single "marmalade"])
  (git-commit-mode . [(0 13) nil "Major mode for editing git commit messages" single "marmalade"])
  (git-draft . [(0 0 2) ((dash (2 9 0))) "draft git commit messages" single "marmalade"])
  (git-gutter . [(0 78) ((cl-lib (0 5)) (emacs (24))) "Port of Sublime Text plugin GitGutter" single "marmalade"])
  (git-gutter-fringe . [(0 12) ((git-gutter (0 42)) (fringe-helper (0 1 1))) "Fringe version of git-gutter.el" single "marmalade"])
  (gitattributes-whitespace . [(1 20141128) nil "configure whitespace settings from gitattributes" single "marmalade"])
  (gitconfig . [(1 0 0) nil "Emacs lisp interface to work with git-config variables" single "marmalade"])
  (gitconfig-mode . [(0 3) nil "Major mode for editing .gitconfig files" single "marmalade"])
  (github-browse-file . [(0 4 0) ((cl-lib (0 5))) "View the file you're editing on GitHub" single "marmalade"])
  (github-theme . [(0 0 3) nil "Github color theme for GNU Emacs 24" single "marmalade"])
  (gitignore-mode . [(0 1) nil "Major mode for editing .gitconfig files" single "marmalade"])
  (gitty . [(1 0) nil "vc-mode extension for fast git interaction" single "marmalade"])
  (gnomenm . [(0 0 3) nil "Emacs interface to Gnome nmcli command" single "marmalade"])
  (gnugo . [(2 2 12) nil "Play a game of Go against gnugo" single "marmalade"])
  (gnuplot . [(0 6 0) nil "drive gnuplot from within emacs" single "marmalade"])
  (gnus-summary-ext . [(0 1) ((macro-utils (1 0))) "Extra limit and process mark commands for the gnus summary buffer" single "marmalade"])
  (gnusnotes . [(0 91) nil "Adding per-message notes in gnus summary buffer" single "marmalade"])
  (go-mode . [(20131222) nil "Major mode for the Go programming language" single "marmalade"])
  (go-play . [(0 0 1) nil "Paste to play.golang.org" single "marmalade"])
  (god-mode . [(2 12 0) nil "God-like command entering minor mode" single "marmalade"])
  (google-translate . [(0 10 4) nil "Emacs interface to Google Translate." tar "marmalade"])
  (gopher . [(0 0 2) nil "easily access and navigate Gopher servers" single "marmalade"])
  (gotham-theme . [(1 0) nil "A very dark Emacs color theme." single "marmalade"])
  (goto-chg . [(1 6) nil "goto last change" single "marmalade"])
  (goto-last-change . [(1 2) nil "Move point through buffer-undo-list positions" single "marmalade"])
  (gplusify . [(1 0) nil "Add Google Plus markup to a piece of code" single "marmalade"])
  (grails-mode . [(0 1) nil "minor-mode that adds some Grails project management to a grails project" single "marmalade"])
  (graphviz-dot-mode . [(0 3 7) nil "Mode for the dot-language used by graphviz (att)." single "marmalade"])
  (grapnel . [(0 5 3) nil "HTTP request lib with flexible callback dispatch" single "marmalade"])
  (gratuitous-dark-theme . [(1 3) nil "A theme originally by 'cofi' from #emacs, Freenode. It is a combination of Monokai and several other themes. The modeline has been modelled after AwesomeWM because it looks cool." single "marmalade"])
  (grep-a-lot . [(1 0 7) nil "manages multiple search results buffers for grep.el" single "marmalade"])
  (grep-o-matic . [(1 0 6) nil "auto grep word under cursor" single "marmalade"])
  (grin . [(1 0) nil "run grin and grind (python replacements for grep and find) putting hits in a grep buffer" single "marmalade"])
  (grizzl . [(0 1 1) ((cl-lib (0 1))) "Fuzzy Search Library & Completing Read" tar "marmalade"])
  (groovy-mode . [(201203310931) nil "Groovy mode derived mode" single "marmalade"])
  (grr . [(1 0 0) nil "Simple Growl notifications for Emacs and Mac OS X" single "marmalade"])
  (gruber-darker-theme . [(0 6) nil "Gruber Darker color theme for Emacs 24." single "marmalade"])
  (gtags . [(3 3) nil "gtags facility for Emacs" single "marmalade"])
  (guess-offset . [(0 1 1) nil "Automatically determine c-basic-offset" single "marmalade"])
  (guile-scheme . [(0 1) nil "Guile Scheme editing mode" single "marmalade"])
  (guru-mode . [(0 2) nil "Become an Emacs guru" single "marmalade"])
  (gvpr-mode . [(0 1 0) nil "A major mode offering basic syntax coloring for gvpr scripts." single "marmalade"])
  (hackernews . [(0 2 1) ((json (1 2))) "Access the hackernews aggregator from Emacs" tar "marmalade"])
  (haml-mode . [(3 1 8) ((ruby-mode (1 0))) "Major mode for editing Haml files" single "marmalade"])
  (handlebars-mode . [(1 3) nil "A major mode for editing Handlebars files." single "marmalade"])
  (handlebars-sgml-mode . [(0 1 0) nil "Add Handlebars contextual indenting support to sgml-mode" single "marmalade"])
  (hardcore-mode . [(1 0 0) nil "Disable arrow keys + optionally backspace and return" single "marmalade"])
  (hardhat . [(0 4 4) ((ignoramus (0 7 0))) "Protect against clobbering user-writable files" single "marmalade"])
  (haskell-mode . [(13 7) nil "A Haskell editing mode" tar "marmalade"])
  (haste . [(1) ((json (1 2))) "Emacs client for hastebin (http://hastebin.com/about.md)" single "marmalade"])
  (haxe-mode . [(0 3 1) nil "An Emacs major mode for haXe" single "marmalade"])
  (header2 . [(21 0) nil "Support for creation and update of file headers." single "marmalade"])
  (helm-ag . [(0 4) ((helm (1 0))) "the silver search with helm interface" single "marmalade"])
  (helm-dash . [(1 1) ((helm (0 0 0))) "Helm extension to search dash docsets" single "marmalade"])
  (helm-delicious . [(1 3) nil "helm extensions for delicious bookmarks" single "marmalade"])
  (helm-gtags . [(0 9 2) ((helm (1 0))) "GNU GLOBAL helm interface" single "marmalade"])
  (helm-helm-commands . [(0 2) ((helm (1 5 4))) "List all helm commands with helm" single "marmalade"])
  (helm-projectile . [(0 10 0) ((helm (1 4 0)) (projectile (0 10 0))) "Helm integration for Projectile" single "marmalade"])
  (heroku . [(1 1 0) nil "Interface to Heroku apps." single "marmalade"])
  (heroku-theme . [(1 1 0) nil "Heroku color theme" single "marmalade"])
  (hexrgb . [(21 0) nil "Functions to manipulate colors, including RGB hex strings." single "marmalade"])
  (hide-comnt . [(40) nil "Hide/show comments in code." tar "marmalade"])
  (hide-lines . [(20130623 1701) nil "Commands for hiding lines based on a regexp" single "marmalade"])
  (hideshowvis . [(0 5) nil "Add markers to the fringe for regions foldable by hideshow.el" single "marmalade"])
  (highlight . [(21 0) nil "Highlighting commands." single "marmalade"])
  (highlight-current-line . [(0 57) nil "highlight line where the cursor is." single "marmalade"])
  (highlight-escape-sequences . [(0 1) nil "Highlight escape sequences" single "marmalade"])
  (highlight-indentation . [(0 5 0) nil "Function for highlighting indentation" single "marmalade"])
  (highlight-parentheses . [(1 0 1) nil "highlight surrounding parentheses" single "marmalade"])
  (highlight-sexp . [(1 0) nil "highlight current zone according to its context" single "marmalade"])
  (highlight-symbol . [(1 1) nil "automatic and manual symbol highlighting" single "marmalade"])
  (highline . [(7 2 2) nil "minor mode to highlight current line in buffer" single "marmalade"])
  (hippie-expand-haskell . [(0 0 1) nil "Hippie expand try function using ghc's completion function." single "marmalade"])
  (hippie-expand-slime . [(0 1) nil "Hook slime's completion into hippie-expand" single "marmalade"])
  (hippie-namespace . [(0 5 8) nil "Special treatment for namespace prefixes in hippie-expand" single "marmalade"])
  (hive . [(0 1 1) ((sql (3 0))) "Hive SQL mode extension" single "marmalade"])
  (hjkl-mode . [(0 1) ((key-chord (0 5))) "import some vim's key bindings" tar "marmalade"])
  (hl-sentence . [(2) nil "highlight a sentence based on customizable face" single "marmalade"])
  (hl-sexp . [(1 0 0) nil "highlight the current sexp" single "marmalade"])
  (hl-spotlight . [(0) nil "Extension of hl-line.el to spotlight current few lines." single "marmalade"])
  (hlinum . [(1 0) nil "Extension for linum.el to highlight current line number" single "marmalade"])
  (hook-utils . [(1 0) nil "Add a few utility functions for manipulating hooks" single "marmalade"])
  (how-many-lines-in-project . [(0 3) ((find-file-in-project (3 3))) "Calculate how many lines are there in your project." single "marmalade"])
  (ht . [(1 5) nil "The missing hash table library for Emacs" single "marmalade"])
  (html-script-src . [(0 0 2) nil "Insert <script src=\"..\"> for popular JavaScript libraries" single "marmalade"])
  (htmlfontify . [(0 21) nil "htmlise a buffer/source tree with optional hyperlinks" single "marmalade"])
  (htmlize . [(1 39) nil "Convert buffer text and decorations to HTML." single "marmalade"])
  (http-twiddle . [(1 0) nil "send & twiddle & resend HTTP requests" single "marmalade"])
  (httpcode . [(0 1) nil "explains the meaning of an HTTP status code" single "marmalade"])
  (httpd . [(1 0 1) nil "HTTP/1.0 web server for emacs" single "marmalade"])
  (hungry-delete . [(1 1 2) nil "hungry delete minor mode" single "marmalade"])
  (huskie . [(0 0 2) ((anaphora (0 0 6))) "chainsaw powered logging" single "marmalade"])
  (iasm-mode . [(0 1) nil "interactive assembly major mode." single "marmalade"])
  (ibuffer-vc . [(0 7) ((cl-lib (0 2))) "Group ibuffer's list by VC project, or show VC status" single "marmalade"])
  (ical-pull . [(0 0 2) ((shadchen (1 2)) (dash (2 9 0)) (s (1 9 0)) (noflet (0 0 14))) "pull ical feeds into org-agenda" single "marmalade"])
  (idle-highlight . [(1 0) nil "highlight the word the point is on" single "marmalade"])
  (idle-highlight-mode . [(1 1 2) nil "highlight the word the point is on" single "marmalade"])
  (idle-require . [(1 0) nil "load elisp libraries while Emacs is idle" single "marmalade"])
  (ido-better-flex . [(0 2) nil "A better flex (fuzzy) algorithm for Ido." single "marmalade"])
  (ido-gnus . [(0 4) ((gnus (5 13))) "Access gnus groups or servers using ido" single "marmalade"])
  (ido-load-library . [(0 2 0) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Load-library alternative using ido-completing-read" single "marmalade"])
  (ido-select-window . [(0 1 0) nil "Select a window using ido and buffer names." tar "marmalade"])
  (ido-ubiquitous . [(2 10) ((emacs (24 1))) "Use ido (nearly) everywhere." single "marmalade"])
  (ido-vertical-mode . [(0 1 1) nil "Makes ido-mode display vertically." single "marmalade"])
  (ido-yes-or-no . [(1 1) ((ido (0))) "Use Ido to answer yes-or-no questions" single "marmalade"])
  (idomenu . [(0 1) nil "imenu tag selection with ido" single "marmalade"])
  (iedit . [(0 97) nil "Edit multiple regions in the same way simultaneously." tar "marmalade"])
  (ignoramus . [(0 7 2) nil "Ignore backups, build files, et al." single "marmalade"])
  (igrep . [(2 113) nil "An improved interface to `grep` and `find`" single "marmalade"])
  (imgur . [(0 1) ((anything (1 287))) "imgur client for Emacs" single "marmalade"])
  (immutant-server . [(1 0 1) nil "Run your Immutant server in Emacs" single "marmalade"])
  (inf-clojure . [(1 0 0) ((emacs (24 1)) (clojure-mode (4 0))) "an inferior-clojure mode" single "marmalade"])
  (inf-groovy . [(2 0) nil "minor-mode that adds some Grails project management to a grails project" single "marmalade"])
  (inf-ruby . [(2 3 2) nil "Run a Ruby process in a buffer" single "marmalade"])
  (inform-mode . [(1 6 2) nil "Major mode for Inform 6 interactive fiction code" single "marmalade"])
  (initchart . [(0 1 1) ((cl-lib (0 3))) "Emacs' init process performance visualization" single "marmalade"])
  (inline-crypt . [(0 1 4) nil "Simple inline encryption via openssl" tar "marmalade"])
  (insert-shebang . [(0 9 3) nil "Insert shebang line automatically." single "marmalade"])
  (ipython . [(2927) nil "Adds support for IPython to python-mode.el" single "marmalade"])
  (ir-black-theme . [(1 0) nil "Port of ir-black theme" single "marmalade"])
  (iregister . [(0 5 0) nil "Interactive register commands for Emacs." tar "marmalade"])
  (irfc . [(0 5 6) nil "Interface for IETF RFC document." single "marmalade"])
  (isea . [(0 0 2) ((elpakit (0 0 18))) "interactive server eval at mode, a comint for a daemonized emacs" single "marmalade"])
  (isearch-switch . [(1 0) nil "switch the manner you are isearching in." single "marmalade"])
  (isgd . [(20130927) nil "Shorten URLs using the isgd.com shortener service" single "marmalade"])
  (issue-tracker . [(0 0 1) nil "Poor man's issue tracker" tar "marmalade"])
  (ix . [(0 7) ((grapnel (0 5 3))) "Emacs client for http://ix.io pastebin" single "marmalade"])
  (iy-go-to-char . [(1 0) nil "Go to next CHAR which is similar to \"f\" in vim" single "marmalade"])
  (j-mode . [(0 3) nil "Major mode for editing J programs" single "marmalade"])
  (jabber . [(0 8 90) nil "A Jabber client for Emacs." tar "marmalade"])
  (jade-mode . [(0 1) nil "Major mode for editing jade templates." single "marmalade"])
  (jam-mode . [(0 3) nil "Font-lock support for Jam files" single "marmalade"])
  (jasmin . [(1 2) nil "major editing mode for Jasmin Java bytecode assembler files" single "marmalade"])
  (jaunte . [(0 0 0) nil "Emacs Hit a Hint" single "marmalade"])
  (java-file-create . [(1 0) nil "automatically insert contents of empty java files" single "marmalade"])
  (javap . [(8) nil "Javap major mode" single "marmalade"])
  (javap-mode . [(9) nil "Javap major mode" single "marmalade"])
  (javarun . [(0 1 1) nil "Minor mode for quick development of Java programs" single "marmalade"])
  (jb-misc-macros . [(0 4) ((macro-utils (1 0))) "Miscellaneous macros" single "marmalade"])
  (jcuken-fix . [(1 0) nil "Map Modifier-CyrillicLetter to the underlying Modifier-LatinLetter." single "marmalade"])
  (jedi . [(0 1 2) ((epc (0 1 0)) (auto-complete (1 4))) "Python auto-completion for Emacs" tar "marmalade"])
  (jenkins-watch . [(1 2) nil "Watch continuous integration build status" single "marmalade"])
  (jinja2-mode . [(0 1) nil "A major mode for jinja2" single "marmalade"])
  (jira . [(0 3 3) nil "Connect to JIRA issue tracking software" single "marmalade"])
  (journal . [(1 2 1) nil "a simple org-mode based journaling mode" single "marmalade"])
  (js-comint . [(0 0 1) nil "Run javascript in an inferior process window." single "marmalade"])
  (json . [(1 2) nil "JavaScript Object Notation parser / generator" single "marmalade"])
  (json-mode . [(1 2 0) nil "Major mode for editing JSON files" single "marmalade"])
  (json-snatcher . [(1 0) nil "Grabs the path to JSON values in a JSON file." single "marmalade"])
  (jujube-theme . [(0 1) nil "Pastel theme loosely based on jellybeans" single "marmalade"])
  (jump . [(2 3) ((findr (0 7)) (inflections (1 1))) "build functions which contextually jump between files" single "marmalade"])
  (jump-char . [(0 1) nil "navigation by char" single "marmalade"])
  (jump-dls . [(0 6) nil "Jump to definition of symbol using various methods." single "marmalade"])
  (kanban . [(0 1 3) nil "Parse org-todo headlines to use org-tables as Kanban tables" single "marmalade"])
  (karma . [(0 1 0) nil "Karma Test Runner Emacs Integration" single "marmalade"])
  (key-choices . [(0 201) ((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1))) "Key Choices -- Also Viper has different colors in different modes" single "marmalade"])
  (key-chord . [(0 5 20080915) nil "map pairs of simultaneously pressed keys to commands" single "marmalade"])
  (key-combo . [(1 5 1) nil "map key sequence to commands" single "marmalade"])
  (keyfreq . [(0 0 3) ((json (1 2))) "track command frequencies" single "marmalade"])
  (keywiz . [(1 4) nil "Emacs key sequence quiz" single "marmalade"])
  (kmacro-decision . [(1 5) ((el-x (1 0)) (jb-misc-macros (0 2))) "Add conditional branching to keyboard macros" single "marmalade"])
  (kpm-list . [(1 0) nil "An emacs buffer list that tries to intelligently group together buffers." single "marmalade"])
  (kv . [(0 0 19) nil "key/value data structure functions" single "marmalade"])
  (kwin . [(0 1) nil "communcate with the KWin window manager" single "marmalade"])
  (lacarte . [(22 0) nil "Execute menu items as commands, with completion." single "marmalade"])
  (lang-refactor . [(0 1 1) nil "Simple refactorings, primarily for Perl" single "marmalade"])
  (langtool . [(1 2 1) nil "Grammar check utility using LanguageTool" single "marmalade"])
  (late-night-theme . [(0 0) nil "Late Night theme for Emacs 24" single "marmalade"])
  (latest-clojars . [(0 3) nil "Clojure dependency resolver" single "marmalade"])
  (latest-clojure-libraries . [(0 5) nil "Clojure dependency resolver" single "marmalade"])
  (latex-pretty-symbols . [(1 0) nil "Display many latex symbols as their unicode counterparts" single "marmalade"])
  (latex-preview-pane . [(20140205) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar "marmalade"])
  (layout-restore . [(0 4) nil "keep window configuration as layout and restore it simply." single "marmalade"])
  (lcs . [(1 5) nil "find out the longest common sequence" single "marmalade"])
  (legalese . [(20120706) nil "Add legalese to your program files" single "marmalade"])
  (lentic . [(0 6) ((dash (2 5 0)) (m-buffer (0 8)) (emacs (24))) "One buffer as a view of another" tar "marmalade"])
  (less-css-mode . [(0 18) nil "Major mode for editing LESS CSS files (lesscss.org)" single "marmalade"])
  (let-recur . [(0 0 5) nil "Simplified implementation of recur" single "marmalade"])
  (levenshtein . [(1 0) nil "Edit distance between two strings." single "marmalade"])
  (lexbind-mode . [(0 9) nil "Puts the value of lexical-binding in the mode line" single "marmalade"])
  (lib-requires . [(21 0) nil "Commands to list Emacs Lisp library dependencies." single "marmalade"])
  (linear-undo . [(5 2) nil "Intuitive undo/redo." single "marmalade"])
  (lineno . [(0 1) nil "Alternate mode to display line numbers." single "marmalade"])
  (linky-client . [(0 0 2) nil "a client for linky.elnode.org" single "marmalade"])
  (linum-off . [(0 1) nil "Provides an interface for turning line-numbering off" single "marmalade"])
  (lisp-editing . [(0 0 5) nil "lisp editing tools" single "marmalade"])
  (lisp-infection . [(0 0 10) nil "Commands to *enhance* S-exp editing" single "marmalade"])
  (lispyscript-mode . [(0 3 1) nil "Major mode for LispyScript code." single "marmalade"])
  (list-register . [(2 2) nil "List register" single "marmalade"])
  (list-utils . [(0 4 2) nil "List-manipulation utility functions" single "marmalade"])
  (livecoder . [(0 0 2) nil "tools for live coders" single "marmalade"])
  (livescript-mode . [(0 0 1) nil "Major mode for LiveScript files in Emacs" single "marmalade"])
  (livid-mode . [(0 1 0) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single "marmalade"])
  (load-theme-buffer-local . [(0 0 2) nil "Install emacs24 color themes by buffer." single "marmalade"])
  (logito . [(0 1) ((eieio (1 3))) "logging library for Emacs" single "marmalade"])
  (lolcode-mode . [(0 2) nil "Major mode for editing LOLCODE" single "marmalade"])
  (look-dired . [(0 1) ((look-mode (1 0))) "Extensions to look-mode for dired buffers" single "marmalade"])
  (look-mode . [(1 0) nil "quick file viewer for image and text file browsing" single "marmalade"])
  (loop . [(1 1) nil "friendly imperative loop structures" single "marmalade"])
  (lorem-ipsum . [(0 1) nil "Insert dummy pseudo Latin text." single "marmalade"])
  (lua-mode . [(20110428) nil "a major-mode for editing Lua scripts" single "marmalade"])
  (lui . [(1 5) ((tracking (1 5))) "Linewise User Interface" tar "marmalade"])
  (lxc . [(0 0 2) nil "lxc integration with Emacs" single "marmalade"])
  (lyskom . [(20131008) nil "LysKOM elisp client." single "marmalade"])
  (m-buffer . [(0 8) ((emacs (24 3)) (dash (2 5 0))) "Buffer Manipulation Functions" tar "marmalade"])
  (mac-key-mode . [(2010 1 3) nil "provide mac-style key bindings on Carbon Emacs" single "marmalade"])
  (macro-utils . [(1 0) nil "Utilities for writing macros." single "marmalade"])
  (macrostep . [(0 8) nil "interactive macro stepper for Emacs Lisp" single "marmalade"])
  (mactag . [(0 0 1) nil "Mode for automatically handle multiple tags files with Mactag rubygem" single "marmalade"])
  (magit . [(1 2 2) nil "Control Git from Emacs." tar "marmalade"])
  (magit-find-file . [(1 0 4) ((magit (1 2 0))) "completing-read over all files in Git" single "marmalade"])
  (magit-gh-pulls . [(0 3) ((gh (0 4 3)) (magit (1 1 0))) "GitHub pull requests extension for Magit" single "marmalade"])
  (magit-simple-keys . [(1 0 0) ((magit (1 0 0))) "simple keybindings for Magit" single "marmalade"])
  (magit-tramp . [(0 1 0) ((magit (1 2 0))) "git method for TRAMP" single "marmalade"])
  (maildir . [(0 0 28) ((kv (0 0 17)) (dash (2 3 0)) (s (1 9 0)) (noflet (0 0 8))) "Simple maildir based MUA." tar "marmalade"])
  (main-line . [(1 2 8) nil "modeline replacement forked from an early version of powerline.el" single "marmalade"])
  (mainline . [(1 1 0) nil "modeline replacement forked from an early version of powerline.el" single "marmalade"])
  (makefile-runner . [(1 1 2) nil "Searches for Makefile and fetches targets" single "marmalade"])
  (man-commands . [(1 1) nil "Add interactive commands for every manpages installed in your computer." single "marmalade"])
  (margo . [(2012 9 18) ((web (0 1 8)) (json (1 2))) "Client for MarGo, providing Go utilities" single "marmalade"])
  (mark . [(0 3) ((fm (1 0))) "Navigate and visualize the mark-ring" single "marmalade"])
  (mark-more-like-this . [(1 0) nil "Mark additional regions in buffer matching current region." single "marmalade"])
  (mark-multiple . [(1 0) nil "A library that sorta lets you mark several regions at once" single "marmalade"])
  (mark-tools . [(0 3) nil "Some simple tools to access the mark-ring in Emacs" single "marmalade"])
  (markdown-mode . [(2 0) nil "Emacs Major mode for Markdown-formatted text files" single "marmalade"])
  (markdown-toc . [(0 0 7) ((markdown-mode (2 0)) (dash (2 5 0)) (s (1 7 0))) "A simple TOC generator for markdown file" single "marmalade"])
  (markup-faces . [(1 0 0) nil "collection of faces for markup language modes" single "marmalade"])
  (marmalade . [(0 0 4) ((furl (0 0 2))) "Elisp interface for the Emacs Lisp package server." single "marmalade"])
  (marmalade-client . [(0 0 12) ((web (0 5 2)) (kv (0 0 19)) (gh (0 8 0))) "client for marmalade API from emacs" single "marmalade"])
  (marmalade-demo . [(0 0 5) nil "a demonstration elpa package" single "marmalade"])
  (marmalade-service . [(2 0 16) ((dash (1 1 0)) (s (1 6 0)) (kv (0 0 16)) (noflet (0 0 7)) (elnode (0 9 9 8 6)) (file-format (0 0 1)) (htmlize (1 3 9))) "The Marmalade package store service." tar "marmalade"])
  (marmalade-test . [(0 0 1) nil "A test tarball package." tar "marmalade"])
  (marmalade-upload . [(0 0 5) ((web (0 4 2)) (kv (0 0 19))) "upload client for marmalade from emacs" single "marmalade"])
  (marshal . [(0 3 1) ((eieio (1 4)) (json (1 4))) "eieio extension for automatic (un)marshalling" single "marmalade"])
  (master-mode . [(0 1) nil "Become an Emacs master" single "marmalade"])
  (math-at-point . [(0 0 1) nil "Utilities for modifying numbers at point" single "marmalade"])
  (maxframe . [(0 5 1) nil "maximize the emacs frame based on display size" single "marmalade"])
  (mbe . [(0 1) ((emacs (24)) (cl-lib (0 5))) "Macros by Example" single "marmalade"])
  (mc-jump . [(1 0 0) nil "like \"jump-char\", but \"multiple-cursors\" friendly" single "marmalade"])
  (mediawiki . [(2 2 3) nil "mediawiki frontend" single "marmalade"])
  (memoize . [(1 0 1) nil "Memoization functions" single "marmalade"])
  (message-templ . [(0 1 20141026) nil "Templates for message-mode." single "marmalade"])
  (mic-paren . [(3 8) nil "advanced highlighting of matching parentheses" single "marmalade"])
  (midje-mode . [(0 1 2) ((slime (1 0)) (clojure-mode (1 0))) "Minor mode for running Midje tests in emacs, see: https://github.com/dnaumov/midje-mode" tar "marmalade"])
  (minimal-session-saver . [(0 6 2) nil "Very lean session saver" single "marmalade"])
  (minimap . [(1 0) nil "Sidebar showing a \"mini-map\" of a buffer" single "marmalade"])
  (minitest . [(0 5) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" single "marmalade"])
  (mldonkey . [(0 0 4) nil "Multi-networks peer-to-peer client." tar "marmalade"])
  (mo-git-blame . [(0 1 0) nil "An interactive, iterative 'git blame' mode for Emacs" single "marmalade"])
  (mocker . [(0 3 0) ((eieio (1 3)) (el-x (0 2 4))) "mocking framework for emacs" single "marmalade"])
  (mode-compile . [(2 29) nil "Smart command for compiling files" single "marmalade"])
  (mode-icons . [(0 1 0) nil "Show icons for modes" tar "marmalade"])
  (modeline-posn . [(22 0) nil "Set up `mode-line-position'." single "marmalade"])
  (modtime-skip-mode . [(0 9) nil "Minor mode for disabling modtime and supersession checks on files." single "marmalade"])
  (moinmoin-mode . [(1 0) ((screen-lines (0 55))) "a major mode to edit MoinMoin wiki pages" single "marmalade"])
  (mongo . [(0 5) nil "A MongoDB client." tar "marmalade"])
  (mongo-elnode . [(0 5 0) ((mongo (0 5)) (elnode (0 9 9))) "elnode adapter for mongo-el" single "marmalade"])
  (monky . [(0 1) nil "control Hg from Emacs." single "marmalade"])
  (monokai-theme . [(0 0 12) nil "DEPRECATED: Monokai Color Theme for Emacs." single "marmalade"])
  (monroe . [(0 2 0) nil "Yet another client for nREPL" single "marmalade"])
  (mote-mode . [(1 0 0) ((ruby-mode (1 1))) "Mote minor mode" single "marmalade"])
  (move-line . [(0 0 1) nil "utilities for moving lines in file" single "marmalade"])
  (move-text . [(1 0) nil "Move current line or region with M-up or M-down." single "marmalade"])
  (multi . [(2 0 1) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" single "marmalade"])
  (multi-eshell . [(0 0 1) nil "makes it easier to use multiple shells within emacs" single "marmalade"])
  (multi-project . [(0 0 16) nil "Easily work with multiple projects." single "marmalade"])
  (multi-term . [(0 8 8) nil "Managing multiple terminal buffers in Emacs." single "marmalade"])
  (multi-web-mode . [(0 1) nil "multiple major mode support for web editing" single "marmalade"])
  (multiple-cursors . [(1 3 0) nil "Multiple cursors for Emacs." tar "marmalade"])
  (mustache . [(0 20) ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) "a mustache templating library in emacs lisp" tar "marmalade"])
  (mustache-mode . [(1 2) nil "A major mode for editing Mustache files." single "marmalade"])
  (mv-shell . [(1 2) nil "keep buffers in sync with filename throughout 'mv'commands in shell-mode." single "marmalade"])
  (mwe-log-commands . [(20041106) nil "log keyboard commands to buffer" single "marmalade"])
  (my-packages . [(0 1 0) nil "Package Initialization." single "marmalade"])
  (n3-mode . [(20071215) nil "mode for Notation 3" single "marmalade"])
  (namakemono . [(0 0 1) nil "utility function set for namakemono" single "marmalade"])
  (nav-flash . [(1 1 0) nil "Briefly highlight the current line" single "marmalade"])
  (navigate . [(0 1 5) nil "Seamlessly navigate between Emacs and tmux" single "marmalade"])
  (nginx-mode . [(1 1) nil "major mode for editing nginx config files" single "marmalade"])
  (nimrod-mode . [(0 1 5) ((auto-complete (1 4))) "A major mode for the Nimrod programming language" single "marmalade"])
  (no-easy-keys . [(1 0 2) nil "Learn the proper Emacs movement keys" single "marmalade"])
  (nodejs-repl . [(0 0 2 1) nil "Run Node.js REPL" single "marmalade"])
  (noflet . [(0 0 15) nil "locally override functions" single "marmalade"])
  (nose . [(0 1 1) nil "Easy Python test running in Emacs" single "marmalade"])
  (nose-mode . [(0 1) ((nose (0 1 1))) "Minor mode for running nose tests." tar "marmalade"])
  (notify . [(2010 8 20) nil "notification front-end" single "marmalade"])
  (notmuch-labeler . [(0 1) nil "Improves notmuch way of displaying labels through fonts, pictures, and hyperlinks." tar "marmalade"])
  (nrepl-decompile . [(0 0 1) ((nrepl (0 1 7)) (javap-mode (9))) "decompilation extension for nrepl.el" single "marmalade"])
  (nrepl-discover . [(0 0 1) nil "Client to load commands from nrepl server" single "marmalade"])
  (nrepl-ritz . [(0 6 0) ((nrepl (0 1 5))) "nrepl extensions for ritz" single "marmalade"])
  (nsis-mode . [(0 44) nil "NSIS-mode" single "marmalade"])
  (nssh-n . [(0 9 8) nil "SSH mode for Emacs" single "marmalade"])
  (ntcmd . [(1 0) nil "major mode for editing cmd scripts" single "marmalade"])
  (nurumacs . [(3 5 4) nil "smooth-scrolling and minimap, like sublime editor" single "marmalade"])
  (nzenburn-theme . [(20130513) nil "A low contrast color theme for Emacs." single "marmalade"])
  (oauth . [(1 0 3) nil "An Emacs oauth client. See https://github.com/psanford/emacs-oauth/" tar "marmalade"])
  (ob-sml . [(0 2) ((sml-mode (6 4))) "org-babel functions for template evaluation" single "marmalade"])
  (occur-default-current-word . [(1 0) nil "Have M-x occur default to the word at point" single "marmalade"])
  (occur-x . [(0 1 1) nil "Extra functionality for occur" single "marmalade"])
  (octomacs . [(0 0 1) nil "Octopress interface for Emacs" single "marmalade"])
  (oddmuse . [(20090222) nil "edit pages on an Oddmuse wiki" single "marmalade"])
  (offlineimap . [(0 1) nil "Run OfflineIMAP from Emacs" single "marmalade"])
  (om-mode . [(0 5 20140916) nil "Insert Om component template with life cycle." single "marmalade"])
  (openstack-cgit-browse-file . [(0 2) nil "Browse the current file in OpenStack cgit" single "marmalade"])
  (openwith . [(20120531) nil "Open files with external programs" single "marmalade"])
  (operate-on-number . [(1 1 0) nil "Operate on number at point with arithmetic functions" single "marmalade"])
  (org-blog . [(1 18 1 1) nil "create and publish a blog with org-mode" single "marmalade"])
  (org-cliplink . [(0 2) nil "insert org-mode links by URL from the clipboard" single "marmalade"])
  (org-cua-dwim . [(0 5) nil "Org-mode and Cua mode compatibility layer" single "marmalade"])
  (org-dotemacs . [(0 3) ((org (7 9 3)) (cl-lib (1 0))) "Store your emacs config as an org file, and choose which bits to load." single "marmalade"])
  (org-ehtml . [(0 20131014) ((elnode (20130416 1626)) (org-plus-contrib (20131007))) "Export Org-mode files as editable web pages" tar "marmalade"])
  (org-email . [(3 0 1) ((shadchen (1 2)) (dash (2 9 0)) (noflet (0 0 12))) "use org for an email database" single "marmalade"])
  (org-gnome . [(0 1) ((notify (2010 8 20)) (telepathy (0 1))) "Orgmode integration with the GNOME desktop" single "marmalade"])
  (org-journal . [(1 6 4) nil "a simple org-mode based journaling mode" single "marmalade"])
  (org-magit . [(0 2 2) ((magit (1 2 0)) (org (6 1))) "basic support for magit links" single "marmalade"])
  (org-mime . [(20120112) nil "org html export for text/html MIME emails" single "marmalade"])
  (org-outlook . [(0 3) nil "Outlook org" single "marmalade"])
  (org-presie . [(0 0 5) ((framesize (0 0 1)) (eimp (1 4 0)) (org (7 8 9))) "simple presentation with an org file" single "marmalade"])
  (org-protocol-jekyll . [(0 1) nil "Jekyll's handler for org-protocol" single "marmalade"])
  (org-publish-agenda . [(1 7) nil "Publish org agenda with links to other files" single "marmalade"])
  (org-readme . [(20130322 926) ((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0))) "Integrates Readme.org and Commentary/Change-logs." single "marmalade"])
  (org-table-comment . [(0 2) nil "Org table comment modes." single "marmalade"])
  (org-trello . [(0 6 8) ((request-deferred (0 1 0)) (deferred (0 3 2)) (s (1 9 0)) (dash (2 8 0)) (emacs (24))) "Minor mode to synchronize org-mode buffer and trello board" tar "marmalade"])
  (org2blog . [(0 5) ((org (7 7)) (xml-rpc (1 6 8))) "Blog from Org mode to wordpress" tar "marmalade"])
  (org2jekyll . [(0 1 1) ((dash (2 10 0)) (dash-functional (1 2 0)) (s (1 9 0)) (deferred (0 3 1))) "Minor mode to publish org-mode post to jekyll without specific yaml" single "marmalade"])
  (org2nikola . [(0 0 8) nil "export html and meta data used by static blog like nikola from org file" tar "marmalade"])
  (osx-browse . [(0 8 8) ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) "Web browsing helpers for OS X" single "marmalade"])
  (osx-location . [(0 2) nil "Watch and respond to changes in geographical location on OS X" tar "marmalade"])
  (osx-pseudo-daemon . [(1 0) nil "Daemon mode that plays nice with OSX." single "marmalade"])
  (otp . [(1 0) nil "a one-time password creator" single "marmalade"])
  (otter-mode . [(1 2) nil "Major mode for source files of the Otter automated theorem prover" single "marmalade"])
  (outlined-elisp-mode . [(1 0 5) nil "outline-minor-mode settings for emacs lisp" single "marmalade"])
  (overseer . [(0 1 0) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4))) "Ert-runner Integration Into Emacs." single "marmalade"])
  (oz . [(16513) nil "Major mode for editing Oz programs" tar "marmalade"])
  (p4 . [(11 0) nil "Perforce-Emacs Integration Library" single "marmalade"])
  (pabbrev . [(4 1) nil "Predictive abbreviation expansion" single "marmalade"])
  (package . [(1 0 1) ((tabulated-list (1 0))) "Simple package system for Emacs" single "marmalade"])
  (package-store . [(0 3) nil "a package cache" single "marmalade"])
  (page-break-lines . [(0 9) nil "Display ugly ^L page breaks as tidy horizontal lines" single "marmalade"])
  (pager . [(2 0) nil "windows-scroll commands" single "marmalade"])
  (pager-default-keybindings . [(1 1) nil "Add the default keybindings suggested for pager.el" single "marmalade"])
  (palimpsest . [(0 8) nil "Various deletion strategies when editing" single "marmalade"])
  (palimpsest-mode . [(0 8) nil "Various deletion strategies when editing" single "marmalade"])
  (paredit . [(22) nil "minor mode for editing parentheses" single "marmalade"])
  (paredit-everywhere . [(0 3) ((paredit (22))) "Enable some paredit features in non-lisp buffers" single "marmalade"])
  (paredit-menu . [(1 0) nil "Adds a menu to paredit.el as memory aid" single "marmalade"])
  (parenface . [(1 1) nil "Provide a face for parens in lisp modes." single "marmalade"])
  (parenface-plus . [(1 1) nil "Provide a face for parens in lispy modes." tar "marmalade"])
  (parenface-reversion . [(1 2) nil "Provide a face for parens in lisp modes." single "marmalade"])
  (parenface2 . [(1 1) nil "Provide a face for parens in lisp modes." single "marmalade"])
  (parscope . [(0 1 0) nil "Minor mode for showing the current scope in Lisp-like languages." single "marmalade"])
  (paste-kde . [(0 6) ((web (0 3 6))) "paste text to KDE's pastebin service" single "marmalade"])
  (pastebin . [(0 1) nil "A simple interface to the www.pastebin.com webservice" single "marmalade"])
  (pastels-on-dark-theme . [(0 3) nil "Pastels on Dark theme for Emacs 24" single "marmalade"])
  (pbcopy . [(0 1 0) nil "OS X clipboard integration for Emacs" single "marmalade"])
  (pc-mode . [(0 1) nil "major mode for editing PC code," single "marmalade"])
  (pcache . [(0 2 4) ((eieio (1 3))) "persistent caching for Emacs" single "marmalade"])
  (pcmpl-args . [(0 1 1) nil "Enhanced shell command completion" single "marmalade"])
  (pcre2el . [(1 5) ((cl-lib (0 3))) "parse, convert, and font-lock PCRE, Emacs and rx regexps" single "marmalade"])
  (pcsv . [(1 3 3) nil "Parser of csv" single "marmalade"])
  (pde . [(0 2 16) nil "Perl Development Environment" tar "marmalade"])
  (peep-open . [(0 0 2) nil "PeepOpen plugin for emacs." single "marmalade"])
  (peepopen . [(0 1 0) nil "Graphical file chooser for Emacs on Mac OS X." single "marmalade"])
  (pep8 . [(1 2) nil "run the python pep8 checker putting hits in a grep buffer" single "marmalade"])
  (perl-myvar . [(1 23) nil "Declare lexicaly scoped vars as my()." single "marmalade"])
  (perlbrew . [(0 1) ((cl (0))) "basic support for perlbrew environments" single "marmalade"])
  (perlcritic . [(1 10) nil "minor mode for Perl::Critic integration" single "marmalade"])
  (persistent-soft . [(0 8 8) ((pcache (0 2 3)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single "marmalade"])
  (perspective . [(1 10) nil "switch between named \"perspectives\" of the editor" single "marmalade"])
  (pg . [(0 12) nil "Emacs Lisp interface to the PostgreSQL RDBMS" single "marmalade"])
  (phantomjs . [(0 0 11) nil "Control phantomjs from Emacs			" tar "marmalade"])
  (phi-search . [(1 1 0) nil "inferior isearch compatible with \"multiple-cursors\"" single "marmalade"])
  (php-completion . [(0 3) nil "complete everything PHP with Anything.el" single "marmalade"])
  (php-extras . [(2 2 0 20140405) ((php-mode (1 5 0))) "Extra features for `php-mode'" tar "marmalade"])
  (php-mode . [(1 5 0) nil "major mode for editing PHP code" single "marmalade"])
  (pickup . [(0 0 3) nil "pickup file." single "marmalade"])
  (pinboard . [(0 0 1) nil "get stuff from pinboard" single "marmalade"])
  (pinboard-api . [(0 1) nil "Rudimentary http://pinboard.in integration" single "marmalade"])
  (pivotal-tracker . [(1 2 0) nil "Interact with Pivotal Tracker through its API" single "marmalade"])
  (pkg-info . [(0 5) ((dash (1 6 0)) (epl (0 4))) "Information about packages" single "marmalade"])
  (pkg-info-dummy-package . [(3 4 2 1) nil "pkg-info: Dummy package for unit tests" single "marmalade"])
  (po-elscreen . [(1 4 6) nil "Screen for Emacsen(this is not original. original is http://www.morishima.net/~naoto/elscreen-en/?lang=en)" single "marmalade"])
  (pod-mode . [(20121117 2120) nil "Major mode for editing .pod-files." tar "marmalade"])
  (pointback . [(0 2) nil "Restore window points when returning to buffers" single "marmalade"])
  (pony-mode . [(0 2) nil "Minor mode for working with Django Projects" tar "marmalade"])
  (popup . [(0 5) nil "Visual Popup User Interface" single "marmalade"])
  (popwin . [(0 4) nil "Popup Window Manager." single "marmalade"])
  (pos-tip . [(0 4 5) nil "Show tooltip at point" single "marmalade"])
  (pov-mode . [(3 3) nil "Major mode for editing POV-Ray scene files." tar "marmalade"])
  (powershell . [(0 2 1) nil "run powershell as an inferior shell in emacs" single "marmalade"])
  (pp-c-l . [(1 0) nil "Display Control-l characters in a pretty way" single "marmalade"])
  (pretty-lambdada . [(22 0) nil "Show the word `lambda' as the Greek letter." single "marmalade"])
  (pretty-mode-plus . [(1 2) nil "Redisplay parts of the buffer as pretty symbols." tar "marmalade"])
  (proc-net . [(0 0 1) nil "network process tools" single "marmalade"])
  (processing-mode . [(1 2 1) nil "Major mode for Processing 2.0" single "marmalade"])
  (processing-snippets . [(1 0 0) ((yasnippet (0 8 0))) "Snippets for the Processing major mode" tar "marmalade"])
  (project . [(1 0) nil "Keep track of the current project" single "marmalade"])
  (project-explorer . [(0 13) ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) "A project explorer sidebar" single "marmalade"])
  (projectile . [(0 10 0) ((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single "marmalade"])
  (prolog . [(1 22) nil "major mode for editing and running Prolog (and Mercury) code" single "marmalade"])
  (protobuf-mode . [(0 3) nil "major mode for editing protocol buffers." single "marmalade"])
  (proxy-mode . [(0 9) nil "Provides proxy minor mode." single "marmalade"])
  (ps-ccrypt . [(1 10) nil "reading/writing/loading encrypted files" tar "marmalade"])
  (psci . [(0 0 5) ((purescript-mode (13 10)) (dash (2 9 0)) (s (1 9 0)) (f (0 17 1)) (deferred (0 3 2))) "Major mode for purescript repl psci" single "marmalade"])
  (psgml . [(1 4 1) nil "Lennart Staflin's Psgml package, with Elisp syntax and sgml-validate fixed for Emacsen >=24." tar "marmalade"])
  (psvn . [(1 1 1) nil "Subversion interface for emacs" single "marmalade"])
  (puppet-mode . [(0 3) ((emacs (24 1)) (cl-lib (0 5)) (pkg-info (0 4))) "Major mode for Puppet manifests" single "marmalade"])
  (purple-haze-theme . [(20130930 36) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single "marmalade"])
  (py-import-check . [(0 2) nil "Finds the unused python imports using importchecker" single "marmalade"])
  (pycomplete . [(1 0) nil "Complete symbols at point using Pymacs." single "marmalade"])
  (pyde . [(0 6) ((pymacs (0 25)) (auto-complete (1 4)) (yasnippet (0 8)) (fuzzy (0 1)) (pyvirtualenv (1 0))) "Python Development Environment" single "marmalade"])
  (pyflakes . [(1 0) nil "run the python pyflakes checker putting hits in a grep buffer" single "marmalade"])
  (pylint . [(1 0) nil "run the python pylint checker putting hits in a grep buffer" single "marmalade"])
  (pymacs . [(0 25) nil "Interface between Emacs Lisp and Python" single "marmalade"])
  (pysmell . [(0 7 2) nil "Complete python code using heuristic static analysis" single "marmalade"])
  (pytest . [(0 2 1) nil "Easy Python test running in Emacs" single "marmalade"])
  (python . [(20120402) nil "Python's flying circus support for Emacs" single "marmalade"])
  (python-django . [(0 1) nil "A Jazzy package for managing Django projects" single "marmalade"])
  (python-mode . [(6 1 3) nil "An Emacs mode for editing Python code" tar "marmalade"])
  (python-pep8 . [(1 1) nil "minor mode for running `pep8'" single "marmalade"])
  (python-pylint . [(1 1) nil "minor mode for running `pylint'" single "marmalade"])
  (pyvenv . [(1 4) nil "Python virtual environment interface" single "marmalade"])
  (pyvirtualenv . [(1 1) nil "Python Pyvirtualenv support" single "marmalade"])
  (qsimpleq-theme . [(0 1 3) nil "Based on solarized color theme for Emacs." single "marmalade"])
  (quack . [(0 42) nil "enhanced support for editing and running Scheme code" single "marmalade"])
  (quickrun . [(1 8 4) nil "Run commands quickly" single "marmalade"])
  (r-autoyas . [(0 28) nil "Provides automatically created yasnippets for R function argument lists." single "marmalade"])
  (r5rs . [(1 0) nil "Browse documentation from the R5RS Revised5 Report" single "marmalade"])
  (rainbow-delimiters . [(1 3 21) nil "Highlight nested parens, brackets, braces a different color at each depth." single "marmalade"])
  (rbenv . [(0 0 3) nil "Emacs integration for rbenv" single "marmalade"])
  (rcirc-color . [(0 2) nil "color nicks" single "marmalade"])
  (rcirc-notify . [(0 9) nil "libnotify popups" single "marmalade"])
  (rcirc-robots . [(0 0 7) ((kv (0 0 8)) (anaphora (0 0 5))) "robots based on rcirc irc" single "marmalade"])
  (rcirc-ssh . [(0 0 7) ((kv (0 0 3))) "do irc over ssh sessions" single "marmalade"])
  (rcirc-ucomplete . [(1 0 1) nil "Unambiguous non-cycling completion for rcirc" single "marmalade"])
  (real-auto-save . [(0 3) nil "enable real auto save" single "marmalade"])
  (rect-mark . [(1 4) nil "Mark a rectangle of text with highlighting." single "marmalade"])
  (recursive-narrow . [(20140811 1546) nil "narrow-to-region that operates recursively" single "marmalade"])
  (refheap . [(0 0 6) ((json (1 2))) "A library for pasting to https://refheap.com" single "marmalade"])
  (regex-tool . [(1 2) nil "A regular expression evaluation tool for programmers" single "marmalade"])
  (region-bindings-mode . [(0 1) nil "Enable custom bindings when mark is active." single "marmalade"])
  (region-list-edit . [(20100530 808) nil "Add/delete a region into/from a region list, such as ((4 . 7) (11 . 15) (17 . 17) (20 . 25))." single "marmalade"])
  (relax . [(0 2) ((json (1 2))) "For browsing and interacting with CouchDB" single "marmalade"])
  (remember-theme . [(20140122 1500) nil "Remembers the last theme in use and re-loads for the next session." single "marmalade"])
  (repository-root . [(1 0 4) nil "deduce the repository root directory for a given file" single "marmalade"])
  (request . [(0 2 0) nil "Compatible layer for URL request in Emacs" single "marmalade"])
  (request-deferred . [(0 2 0) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" single "marmalade"])
  (requirejs-mode . [(1 1) nil "Improved AMD module management" single "marmalade"])
  (revive . [(2 19) nil "Resume Emacs." single "marmalade"])
  (rinari . [(2 10) ((ruby-mode (1 0)) (inf-ruby (2 2 1)) (ruby-compilation (0 8)) (jump (2 0))) "Rinari Is Not A Rails IDE" single "marmalade"])
  (rings . [(1 0 1) nil "Buffer rings. Like tabs, but better." single "marmalade"])
  (robe . [(0 7 7) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar "marmalade"])
  (roy-mode . [(0 1 0) nil "Roy major mode" single "marmalade"])
  (rspec-mode . [(1 10) nil "Enhance ruby-mode for RSpec" tar "marmalade"])
  (rubocop . [(0 3) ((dash (1 0 0))) "An Emacs interface for RuboCop" single "marmalade"])
  (ruby-block . [(0 0 11) nil "highlight matching block" single "marmalade"])
  (ruby-compilation . [(2 10) ((inf-ruby (2 2 1))) "run a ruby process in a compilation buffer" single "marmalade"])
  (ruby-end . [(0 3 1) nil "Automatic insertion of end blocks for Ruby" single "marmalade"])
  (ruby-hash-syntax . [(0 3) nil "Toggle ruby hash syntax between classic and 1.9 styles" single "marmalade"])
  (ruby-mode . [(1 1) nil "ruby-mode package" tar "marmalade"])
  (ruby-test-mode . [(1 7) ((ruby-mode (1 0))) "Minor mode for Behaviour and Test Driven" single "marmalade"])
  (ruby-tools . [(0 1 0) nil "Collection of handy functions for ruby-mode" single "marmalade"])
  (rubyinterpol . [(0 1) nil "Ruby-like String Interpolation for format" single "marmalade"])
  (rudel . [(0 3) ((eieio (1 4))) "A collaborative editing framework for Emacs" tar "marmalade"])
  (rust-mode . [(0 1 0) ((cm-mode (0 1 0))) "A major emacs mode for editing Rust source code" single "marmalade"])
  (rvm . [(1 3 0) nil "Emacs integration for rvm" single "marmalade"])
  (rw-hunspell . [(0 2) nil "special functions for Hunspell in ispell.el" single "marmalade"])
  (rw-ispell . [(0 1) nil "additional functions for ispell.el" single "marmalade"])
  (rw-language-and-country-codes . [(0 1) nil "Language & Country Codes" single "marmalade"])
  (s . [(1 9 0) nil "The long lost Emacs string manipulation library." single "marmalade"])
  (s-buffer . [(0 0 4) ((s (1 6 0)) (noflet (0 0 3))) "s operations for buffers" single "marmalade"])
  (sackspace . [(0 8 2) nil "A better backspace" single "marmalade"])
  (sass-mode . [(3 0 16) ((haml-mode (3 0 15))) "Major mode for editing Sass files" single "marmalade"])
  (sauron . [(0 8) nil "Track (erc/org/dbus/...) events and react to them." tar "marmalade"])
  (save-packages . [(0 20121012) nil "save and restore installed packages" single "marmalade"])
  (save-visited-files . [(1 2) nil "save opened files across sessions" single "marmalade"])
  (sawfish . [(1 32) nil "Sawfish mode." single "marmalade"])
  (scala-mode . [(0 0 2) nil "Scala major mode" tar "marmalade"])
  (scheme-here . [(12 8 2008) nil "cmuscheme extension for multiple inferior processes" single "marmalade"])
  (scpaste . [(0 6 3) ((htmlize (1 39))) "Paste to the web via scp." single "marmalade"])
  (scratch . [(20110708) nil "Mode-specific scratch buffers" single "marmalade"])
  (scratch-palette . [(1 0 1) nil "add scratch notes for each file" single "marmalade"])
  (scratch-persist . [(1 1) nil "persist the scratch buffer across sessions" single "marmalade"])
  (scratch-pop . [(1 0 0) nil "popup scratch" single "marmalade"])
  (screen-lines . [(0 55) nil "a minor mode for screen-line-based point motion" single "marmalade"])
  (scrolloff . [(1 0) nil "This mode ofers vim-like scrolloff function" single "marmalade"])
  (scss-mode . [(0 5 0) nil "Major mode for editing SCSS files" single "marmalade"])
  (sea-before-storm-theme . [(0 4 20141114) nil "Sea Before Storm color theme for Emacs 24" single "marmalade"])
  (seclusion-mode . [(1 1 1) nil "Edit in seclusion. A Dark Room mode." single "marmalade"])
  (sedated . [(1 0) nil "A few extremely simple sed functions for familiar text manipulation" single "marmalade"])
  (seethru . [(0 3) ((shadchen (1 4))) "Easily change Emacs' transparency" single "marmalade"])
  (sensitive . [(1 0 1) ((emacs (24)) (sequences (0 1 0))) "A dead simple way to load sensitive information" single "marmalade"])
  (sentence-highlight . [(0 1) nil "highlight the current sentence" single "marmalade"])
  (sequence . [(0 0 1) nil "makes sequences of numbers" single "marmalade"])
  (sequences . [(0 1 0) ((emacs (24))) "Ports of some Clojure sequence functions." single "marmalade"])
  (session . [(2 2 1) nil "use variables, registers and buffer places across sessions" single "marmalade"])
  (session-manager . [(0 5) nil "Support for the Gnome Session Manager" single "marmalade"])
  (setup-cygwin . [(21 0) nil "Set up Emacs for using Cygwin" single "marmalade"])
  (shackle . [(0 2 1) ((cl-lib (0 5))) "Enforce rules for popups" single "marmalade"])
  (shadchen . [(1 4) nil "pattern matching for elisp" single "marmalade"])
  (shell-here . [(1 1) nil "Open a shell relative to the working directory" single "marmalade"])
  (shell-pop . [(0 3) nil "helps you to use shell easily on Emacs. Only one key action to work." single "marmalade"])
  (shell-switcher . [(0 1 5 1) nil "Easily switch between shell buffers, like with alt+tab." tar "marmalade"])
  (shoes-off . [(0 1 8) ((kv (0 0 5)) (anaphora (0 0 4))) "irc bouncer" single "marmalade"])
  (shorten . [(0 3) nil "component-wise string shortener" single "marmalade"])
  (show-css . [(1 1) nil "Show the css of the html attribute the cursor is on" single "marmalade"])
  (show-marks . [(0 4) ((fm (1 0))) "Navigate and visualize the mark-ring" single "marmalade"])
  (simp . [(0 2 0) nil "Simple project definition, chiefly for project file finding and grepping." tar "marmalade"])
  (simple-httpd . [(1 4 5) ((cl-lib (0 3))) "pure elisp HTTP server" single "marmalade"])
  (simple-mode-line . [(0 3) nil "Simplified Mode Line for Emacs 24" single "marmalade"])
  (simpleclip . [(1 0 0) nil "Simplified access to the system clipboard" single "marmalade"])
  (simplezen . [(0 1 1) nil "A simple subset of zencoding-mode for Emacs." single "marmalade"])
  (skewer-less . [(0 2) ((skewer-mode (1 5 3))) "Skewer support for live LESS stylesheet updates" single "marmalade"])
  (skewer-mode . [(1 6 0) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar "marmalade"])
  (skinny . [(0 0 6) ((elnode (0 9 9 6 1)) (creole (0 8 17))) "a blog engine with elnode" single "marmalade"])
  (slamhound . [(2 0 0) nil "Rip Clojure namespaces apart and rebuild them." single "marmalade"])
  (slim-mode . [(1 1) nil "Major mode for editing Slim files" single "marmalade"])
  (slime . [(20100404 1) nil "Superior Lisp Interaction Mode for Emacs" single "marmalade"])
  (slime-clj . [(0 1 6) nil "slime extensions for swank-clj" single "marmalade"])
  (slime-fuzzy . [(20100404) ((slime (20100404))) "Fuzzy symbol completion for Slime" single "marmalade"])
  (slime-js . [(0 0 1) ((slime-repl (20100404)) (slime (20100404))) "Slime extension for swank-js." single "marmalade"])
  (slime-repl . [(20100404) ((slime (20100404))) "Read-Eval-Print Loop written in Emacs Lisp" single "marmalade"])
  (slime-ritz . [(0 6 0) nil "slime extensions for ritz" single "marmalade"])
  (slime-scratch . [(1 0 0) ((slime (20100404))) "Imitate Emacs' *scratch* buffer" single "marmalade"])
  (slough . [(0 1) ((nrepl (0 1 7)) (smartparens (1 4 3))) "package for slough - this is for a secret TW thing" single "marmalade"])
  (smart-forward . [(1 0 0) ((expand-region (0 8 0))) "Semantic navigatioin" single "marmalade"])
  (smart-operator . [(2 0 20110812) nil "Insert operators with surrounding spaces smartly" single "marmalade"])
  (smart-tab . [(0 3) nil "Intelligent tab completion and indentation." single "marmalade"])
  (smart-whitespace-comment-fixup . [(1 1) nil "Enables advice around yanking/killing lines that auto-indents and formats properly" single "marmalade"])
  (smart-window . [(0 6) nil "vim-like window controlling plugin" single "marmalade"])
  (smarter-compile . [(2012 4 9) nil "a smarter wrapper for `compile'" single "marmalade"])
  (smartparens . [(1 4) ((dash (1 1 0))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar "marmalade"])
  (smartrep . [(0 0 3) nil "Support sequential operation which omitted prefix keys." single "marmalade"])
  (smex . [(3 0) nil "M-x interface with Ido-style fuzzy matching." single "marmalade"])
  (sml-modeline . [(0 5) nil "Show position in a scrollbar like way in mode-line" single "marmalade"])
  (smooth-scroll . [(1 2) nil "Minor mode for smooth scrolling and in-place scrolling." single "marmalade"])
  (smooth-scrolling . [(1 0 1) nil "Make emacs scroll smoothly" single "marmalade"])
  (smtpmail-multi . [(0 6) nil "Use different smtp servers for sending mail" single "marmalade"])
  (snakehump . [(0 1 1) nil "Convert between compound word conventions" tar "marmalade"])
  (sokoban . [(1 23) nil "Play the Sokoban game in emacs" single "marmalade"])
  (solarized-theme . [(1 0 0) nil "The Solarized color theme, ported to Emacs." tar "marmalade"])
  (soothe-theme . [(0 3 16) ((emacs (24 1))) "a dark colorful theme for Emacs24." single "marmalade"])
  (sourcetalk . [(1 2 0) ((request (0 2 0))) "SourceTalk (http://sourcetalk.net) plugin for Emacs" single "marmalade"])
  (sparkline . [(1 0 2) ((cl-lib (0 3))) "Make sparkline images from a list of numbers" single "marmalade"])
  (sparql-mode . [(0 8 4) nil "Edit and interactively evaluate SPARQL queries." tar "marmalade"])
  (speck . [(2010 5 25) nil "minor mode for spell checking" single "marmalade"])
  (spotify . [(0 3) nil "Control the spotify application from emacs" single "marmalade"])
  (sprintly-mode . [(0 0 4) ((furl (0 0 2))) "Major mode for dealing with sprint.ly" single "marmalade"])
  (sql-indent . [(1 10) nil "indentation of SQL statements" single "marmalade"])
  (sr-speedbar . [(0 1 8) nil "Same frame speedbar" single "marmalade"])
  (ssh . [(1 2) nil "Support for remote logins using ssh." single "marmalade"])
  (starter-kit . [(2 0 3) ((paredit (22)) (idle-highlight-mode (1 1 1)) (find-file-in-project (3 0)) (smex (1 1 1)) (ido-ubiquitous (0 3)) (magit (0 8 1))) "Saner defaults and goodies." tar "marmalade"])
  (starter-kit-bindings . [(2 0 2) ((starter-kit (2 0 2))) "Saner defaults and goodies: bindings" single "marmalade"])
  (starter-kit-eshell . [(2 0 3) nil "Saner defaults and goodies: eshell tweaks" single "marmalade"])
  (starter-kit-js . [(2 0 1) ((starter-kit (2 0 1))) "Saner defaults and goodies for Javascript" single "marmalade"])
  (starter-kit-lisp . [(2 0 3) ((starter-kit (2 0 2)) (elisp-slime-nav (0 1))) "Saner defaults and goodies for lisp languages" single "marmalade"])
  (starter-kit-ruby . [(2 0 3) ((inf-ruby (2 2 3)) (starter-kit (2 0 1))) "Saner defaults and goodies for Ruby" single "marmalade"])
  (steady-theme . [(0 1 0) nil "A steady theme for Emacs" single "marmalade"])
  (string-edit . [(0 1 0) ((dash (1 2 0))) "Avoid escape nightmares by editing string in separate buffer" single "marmalade"])
  (string-utils . [(0 3 2) ((list-utils (0 4 2))) "String-manipulation utilities" single "marmalade"])
  (stripe-buffer . [(0 2 2) ((cl-lib (1 0))) "Use a different background for even and odd lines" single "marmalade"])
  (stylus-mode . [(0 1) nil "Major mode for editing stylus templates." single "marmalade"])
  (subatomic-theme . [(1 6 0) nil "Low contrast bluish color theme" single "marmalade"])
  (sublime . [(0 0 7) ((coffee-mode (0 3 0)) (find-file-in-project (3 0)) (haml-mode (3 0 14)) (ido-ubiquitous (1 0)) (less-css-mode (0 6)) (magit (1 1 1)) (markdown-mode (1 8 1)) (monokai-theme (0 0 6)) (paredit (22)) (sass-mode (3 0 14)) (smex (1 1 2)) (yaml-mode (0 0 7)) (yasnippet (0 6 1))) "REQUIRES EMACS 24 - Sublime Text 2 Emulation for Emacs" tar "marmalade"])
  (subshell-proc . [(1 0 0) nil "Functions for working with comints" single "marmalade"])
  (sudden-death . [(0 1) nil "Totsuzen-no-Shi" single "marmalade"])
  (sudo-edit . [(0 0 1) nil "Utilities for opening files with sudo" single "marmalade"])
  (sumatra-forward . [(2008 10 8) nil "Provides Sumatra Forward search" single "marmalade"])
  (suomalainen-kalenteri . [(2013 4 18) nil "Finnish national and Christian holidays for calendar" tar "marmalade"])
  (supergenpass . [(0 1) nil "SuperGenPass for Emacs" single "marmalade"])
  (surround . [(0 1) nil "emulate surround.vim from Vim" single "marmalade"])
  (swank-cdt . [(1 0 1) nil "swank-cdt helper functions" single "marmalade"])
  (swarmhacker . [(0 0 1) nil "simple swarm chat" single "marmalade"])
  (switch-window . [(0 9) nil "A *visual* way to choose a window to switch to" single "marmalade"])
  (sws-mode . [(0 1) nil "SWS mode" single "marmalade"])
  (symbols-mode . [(0 3) nil "List symbols of object files" single "marmalade"])
  (synonyms . [(1 0) nil "Look up synonyms for a word or phrase in a thesaurus." single "marmalade"])
  (syntactic-sugar . [(0 9 4) nil "Effect-free forms such as if/then/else" single "marmalade"])
  (syslog-mode . [(2 2) ((hide-lines (20130623))) "Major-mode for viewing log files" single "marmalade"])
  (systemtap-mode . [(0 2) nil "A mode for SystemTap" single "marmalade"])
  (tabbar-ruler . [(0 40) ((tabbar (2 0 1))) "Pretty tabbar, autohide, use both tabbar/ruler" single "marmalade"])
  (tabkey2 . [(1 40) nil "Use second tab key pressed for what you want" single "marmalade"])
  (tabulated-list . [(0) nil "generic major mode for tabulated lists." single "marmalade"])
  (tagedit . [(1 4 0) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" single "marmalade"])
  (tango-2 . [(1 0 0) nil "Tango 2 color theme for GNU Emacs 24" single "marmalade"])
  (tango-2-theme . [(1 0 0) nil "Tango 2 color theme for GNU Emacs 24" single "marmalade"])
  (tbemail . [(0 2) nil "Provide syntax highlighting for email editing via" single "marmalade"])
  (tdd . [(1 0) nil "recompile on save and indicate success in the mode line" single "marmalade"])
  (tdd-status-mode-line . [(0 1 2) nil "TDD status on the mode-line" single "marmalade"])
  (telepathy . [(0 1) nil "Access Telepathy from Emacs" single "marmalade"])
  (template . [(0 1 0) ((request (20140316 417))) "create project templates in Emacs easily" single "marmalade"])
  (test-case-mode . [(0 1 9) nil "unit test front-end" single "marmalade"])
  (tex-smart-umlauts . [(1 2 0) nil "Smart umlaut conversion for TeX." single "marmalade"])
  (text-language . [(0 20121008) nil "tracking, setting, guessing language of text" single "marmalade"])
  (textmate . [(5) nil "TextMate minor mode for Emacs" single "marmalade"])
  (textmate-to-yas . [(0 21) nil "Import Textmate macros into yasnippet syntax" single "marmalade"])
  (theme-changer . [(2 1 0) nil "Sunrise/Sunset Theme Changer for Emacs" single "marmalade"])
  (thesaurus . [(2012 4 7) nil "replace a word with a synonym looked up in a web service." single "marmalade"])
  (thread-dump . [(1 0) nil "java thread dump viewer" single "marmalade"])
  (thumb-through . [(0 3) nil "Plain text reader of HTML documents" single "marmalade"])
  (tidy . [(2 12) nil "Interface to the HTML Tidy program" single "marmalade"])
  (timestamper . [(0 1 0) nil "A minor mode for easy timelogging" single "marmalade"])
  (tintin-mode . [(1 0 0) nil "Mayor mode for editing tintin++ scripts" single "marmalade"])
  (todotxt . [(0 2 3) nil "A major mode for editing todo.txt files" single "marmalade"])
  (toggle-test . [(1 0 2) nil "Toggle between source and test files in various programming languages" single "marmalade"])
  (toml-mode . [(0 1 3) nil "Mojor mode for editing TOML files" single "marmalade"])
  (tommyh-theme . [(1 2) nil "A bright, bold-colored theme for emacs." single "marmalade"])
  (tox . [(20130819 1127) nil "Launch current python test with tox." single "marmalade"])
  (toxi-theme . [(0 1 0) nil "REQUIRES EMACS 24" single "marmalade"])
  (tracking . [(1 5) ((shorten (0 3))) "Buffer modification tracking" single "marmalade"])
  (tron-theme . [(12) nil "A theme loosely based on Tron: Legacy colors" single "marmalade"])
  (troncle . [(0 1 2) ((cider (0 5 0))) "Emacs convenience functions for tracing clojure code" single "marmalade"])
  (tronesque-theme . [(1 5) nil "Color Theme based on Tron universe." single "marmalade"])
  (truthy . [(0 2 8) ((list-utils (0 4 2))) "Test the content of a value" single "marmalade"])
  (try . [(0 0 1) ((emacs (24))) "Try out Emacs packages." single "marmalade"])
  (tsql . [(1 0) nil "customizes sql.el for T-SQL" single "marmalade"])
  (tt-mode . [(20121117 2045) nil "Emacs major mode for editing Template Toolkit files." tar "marmalade"])
  (ttl-mode . [(0 1) nil "mode for Turtle(RDF)" single "marmalade"])
  (ttrss . [(1 7 5) ((emacs (23 1))) "Tiny Tiny RSS elisp bindings" single "marmalade"])
  (tuareg . [(2 0 8) ((caml (3 12 0 1))) "OCaml mode for Emacs" tar "marmalade"])
  (tumble . [(1 5) nil "an Tumblr mode for Emacs" single "marmalade"])
  (tumblesocks . [(0 0 7) ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) "An Emacs tumblr client." tar "marmalade"])
  (tup-mode . [(1 2) nil "Major mode for editing files for Tup" single "marmalade"])
  (twilight-theme . [(1 0 0) nil "Twilight theme for GNU Emacs 24 (deftheme)" single "marmalade"])
  (twittering-mode . [(3 0 1) nil "Major mode for Twitter" single "marmalade"])
  (typescript . [(0 1 1) nil "Major mode for editing typescript" single "marmalade"])
  (typing . [(1 1 4) nil "A game for fast typers, inspired by The Typing Of The Dead." single "marmalade"])
  (typing-practice . [(0 1) nil "Typing practice" single "marmalade"])
  (typo . [(1 1) nil "Minor mode for typographic editing" single "marmalade"])
  (typopunct . [(1 0) nil "Automatic typographical punctuation marks" single "marmalade"])
  (uci-mode . [(1 0 0) nil "Major mode for UCI configuration files" single "marmalade"])
  (ucs-utils . [(0 7 10) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" single "marmalade"])
  (ujelly-theme . [(1 0 35) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single "marmalade"])
  (unbound . [(0 1) nil "find convenient unbound keystrokes" single "marmalade"])
  (undo-tree . [(0 3 1) nil "Treat undo history as a tree" single "marmalade"])
  (unfill . [(0 1) nil "The inverse of fill-paragraph and fill-region" single "marmalade"])
  (unicode-enbox . [(0 1 4) ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Surround a string with box-drawing characters" single "marmalade"])
  (unicode-fonts . [(0 3 8) ((font-utils (0 7 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Configure Unicode fonts" single "marmalade"])
  (unicode-progress-reporter . [(0 5 4) ((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Progress-reporter with fancy characters" single "marmalade"])
  (unicode-whitespace . [(0 2 4) ((ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "teach whitespace-mode about fancy characters" single "marmalade"])
  (uuid . [(0 0 3) nil "UUID's for EmacsLisp" single "marmalade"])
  (uzumaki . [(0 1) ((cl-lib (0 5))) "A simple buffer cycler" single "marmalade"])
  (vala-mode . [(0 1) nil "Vala mode derived mode" single "marmalade"])
  (vc-darcs . [(1 12) nil "a VC backend for darcs" single "marmalade"])
  (vc-tfs . [(0 1 3) nil "Support for TFS version control system" single "marmalade"])
  (vcard . [(0 1) nil "vcard parsing and display routines" single "marmalade"])
  (vector-utils . [(0 1 2) nil "Vector-manipulation utility functions" single "marmalade"])
  (vertica . [(0 1 0) ((sql (3 0))) "Vertica SQL mode extension" single "marmalade"])
  (vimgolf . [(0 9 2) nil "VimGolf interface for the One True Editor" single "marmalade"])
  (vimpulse . [(0 5) nil "emulates Vim's most useful features" single "marmalade"])
  (viper-in-more-modes . [(0 1 3) nil "vi-like keybindings for various Emacs modes" single "marmalade"])
  (virtualenv . [(1 2) nil "Virtualenv for Python" single "marmalade"])
  (visible-color-code . [(0 0 1) nil "color code strings in current buffer, this elisp show you one as real color." single "marmalade"])
  (vline . [(1 10) nil "show vertical line (column highlighting) mode." single "marmalade"])
  (volatile-highlights . [(1 10) nil "Minor mode for visual feedback on some operations." single "marmalade"])
  (w32-browser . [(21 0) nil "Run Windows application associated with a file." single "marmalade"])
  (wacspace . [(0 4 2) ((dash (1 2 0)) (cl-lib (0 2))) "The WACky WorkSPACE manager for emACS" tar "marmalade"])
  (waher-theme . [(20130917 7) ((emacs (24 1))) "Emacs 24 theme based on waher for st2 by dduckster" single "marmalade"])
  (watch-buffer . [(1 0 1) nil "run a shell command when saving a buffer" single "marmalade"])
  (wc-mode . [(1 3) nil "Running word count with goals (minor mode)" single "marmalade"])
  (wcheck-mode . [(2014 6 21) nil "General interface for text checkers" tar "marmalade"])
  (weather . [(2012 3 27 2) nil "Get weather reports via worldweatheronline.com" single "marmalade"])
  (weather-metno . [(20140909) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar "marmalade"])
  (web . [(0 5 2) ((dash (2 9 0)) (s (1 5 0))) "useful HTTP client" single "marmalade"])
  (web-mode . [(8 0 4) nil "major mode for editing html templates" single "marmalade"])
  (websocket . [(1 0) nil "Emacs WebSocket client and server" single "marmalade"])
  (wedge-ws . [(0 1 2) nil "Wedge whitespace between columns in text" tar "marmalade"])
  (weechat . [(0 2) ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) "Chat via WeeChat's relay protocol in Emacs" tar "marmalade"])
  (wget . [(1 94) nil "Emacs-wget is an interface program of GNU wget on Emacs." tar "marmalade"])
  (wgrep . [(2 1 3) nil "Writable grep buffer and apply the changes to files" single "marmalade"])
  (wgrep-ack . [(0 1 1) ((wgrep (2 1 1))) "Writable ack-and-a-half buffer and apply the changes to files" single "marmalade"])
  (wgrep-helm . [(0 1 0) ((wgrep (2 1 1))) "Writable helm-grep-mode buffer and apply the changes to files" single "marmalade"])
  (whitespace-cleanup-mode . [(0 8) nil "Intelligently call whitespace-cleanup on save" single "marmalade"])
  (wiki-nav . [(1 0 0) ((button-lock (1 0 0)) (nav-flash (1 0 0))) "Simple file navigation using [[WikiStrings]]" single "marmalade"])
  (wikidoc . [(0 9) ((s\.el (1 9 0))) "use elisp doc strings to make other documentation" single "marmalade"])
  (win-switch . [(1 0 8) nil "fast, dynamic bindings for window-switching/resizing" single "marmalade"])
  (window-end-visible . [(0 1 0) nil "Find the last visible point in a window" single "marmalade"])
  (window-margin . [(0 1) nil "automatic margins for visual-line-mode wrapping" single "marmalade"])
  (window-number . [(1 0 3) nil "Select windows by numbers." single "marmalade"])
  (winpoint . [(1 4) nil "Remember buffer positions per-window, not per buffer" single "marmalade"])
  (winpoint-ignore-dired . [(1 1) ((winpoint (1 0))) "Have winpoint ignore dired-mode buffers" single "marmalade"])
  (wisp . [(0 1 4) nil "Tools for wisp: the Whitespace-to-Lisp preprocessor" single "marmalade"])
  (wisp-mode . [(0 2) nil "Tools for wisp: the Whitespace-to-Lisp preprocessor" single "marmalade"])
  (with-namespace . [(1 1) nil "Poor-man's namespaces for elisp" single "marmalade"])
  (wonderland . [(0 1 1) ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) "declarative configuration for Emacsen" single "marmalade"])
  (workgroups . [(0 2 0) nil "workgroups for windows (for Emacs)" single "marmalade"])
  (workspaces . [(0 1) nil "Workspaces for Emacsen" single "marmalade"])
  (world-time-mode . [(0 0 6) nil "show whole days of world-time diffs" single "marmalade"])
  (wrap-region . [(0 7 1) nil "Wrap text with punctation or tag" single "marmalade"])
  (writegood-mode . [(20130406 2316) nil "Polish up poor writing on the fly" single "marmalade"])
  (ws-trim . [(1 4) nil "Tools and minor mode to trim whitespace on text lines" single "marmalade"])
  (wsd-mode . [(0 3 0) nil "Emacs major-mode for www.websequencediagrams.com" tar "marmalade"])
  (wxwidgets-help . [(0 0 3) nil "Look up wxWidgets API by using local html manual." tar "marmalade"])
  (xkcd . [(1 0) ((json (1 4))) "View xkcd from Emacs" single "marmalade"])
  (xlicense . [(1 1) nil "Insert pre-defined license text" tar "marmalade"])
  (xml-gen . [(0 4) nil "A DSL for generating XML." single "marmalade"])
  (xml-rpc . [(1 6 8) nil "An elisp implementation of clientside XML-RPC" single "marmalade"])
  (yagist . [(0 8 6) ((json (1 2 0))) "Yet Another Emacs integration for gist.github.com" single "marmalade"])
  (yaml-mode . [(0 0 9) nil "Major mode for editing YAML files" single "marmalade"])
  (yaoddmuse . [(0 1 1) nil "Yet another oddmuse for Emacs" single "marmalade"])
  (yari . [(0 7) nil "Yet Another RI interface for Emacs" single "marmalade"])
  (yas-jit . [(0 8 3) nil "Loads Yasnippets on demand (makes start up faster)" single "marmalade"])
  (yascroll . [(0 2 0) nil "Yet Another Scroll Bar Mode" single "marmalade"])
  (yasnippet . [(0 6 1) nil "Yasnippet template engine" tar "marmalade"])
  (yasnippet-bundle . [(0 6 1) nil "Yet another snippet extension (Auto compiled bundle)" single "marmalade"])
  (zeal-at-point . [(0 0 3) nil "Search the word at point with Zeal" single "marmalade"])
  (zeitgeist . [(0 1) nil "integrates Emacs with Zeitgeist." single "marmalade"])
  (zen-and-art-theme . [(1 0 1) nil "zen and art color theme for GNU Emacs 24" single "marmalade"])
  (zen-mode . [(20120627) nil "remove/restore Emacs distractions quickly" tar "marmalade"])
  (zenburn . [(0 1) nil "A low contrast colour theme for Emacs" single "marmalade"])
  (zenburn-theme . [(2 1) nil "A low contrast color theme for Emacs." single "marmalade"])
  (zencoding-mode . [(0 5 1) nil "Unfold CSS-selector-like expressions to markup" single "marmalade"])
  (zjl-hl . [(20121028 1901) ((highlight (21 0)) (region-list-edit (20100530 808))) "Highlight variable and function call and others in c/emacs, make life easy." single "marmalade"])
  (znc . [(0 0 2) ((cl (2 2)) (erc (5 3))) "ZNC + ERC" single "marmalade"])
  (zone-matrix . [(0 0 1) nil "Matrix themed Zone mode" tar "marmalade"])
 )
