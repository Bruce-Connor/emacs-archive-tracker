'(
  (creds . [(0 0 4) nil "a simple parser credential file lib" tar "marmalade"])
  (google-translate . [(0 5) nil "Emacs interface to Google Translate" single "marmalade"])
  (maildir . [(0 0 23) ((kv (0 0 17)) (dash (2 3 0)) (s (1 9 0)) (noflet (0 0 8))) "Simple maildir based MUA." tar "marmalade"])
  (sass-mode . [(3 0 16) ((haml-mode (3 0 15))) "Major mode for editing Sass files" single "marmalade"])
  (web-mode . [(8 0 4) nil "major mode for editing html templates" single "marmalade"])
  (flycheck . [(0 17) ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (pkg-info (0 4)) (cl-lib (0 3)) (emacs (24 1))) "On-the-fly syntax checking (Flymake done right)" tar "marmalade"])
  (python-mode . [(6 1 3) nil "An Emacs mode for editing Python code" tar "marmalade"])
  (modtime-skip-mode . [(0 9 2) nil "Minor mode for disabling modtime and supersession checks on files." single "marmalade"])
  (cpputils-cmake . [(0 4 4) nil "Easy real time C++ syntax check and intellisense if you use CMake." tar "marmalade"])
  (wacspace . [(0 4 2) ((dash (1 2 0)) (cl-lib (0 2))) "The WACky WorkSPACE manager for emACS" tar "marmalade"])
  (scpaste . [(0 6 1) ((htmlize (1 39))) "Paste to the web via scp." single "marmalade"])
  (package . [(1 0 1) ((tabulated-list (1 0))) "Simple package system for Emacs  -*- lexical-binding:t -*-" single "marmalade"])
  (remember-theme . [(20140122 1500) nil "Remembers the last theme in use and re-loads for the next session." single "marmalade"])
  (weather-metno . [(20140121) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar "marmalade"])
  (json-mode . [(1 2 0) nil "Major mode for editing JSON files" single "marmalade"])
  (desktop-registry . [(1 2 0) nil "Keep a central registry of desktop files -*- lexical-binding: t -*-" single "marmalade"])
  (org-trello . [(0 3 3) ((emacs (24 3)) (dash (2 5 0)) (request (0 2 0)) (cl-lib (0 3 0)) (json (1 2)) (elnode (0 9 9 7 6)) (esxml (0 3 0)) (s (1 7 0)) (kv (0 0 19))) "Org minor mode to synchronize with trello" tar "marmalade"])
  (fakir . [(0 1 8) ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) "fakeing bits of Emacs -*- lexical-binding: t -*-" single "marmalade"])
  (refheap . [(0 0 6) ((json (1 2))) "A library for pasting to https://refheap.com" single "marmalade"])
  (less-css-mode . [(0 18) nil "Major mode for editing LESS CSS files (lesscss.org)" single "marmalade"])
  (paste-kde . [(0 6) ((web (0 3 6))) "paste text to KDE's pastebin service" single "marmalade"])
  (smex . [(3 0) nil "M-x interface with Ido-style fuzzy matching." single "marmalade"])
  (multi-project . [(0 0 15) nil "Easily work with multiple projects." single "marmalade"])
  (clojure-mode . [(2 1 1) nil "Major mode for Clojure code" single "marmalade"])
  (go-mode . [(20131222) nil "Major mode for the Go programming language" single "marmalade"])
  (groovy-mode . [(20131129) nil "Groovy mode derived mode" single "marmalade"])
  (geiser . [(0 5) nil "GNU Emacs and Scheme talk to each other" tar "marmalade"])
  (elixir-mix . [(0 3 0) nil "Emacs integration for Elixir's mix" single "marmalade"])
  (charmap . [(0 0 1) nil "Unicode table for Emacs" single "marmalade"])
  (dpaste_de . [(0 2) ((web (0 3 7))) "Emacs mode to paste to dpaste.de" single "marmalade"])
  (ruby-end . [(0 3 1) nil "Automatic insertion of end blocks for Ruby" single "marmalade"])
  (awk-it . [(0 77) nil "Run AWK interactively on region!" single "marmalade"])
  (git-gutter+ . [(0 1) ((git-commit-mode (1 0))) "Manage Git hunks straight from the buffer" single "marmalade"])
  (emmet-mode . [(1 0 5) nil "Unofficial Emmet's support for emacs" single "marmalade"])
  (processing-mode . [(1 2 1) nil "Major mode for Processing 2.0" single "marmalade"])
  (git-gutter-fringe+ . [(0 0 2) ((git-gutter+ (0 1)) (fringe-helper (20130519 1641))) "Fringe version of git-gutter+.el" single "marmalade"])
  (clues-theme . [(20130908 801) ((emacs (24 0))) "an Emacs 24 theme which may well be fully awesome..." single "marmalade"])
  (sourcetalk . [(1 1 0) ((request (0 2 0))) "SourceTalk (http://sourcetalk.net) plugin for Emacs" single "marmalade"])
  (frame-restore . [(0 4) ((dash (1 2)) (f (0 11)) (emacs (24 1))) "Restore Emacs frame -*- lexical-binding: t; -*-" single "marmalade"])
  (jb-misc-macros . [(0 4) ((macro-utils (1 0))) "Miscellaneous macros" single "marmalade"])
  (syslog-mode . [(2 2) ((hide-lines (20130623))) "Major-mode for viewing log files" single "marmalade"])
  (ob-sml . [(0 1) ((sml-mode (6 4))) "org-babel functions for template evaluation" single "marmalade"])
  (flymake-less . [(0 3) ((less-css-mode (0 15))) "Flymake handler for LESS stylesheets (lesscss.org)" single "marmalade"])
  (org-journal . [(1 4 6) nil "a simple org-mode based journaling mode" single "marmalade"])
  (shorten . [(0 3) nil "component-wise string shortener" single "marmalade"])
  (show-marks . [(0 4) ((fm (1 0))) "Navigate and visualize the mark-ring" single "marmalade"])
  (kmacro-decision . [(1 5) ((el-x (1 0)) (jb-misc-macros (0 2))) "Add conditional branching to keyboard macros" single "marmalade"])
  (express . [(0 6 0) ((string-utils (0 3 2))) "Alternatives to `message'" single "marmalade"])
  (simple-call-tree+ . [(1 3) nil "Extensions to simple-call-tree" single "marmalade"])
  (noflet . [(0 0 11) nil "locally override functions" single "marmalade"])
  (org-dotemacs . [(0 3) ((org (7 9 3)) (cl-lib (1 0))) "Store your emacs config as an org file, and choose which bits to load." single "marmalade"])
  (butler . [(0 2 0) ((deferred (3 1)) (json (1 2))) "Emacs client for Jenkins" tar "marmalade"])
  (flycheck-color-mode-line . [(0 3) ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) "Change mode line color with Flycheck status -*- lexical-binding: t -*-" single "marmalade"])
  (paredit-everywhere . [(0 3) ((paredit (22))) "Enable some paredit features in non-lisp buffers" single "marmalade"])
  (helm-projectile . [(0 10 0) ((helm (1 4 0)) (projectile (0 10 0))) "Helm integration for Projectile" single "marmalade"])
  (lispyscript-mode . [(0 3 0) nil "Major mode for LispyScript code." single "marmalade"])
  (rubocop . [(0 3) ((dash (1 0 0))) "An Emacs interface for RuboCop" single "marmalade"])
  (flymake-elixir . [(0 5) nil "A flymake handler for elixir-mode .ex files.     " single "marmalade"])
  (github-browse-file . [(0 3 0) nil "View the file you're editing on GitHub" single "marmalade"])
  (psgml . [(1 4 1) nil "Lennart Staflin's Psgml package, with Elisp syntax and sgml-validate fixed for Emacsen >=24." tar "marmalade"])
  (ruby-hash-syntax . [(0 3) nil "Toggle ruby hash syntax between classic and 1.9 styles" single "marmalade"])
  (smartparens . [(1 6 1) ((cl-lib (0 1)) (dash (2 3 0))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar "marmalade"])
  (grapnel . [(0 5 3) nil "HTTP request lib with flexible callback dispatch" single "marmalade"])
  (ht . [(1 5) nil "The missing hash table library for Emacs" single "marmalade"])
  (babcore . [(0 0 5) nil "Core Emacs configuration. This should be the minimum in every emacs config." single "marmalade"])
  (framesize . [(0 0 5) ((key-chord (0 5 20080915))) "change the size of frames in Emacs" single "marmalade"])
  (gruber-darker-theme . [(0 6) nil "Gruber Darker color theme for Emacs 24." single "marmalade"])
  (purple-haze-theme . [(20130930 36) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single "marmalade"])
  (evil . [(1 0 8) ((undo-tree (0 6 3)) (goto-last-change (1 2))) "Extensible Vi layer for Emacs." tar "marmalade"])
  (rbenv . [(0 0 3) nil "Emacs integration for rbenv" single "marmalade"])
  (ag . [(0 36) nil "A front-end for ag ('the silver searcher'), the C ack replacement." single "marmalade"])
  (clj-refactor . [(0 10 0) ((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2))) "A collection of clojure refactoring functions" single "marmalade"])
  (robe . [(0 7 7) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar "marmalade"])
  (evil-nerd-commenter . [(1 2 8) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar "marmalade"])
  (el-x . [(0 3 0) ((cl-lib (0 2))) "Emacs-lisp extensions." tar "marmalade"])
  (circe . [(1 3) ((lui (1 3)) (lcs (1 1))) "Client for IRC in Emacs" tar "marmalade"])
  (lui . [(1 3) ((tracking (1 4))) "Linewise User Interface" tar "marmalade"])
  (tracking . [(1 4) ((shorten (0 3))) "Buffer modification tracking" single "marmalade"])
  (simpleclip . [(1 0 0) nil "Simplified access to the system clipboard" single "marmalade"])
  (chicken-scheme . [(1 1 0) nil "Scheme-mode extensions for Chicken Scheme" single "marmalade"])
  (elpy . [(1 2 1) ((auto-complete (1 4)) (find-file-in-project (3 2)) (fuzzy (0 1)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (iedit (0 97)) (nose (0 1 1)) (virtualenv (1 2)) (yasnippet (0 8 0))) "Emacs Python Development Environment" tar "marmalade"])
  (page-break-lines . [(0 9) nil "Display ugly ^L page breaks as tidy horizontal lines" single "marmalade"])
  (flymake-python-pyflakes . [(0 9) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" single "marmalade"])
  (skinny . [(0 0 6) ((elnode (0 9 9 6 1)) (creole (0 8 17))) "a blog engine with elnode -*- lexical-binding: t -*-" single "marmalade"])
  (bug-reference-github . [(0 2 0) nil "Automatically set `bug-reference-url-format' in Github repositories." single "marmalade"])
  (syntactic-sugar . [(0 9 4) nil "Effect-free forms such as if/then/else" single "marmalade"])
  (truthy . [(0 2 8) ((list-utils (0 4 2))) "Test the content of a value" single "marmalade"])
  (inform-mode . [(1 6 2) nil "Major mode for Inform 6 interactive fiction code" single "marmalade"])
  (dash . [(2 5 0) nil "A modern list library for Emacs" single "marmalade"])
  (vector-utils . [(0 1 2) nil "Vector-manipulation utility functions" single "marmalade"])
  (osx-browse . [(0 8 8) ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) "Web browsing helpers for OS X" single "marmalade"])
  (cmake-project . [(0 7) nil "Integrates CMake build process with Emacs" single "marmalade"])
  (hardhat . [(0 4 2) ((ignoramus (0 7 0))) "Protect against clobbering user-writable files" single "marmalade"])
  (flymake-checkers . [(0 2) nil "Flymake reloaded with useful checkers" single "marmalade"])
  (git-commit-mode . [(0 13) nil "Major mode for editing git commit messages -*- lexical-binding: t; -*-" single "marmalade"])
  (s . [(1 9 0) nil "The long lost Emacs string manipulation library." single "marmalade"])
  (pretty-mode-plus . [(1 0) nil "Redisplay parts of the buffer as pretty symbols." tar "marmalade"])
  (org-ehtml . [(0 20131014) ((elnode (20130416 1626)) (org-plus-contrib (20131007))) "Export Org-mode files as editable web pages" tar "marmalade"])
  (font-utils . [(0 7 0) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single "marmalade"])
  (multiple-cursors . [(1 3 0) nil "Multiple cursors for Emacs." tar "marmalade"])
  (list-utils . [(0 4 2) nil "List-manipulation utility functions" single "marmalade"])
  (exec-path-from-shell . [(1 7) nil "Get environment variables such as $PATH from the shell" single "marmalade"])
  (anaphora . [(1 0 0) nil "anaphoric macros providing implicit temp variables" single "marmalade"])
  (tumblesocks . [(0 0 7) ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) "An Emacs tumblr client." tar "marmalade"])
  (kv . [(0 0 19) nil "key/value data structure functions" single "marmalade"])
  (fixmee . [(0 8 4) ((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) "Quickly navigate to FIXME notices in code" single "marmalade"])
  (browse-url-dwim . [(0 6 6) ((string-utils (0 3 2))) "Context-sensitive external browse URL or Internet search" single "marmalade"])
  (buffer-utils . [(0 1 0) nil "Buffer-manipulation utility functions" single "marmalade"])
  (flyspell-lazy . [(0 6 6) nil "Improve flyspell responsiveness using idle timers" single "marmalade"])
  (ignoramus . [(0 7 0) nil "Ignore backups, build files, et al." single "marmalade"])
  (unicode-whitespace . [(0 2 4) ((ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "teach whitespace-mode about fancy characters" single "marmalade"])
  (ac-nrepl . [(0 21) ((cider (0 1)) (auto-complete (1 4))) "auto-complete sources for Clojure using nrepl completions" single "marmalade"])
  (ido-load-library . [(0 2 0) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Load-library alternative using ido-completing-read" single "marmalade"])
  (unicode-fonts . [(0 3 8) ((font-utils (0 7 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Configure Unicode fonts" single "marmalade"])
  (unicode-progress-reporter . [(0 5 4) ((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Progress-reporter with fancy characters" single "marmalade"])
  (minimal-session-saver . [(0 6 2) nil "Very lean session saver" single "marmalade"])
  (dynamic-fonts . [(0 6 4) ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Set faces based on available fonts" single "marmalade"])
  (unicode-enbox . [(0 1 4) ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Surround a string with box-drawing characters" single "marmalade"])
  (string-utils . [(0 3 2) ((list-utils (0 4 2))) "String-manipulation utilities" single "marmalade"])
  (window-end-visible . [(0 1 0) nil "Find the last visible point in a window" single "marmalade"])
  (back-button . [(0 6 6) ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Visual navigation through mark rings" single "marmalade"])
  (ucs-utils . [(0 7 6) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utilities for Unicode characters" single "marmalade"])
  (nav-flash . [(1 1 0) nil "Briefly highlight the current line" single "marmalade"])
  (hippie-namespace . [(0 5 8) nil "Special treatment for namespace prefixes in hippie-expand" single "marmalade"])
  (persistent-soft . [(0 8 8) ((pcache (0 2 3)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single "marmalade"])
  (nrepl . [(0 2 0) ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 1 0)) (pkg-info (0 1))) "Client for Clojure nREPL" single "marmalade"])
  (writegood-mode . [(20130406 2316) nil "Polish up poor writing on the fly" single "marmalade"])
  (wc-mode . [(1 3) nil "Running word count with goals (minor mode)" single "marmalade"])
  (grep-o-matic . [(1 0 6) nil "auto grep word under cursor" single "marmalade"])
  (grep-a-lot . [(1 0 7) nil "manages multiple search results buffers for grep.el" single "marmalade"])
  (repository-root . [(1 0 4) nil "deduce the repository root directory for a given file" single "marmalade"])
  (php-extras . [(2 1 1 20140312) ((php-mode (1 5 0))) "Extra features for `php-mode'" tar "marmalade"])
  (git-auto-commit-mode . [(4 2 2) nil "Emacs Minor mode to automatically commit and push" single "marmalade"])
  (ujelly-theme . [(1 0 35) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single "marmalade"])
  (evil-leader . [(0 4 1) ((evil (0))) "let there be <leader>" single "marmalade"])
  (drupal-mode . [(0 5 0) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar "marmalade"])
  (test-case-mode . [(0 1 9) nil "unit test front-end" single "marmalade"])
  (ack-and-a-half . [(1 2 0) nil "Yet another front-end for ack" single "marmalade"])
  (expand-region . [(0 10 0) nil "Increase selected region by semantic units." tar "marmalade"])
  (mocker . [(0 3 0) ((eieio (1 3)) (el-x (0 2 4))) "mocking framework for emacs" single "marmalade"])
  (pcache . [(0 2 4) ((eieio (1 3))) "persistent caching for Emacs" single "marmalade"])
  (creole . [(1 0 3) ((noflet (0 0 3)) (kv (0 0 17))) "A parser for the Creole Wiki language" single "marmalade"])
  (ac-slime . [(0 5) nil "An auto-complete source using slime completions" single "marmalade"])
  (projectile . [(0 10 0) ((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single "marmalade"])
  (cmake-mode . [(20110824) nil "Major mode for editing CMake sources." single "marmalade"])
  (markdown-mode . [(2 0) nil "Emacs Major mode for Markdown-formatted text files" single "marmalade"])
  (flymake-coffee . [(0 12) ((flymake-easy (0 1))) "A flymake handler for coffee script" single "marmalade"])
  (ido-ubiquitous . [(2 10) ((emacs (24 1))) "Use ido (nearly) everywhere." single "marmalade"])
  (elisp-slime-nav . [(0 7) ((cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" single "marmalade"])
  (ibuffer-vc . [(0 7) ((cl-lib (0 2))) "Group ibuffer's list by VC project, or show VC status" single "marmalade"])
  (tuareg . [(2 0 8) ((caml (3 12 0 1))) "OCaml mode for Emacs" tar "marmalade"])
  (ruby-test-mode . [(1 7) ((ruby-mode (1 0))) "Minor mode for Behaviour and Test Driven" single "marmalade"])
  (langtool . [(1 2 1) nil "Grammar check utility using LanguageTool" single "marmalade"])
  (fill-column-indicator . [(1 86) nil "Graphically indicate the fill column" single "marmalade"])
  (gh . [(0 8 0) ((eieio (1 3)) (pcache (0 2 4)) (logito (0 1))) "A GitHub library for Emacs" tar "marmalade"])
  (wiki-nav . [(1 0 0) ((button-lock (1 0 0)) (nav-flash (1 0 0))) "Simple file navigation using [[WikiStrings]]" single "marmalade"])
  (button-lock . [(1 0 0) nil "Clickable text defined by regular expression" single "marmalade"])
  (yaml-mode . [(0 0 9) nil "Major mode for editing YAML files" single "marmalade"])
  (inf-ruby . [(2 3 2) nil "Run a Ruby process in a buffer" single "marmalade"])
  (clojure-test-mode . [(3 0 0) ((clojure-mode (1 7)) (cider (0 4 0))) "Minor mode for Clojure tests" single "marmalade"])
  (android-mode . [(0 2 5) nil "Minor mode for Android application development" single "marmalade"])
  (fold-dwim-org . [(0 5) ((fold-dwim (1 2))) "Fold DWIM bound to org key-strokes." single "marmalade"])
  (auto-indent-mode . [(0 123) nil "Auto indent Minor mode" single "marmalade"])
  (guru-mode . [(0 2) nil "Become an Emacs guru   -*- lexical-binding:t -*-" single "marmalade"])
  (yari . [(0 7) nil "Yet Another RI interface for Emacs" single "marmalade"])
  (web . [(0 4 1) nil "useful HTTP client -*- lexical-binding: t -*-" single "marmalade"])
  (haml-mode . [(3 1 5) ((ruby-mode (1 0))) "Major mode for editing Haml files" single "marmalade"])
 )
