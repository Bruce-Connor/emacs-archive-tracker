'(
  (xpm . [(1 0 3) nil "edit XPM images" tar ((:keywords "multimedia" "xpm") (:url . "http://www.gnuvola.org/software/xpm/")) "gnu"])
  (wpuzzle . [(1 1) nil "find as many word in a given time" single ((:url . "http://elpa.gnu.org/packages/wpuzzle.html") (:keywords)) "gnu"])
  (wisi . [(1 1 0) ((cl-lib (0 4)) (emacs (24 2))) "Utilities for implementing an indentation/navigation engine using a generalized LALR parser" tar ((:keywords "parser" "indentation" "navigation") (:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) "gnu"])
  (websocket . [(1 3) nil "Emacs WebSocket client and server" tar ((:keywords "communication" "websocket" "server") (:url . "http://elpa.gnu.org/packages/websocket.html")) "gnu"])
  (web-server . [(0 1 1) ((emacs (24 3))) "Emacs Web Server" tar ((:keywords "http" "server" "network") (:url . "https://github.com/eschulte/emacs-web-server")) "gnu"])
  (wcheck-mode . [(2014 6 21) nil "General interface for text checkers" single ((:url . "https://github.com/tlikonen/wcheck-mode") (:keywords "text" "spell" "check" "languages" "ispell")) "gnu"])
  (w3 . [(4 0 49) nil "Fully customizable, largely undocumented web browser for Emacs" tar ((:keywords "faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia") (:url . "http://elpa.gnu.org/packages/w3.html")) "gnu"])
  (temp-buffer-browse . [(1 4) nil "temp buffer browse mode" single ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html") (:keywords "convenience")) "gnu"])
  (svg . [(0 1) ((emacs (25))) "svg image creation functions" single ((:url . "http://elpa.gnu.org/packages/svg.html") (:keywords "image")) "gnu"])
  (seq . [(1 0) nil "Sequence manipulation functions" single ((:url . "http://elpa.gnu.org/packages/seq.html") (:keywords "sequences")) "gnu"])
  (scroll-restore . [(1 0) nil "restore original position after scrolling" single ((:url . "http://elpa.gnu.org/packages/scroll-restore.html") (:keywords "scrolling")) "gnu"])
  (rudel . [(0 3) nil "A collaborative editing framework for Emacs" tar ((:keywords "rudel" "collaboration") (:url . "http://rudel.sourceforge.net/")) "gnu"])
  (poker . [(0 1) nil "Texas hold'em poker" single ((:url . "http://elpa.gnu.org/packages/poker.html") (:keywords "games")) "gnu"])
  (pabbrev . [(4 1) nil "Predictive abbreviation expansion" single ((:url . "http://elpa.gnu.org/packages/pabbrev.html") (:keywords)) "gnu"])
  (osc . [(0 1) nil "Open Sound Control protocol library" single ((:url . "http://elpa.gnu.org/packages/osc.html") (:keywords "comm" "processes" "multimedia")) "gnu"])
  (names . [(20150115 1) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar ((:keywords "extensions" "lisp") (:url . "http://github.com/Bruce-Connor/names")) "gnu"])
  (metar . [(0 1) ((cl-lib (0 5))) "Retrieve and decode METAR weather information" single ((:url . "http://elpa.gnu.org/packages/metar.html") (:keywords "comm")) "gnu"])
  (let-alist . [(1 0 3) nil "Easily let-bind values of an assoc-list by their names" single ((:url . "http://elpa.gnu.org/packages/let-alist.html") (:keywords "extensions" "lisp")) "gnu"])
  (javaimp . [(0 5) nil "Add and reorder Java import statements in Maven projects" single ((:url . "http://elpa.gnu.org/packages/javaimp.html") (:keywords "java" "maven" "programming")) "gnu"])
  (hydra . [(0 6 1) ((cl-lib (0 5))) "Make bindings that stick around" tar ((:keywords "bindings") (:url . "https://github.com/abo-abo/hydra")) "gnu"])
  (gnugo . [(3 0 0) ((ascii-art-to-unicode (1 5)) (xpm (1 0 1)) (cl-lib (0 5))) "play GNU Go in a buffer" tar ((:keywords "games" "processes") (:url . "http://www.gnuvola.org/software/gnugo/")) "gnu"])
  (gnorb . [(1 0 1) ((cl-lib (0 5))) "Glue code between Gnus, Org, and BBDB" tar ((:keywords "mail" "org" "gnus" "bbdb" "todo" "task") (:url . "https://github.com/girzel/gnorb")) "gnu"])
  (flylisp . [(0 2) ((emacs (24 1)) (cl-lib (0 4))) "Color unbalanced parentheses and parentheses inconsistent with indentation" single ((:url . "http://elpa.gnu.org/packages/flylisp.html") (:keywords)) "gnu"])
  (ergoemacs-mode . [(5 14 7 3) ((emacs (24 1)) (undo-tree (0 6 5))) "Emacs mode based on common modern interface and ergonomics." tar ((:keywords "convenience") (:url . "https://github.com/ergoemacs/ergoemacs-mode")) "gnu"])
  (electric-spacing . [(5 0) nil "Insert operators with surrounding spaces smartly" single ((:url . "http://elpa.gnu.org/packages/electric-spacing.html") (:keywords)) "gnu"])
  (easy-kill . [(0 9 3) ((emacs (24)) (cl-lib (0 5))) "kill & mark things easily" tar ((:keywords "killing" "convenience") (:url . "https://github.com/leoliu/easy-kill")) "gnu"])
  (dismal . [(1 5) ((cl-lib (0))) "Dis Mode Ain't Lotus: Spreadsheet program Emacs" tar ((:url . "http://elpa.gnu.org/packages/dismal.html")) "gnu"])
  (diff-hl . [(1 7 0) ((cl-lib (0 2))) "Highlight uncommitted changes" tar ((:keywords "vc" "diff") (:url . "https://github.com/dgutov/diff-hl")) "gnu"])
  (darkroom . [(0 1) ((cl-lib (0 5))) "Remove visual distractions and focus on writing" single ((:url . "http://elpa.gnu.org/packages/darkroom.html") (:keywords "convenience" "emulations")) "gnu"])
  (crisp . [(1 3 4) nil "CRiSP/Brief Emacs emulator" single ((:url . "http://elpa.gnu.org/packages/crisp.html") (:keywords "emulations" "brief" "crisp")) "gnu"])
  (context-coloring . [(4 0 0) ((emacs (24)) (js2-mode (20150126))) "Syntax highlighting, except not for syntax." single ((:url . "https://github.com/jacksonrayhamilton/context-coloring") (:keywords "context" "coloring" "syntax" "highlighting")) "gnu"])
  (company-statistics . [(0 1) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" tar ((:keywords "abbrev" "convenience" "matching") (:url . "https://github.com/company-mode/company-statistics")) "gnu"])
  (cl-generic . [(0 1) nil "Forward cl-generic compatibility for Emacs<25" single ((:url . "http://elpa.gnu.org/packages/cl-generic.html") (:keywords)) "gnu"])
  (chess . [(2 0 4) ((cl-lib (0 5))) "Play chess in GNU Emacs" tar ((:keywords "games") (:url . "http://elpa.gnu.org/packages/chess.html")) "gnu"])
  (caps-lock . [(1 0) nil "Caps-lock as a minor mode" single ((:url . "http://elpa.gnu.org/packages/caps-lock.html") (:keywords)) "gnu"])
  (aumix-mode . [(7) nil "run the aumix program in a buffer" single ((:url . "http://user42.tuxfamily.org/aumix-mode/index.html") (:keywords "multimedia" "mixer" "aumix")) "gnu"])
  (ascii-art-to-unicode . [(1 9) nil "a small artist adjunct" single ((:url . "http://www.gnuvola.org/software/aa2u/") (:keywords "ascii" "unicode" "box-drawing")) "gnu"])
  (ahungry-theme . [(1 0 4) ((emacs (24))) "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)." tar ((:keywords "ahungry" "palette" "color" "theme" "emacs" "color-theme" "deftheme") (:url . "https://github.com/ahungry/color-theme-ahungry")) "gnu"])
  (adjust-parens . [(3 0) nil "Indent and dedent Lisp code, automatically adjust close parens" tar ((:url . "http://elpa.gnu.org/packages/adjust-parens.html")) "gnu"])
  (ada-ref-man . [(2012 0) nil "Ada Reference Manual 2012" tar ((:keywords "languages" "ada") (:url . "http://stephe-leake.org/ada/arm.html")) "gnu"])
  (ada-mode . [(5 1 7) ((wisi (1 1 0)) (cl-lib (0 4)) (emacs (24 2))) "major-mode for editing Ada sources" tar ((:keywords "languages" "ada") (:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) "gnu"])
 )
