'(
  (ack . [(1 3) nil "Interface to ack-like source code search tools" tar ((:keywords "tools" "processes" "convenience") (:url . "https://github.com/leoliu/ack-el")) "gnu"])
  (adaptive-wrap . [(0 5) nil "Smart line-wrapping with wrap-prefix" single ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html") (:keywords)) "gnu"])
  (adjust-parens . [(2 0) nil "Indent and dedent Lisp code, automatically adjust close parens" tar ((:url . "http://elpa.gnu.org/packages/adjust-parens.html")) "gnu"])
  (all . [(1 0) nil "Edit all lines matching a given regexp" single ((:url . "http://elpa.gnu.org/packages/all.html") (:keywords "matching")) "gnu"])
  (auctex . [(11 87 2) nil "Integrated environment for *TeX*" tar ((:url . "http://www.gnu.org/software/auctex/")) "gnu"])
  (cl-lib . [(0 3) nil "Properly prefixed CL functions and macros" single ((:url . "http://elpa.gnu.org/packages/cl-lib.html") (:keywords)) "gnu"])
  (coffee-mode . [(0 4 1 1) nil "Major mode for CoffeeScript files" single ((:url . "http://github.com/defunkt/coffee-mode") (:keywords "CoffeeScript major mode")) "gnu"])
  (company . [(0 6 12) nil "Modular in-buffer completion framework" tar ((:keywords "abbrev" "convenience" "matching") (:url . "http://company-mode.github.io/")) "gnu"])
  (csv-mode . [(1 2) nil "Major mode for editing comma/char separated values" single ((:url . "http://centaur.maths.qmul.ac.uk/Emacs/") (:keywords "convenience")) "gnu"])
  (debbugs . [(0 5) nil "SOAP library to access debbugs servers" tar ((:keywords "comm" "hypermedia") (:url . "http://elpa.gnu.org/packages/debbugs.html")) "gnu"])
  (dict-tree . [(0 12 8) ((trie (0 2 5)) (tNFA (0 1 1)) (heap (0 3))) "Dictionary data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures")) "gnu"])
  (diff-hl . [(1 5 1) ((cl-lib (0 2))) "Highlight uncommitted changes" tar ((:keywords "vc" "diff") (:url . "https://github.com/dgutov/diff-hl")) "gnu"])
  (dismal . [(1 5) ((cl-lib (0))) "Dis Mode Ain't Lotus: Spreadsheet program Emacs" tar ((:url . "http://elpa.gnu.org/packages/dismal.html")) "gnu"])
  (djvu . [(0 5) nil "Edit and view Djvu files via djvused" single ((:url . "http://elpa.gnu.org/packages/djvu.html") (:keywords "files" "wp")) "gnu"])
  (docbook . [(0 1) nil "Info-like viewer for DocBook" single ((:url . "http://elpa.gnu.org/packages/docbook.html") (:keywords "docs" "help")) "gnu"])
  (ediprolog . [(1 0) nil "Emacs Does Interactive Prolog" single ((:url . "http://elpa.gnu.org/packages/ediprolog.html") (:keywords "languages" "processes")) "gnu"])
  (eldoc-eval . [(0 1) nil "Enable eldoc support when minibuffer is in use." single ((:url . "http://elpa.gnu.org/packages/eldoc-eval.html") (:keywords)) "gnu"])
  (enwc . [(1 0) nil "The Emacs Network Client" tar ((:keywords "enwc" "network" "wicd" "manager" "nm") (:url . "http://elpa.gnu.org/packages/enwc.html")) "gnu"])
  (epoch-view . [(0 0 1) nil "Minor mode to visualize epoch timestamps" single ((:url . "http://elpa.gnu.org/packages/epoch-view.html") (:keywords "data" "timestamp" "epoch" "unix")) "gnu"])
  (f90-interface-browser . [(1 1) nil "Parse and browse f90 interfaces" single ((:url . "http://github.com/wence-/f90-iface/") (:keywords)) "gnu"])
  (ggtags . [(0 7 6) ((emacs (24))) "GNU Global source code tagging system" single ((:url . "https://github.com/leoliu/ggtags") (:keywords "tools" "convenience")) "gnu"])
  (heap . [(0 3) nil "Heap (a.k.a. priority queue) data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "data structures" "heap" "priority queue")) "gnu"])
  (ioccur . [(2 4) nil "Incremental occur" single ((:url . "http://elpa.gnu.org/packages/ioccur.html") (:keywords)) "gnu"])
  (jgraph-mode . [(1 0) nil "Major mode for Jgraph files" single ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html") (:keywords "tex" "wp")) "gnu"])
  (js2-mode . [(20131106) ((emacs (24 1))) "Improved JavaScript editing mode" tar ((:keywords "languages" "javascript") (:url . "https://github.com/mooz/js2-mode/")) "gnu"])
  (jumpc . [(3 0) nil "jump to previous insertion points" single ((:url . "http://elpa.gnu.org/packages/jumpc.html") (:keywords)) "gnu"])
  (lex . [(1 1) nil "Lexical analyser construction" tar ((:url . "http://elpa.gnu.org/packages/lex.html")) "gnu"])
  (lmc . [(1 2) nil "Little Man Computer in Elisp" single ((:url . "http://elpa.gnu.org/packages/lmc.html") (:keywords)) "gnu"])
  (load-dir . [(0 0 3) nil "Load all Emacs Lisp files in a given directory" single ((:url . "http://elpa.gnu.org/packages/load-dir.html") (:keywords "lisp" "files" "convenience")) "gnu"])
  (markchars . [(0 2 0) nil "Mark chars fitting certain characteristics" single ((:url . "http://elpa.gnu.org/packages/markchars.html") (:keywords)) "gnu"])
  (memory-usage . [(0 2) nil "Analyze the memory usage of Emacs in various ways" single ((:url . "http://elpa.gnu.org/packages/memory-usage.html") (:keywords "maint")) "gnu"])
  (minimap . [(1 0) nil "Sidebar showing a \"mini-map\" of a buffer" single ((:url . "http://elpa.gnu.org/packages/minimap.html") (:keywords)) "gnu"])
  (muse . [(3 20) nil "Authoring and publishing tool for Emacs" tar ((:keywords "hypermedia") (:url . "http://mwolson.org/projects/EmacsMuse.html")) "gnu"])
  (nhexl-mode . [(0 1) nil "Minor mode to edit files via hex-dump format" single ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html") (:keywords "data")) "gnu"])
  (nlinum . [(1 1) nil "Show line numbers in the margin" single ((:url . "http://elpa.gnu.org/packages/nlinum.html") (:keywords "convenience")) "gnu"])
  (notes-mode . [(1 30) nil "Indexing system for on-line note-taking" tar ((:url . "http://elpa.gnu.org/packages/notes-mode.html")) "gnu"])
  (num3-mode . [(1 1) nil "highlight groups of digits in long numbers" single ((:url . "http://elpa.gnu.org/packages/num3-mode.html") (:keywords)) "gnu"])
  (oauth2 . [(0 9) nil "OAuth 2.0 Authorization Protocol" single ((:url . "http://elpa.gnu.org/packages/oauth2.html") (:keywords "comm")) "gnu"])
  (omn-mode . [(1 0) nil "Support for OWL Manchester Notation" single ((:url . "http://elpa.gnu.org/packages/omn-mode.html") (:keywords)) "gnu"])
  (org . [(20131202) nil "Outline-based notes management and organizer" tar nil "gnu"])
  (quarter-plane . [(0 1) nil "Minor mode for quarter-plane style editing" single ((:url . "http://elpa.gnu.org/packages/quarter-plane.html") (:keywords "convenience wp")) "gnu"])
  (queue . [(0 1) nil "Queue data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "data structures" "queue")) "gnu"])
  (rainbow-mode . [(0 9) nil "Colorize color names in buffers" single ((:url . "http://elpa.gnu.org/packages/rainbow-mode.html") (:keywords "faces")) "gnu"])
  (register-list . [(0 1) nil "Interactively list/edit registers" single ((:url . "http://elpa.gnu.org/packages/register-list.html") (:keywords "register")) "gnu"])
  (shen-mode . [(0 1) nil "A major mode for editing shen source code" tar ((:keywords "languages" "shen") (:url . "http://elpa.gnu.org/packages/shen-mode.html")) "gnu"])
  (sisu-mode . [(3 0 3) nil "Major mode for SiSU markup text" single ((:url . "http://elpa.gnu.org/packages/sisu-mode.html") (:keywords "text" "processes" "tools")) "gnu"])
  (smart-operator . [(4 0) nil "Insert operators with surrounding spaces smartly" single ((:url . "http://xwl.appspot.com/ref/smart-operator.el") (:keywords)) "gnu"])
  (sml-mode . [(6 4) nil "Major mode for editing (Standard) ML" single ((:url . "http://elpa.gnu.org/packages/sml-mode.html") (:keywords "SML")) "gnu"])
  (sokoban . [(1 0 4) nil "Sokoban game for emacs" tar nil "gnu"])
  (svg-clock . [(0 5) nil "Analog clock using Scalable Vector Graphics" single ((:url . "http://elpa.gnu.org/packages/svg-clock.html") (:keywords "demo" "svg" "clock")) "gnu"])
  (tNFA . [(0 1 1) ((queue (0 1))) "Tagged non-deterministic finite-state automata" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures")) "gnu"])
  (temp-buffer-browse . [(1 1) nil "temp buffer browse mode" single ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html") (:keywords "convenience")) "gnu"])
  (trie . [(0 2 6) ((tNFA (0 1 1)) (heap (0 3))) "Trie data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures")) "gnu"])
  (undo-tree . [(0 6 3) nil "Treat undo history as a tree" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "convenience" "files" "undo" "redo" "history" "tree")) "gnu"])
  (uni-confusables . [(0 1) nil "Unicode confusables table" tar nil "gnu"])
  (vlf . [(0 9 1) nil "View Large Files" single ((:url . "https://github.com/m00natic/vlfi") (:keywords "large files" "utilities")) "gnu"])
  (w3 . [(4 0 49) nil "Fully customizable, largely undocumented web browser for Emacs" tar ((:keywords "faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia") (:url . "http://elpa.gnu.org/packages/w3.html")) "gnu"])
  (websocket . [(1 1) nil "Emacs WebSocket client and server" tar ((:keywords "Communication" "Websocket" "Server") (:url . "http://elpa.gnu.org/packages/websocket.html")) "gnu"])
  (windresize . [(0 1) nil "Resize windows interactively" single ((:url . "http://elpa.gnu.org/packages/windresize.html") (:keywords "window")) "gnu"])
  (xclip . [(1 3) nil "use xclip to copy&paste" single ((:url . "http://elpa.gnu.org/packages/xclip.html") (:keywords "convenience" "tools")) "gnu"])
  (yasnippet . [(0 8 0) nil "Yet another snippet extension for Emacs." tar ((:keywords "convenience" "emulation") (:url . "http://github.com/capitaomorte/yasnippet")) "gnu"])
 )
