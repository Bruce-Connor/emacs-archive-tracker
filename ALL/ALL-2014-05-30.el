'(
  (2048-game . [(20140330 1212) nil "play 2048 in Emacs" single ((:url . "https://bitbucket.org/zck/2048.el")) "melpa"])
  (4clojure . [(20131014 1507) ((json (1 2)) (request (0 2 0))) "Open and evaluate 4clojure.com questions" single ((:keywords "languages" "data")) "melpa"])
  (abc-mode . [(20140225 944) nil "Major mode for editing abc music files" single ((:keywords "local" "docs")) "melpa"])
  (abl-mode . [(20140504 1312) nil "Python TDD minor mode" tar ((:url . "http://github.com/afroisalreadyinu/abl-mode")) "melpa"])
  (ac-c-headers . [(20131015 2339) nil "auto-complete source for C headers" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (ac-cake . [(20140315 929) ((cake (1 4 2)) (auto-complete (1 4 0))) "CakePHP Minor Mode auto-complete.el source" single ((:url . "http://code.101000lab.org")) "melpa"])
  (ac-cake2 . [(20140320 8) ((cake2 (1 1 2)) (auto-complete (1 4 0))) "CakePHP 2 Minor Mode auto-complete.el source" single ((:url . "http://code.101000lab.org")) "melpa"])
  (ac-cider-compliment . [(20140129 1304) ((cider (0 5 0)) (auto-complete (1 4))) "auto-complete sources for Clojure using" single ((:url . "https://github.com/alexander-yakushev/ac-cider-compliment") (:keywords "languages" "clojure" "nrepl" "cider" "compliment")) "melpa"])
  (ac-dabbrev . [(20130906 518) nil "auto-complete.el source for dabbrev" single nil "melpa"])
  (ac-emmet . [(20131015 858) ((emmet-mode (1 0 2)) (auto-complete (1 4))) "auto-complete sources for emmet-mode's snippets" single ((:url . "https://github.com/yasuyk/ac-emmet") (:keywords "completion" "convenience" "emmet")) "melpa"])
  (ac-etags . [(20131127 311) ((auto-complete (1 4))) "etags/ctags completion source for auto-complete" single ((:url . "https://github.com/syohex/emacs-ac-etags")) "melpa"])
  (ac-geiser . [(20130928 2347) ((geiser (0 5)) (auto-complete (1 4))) "Auto-complete backend for geiser" tar nil "melpa"])
  (ac-helm . [(20131224 647) ((helm (20130328)) (auto-complete (1 4 0)) (popup (0 5 0))) "Helm interface for auto-complete" single ((:keywords "completion" "convenience" "helm")) "melpa"])
  (ac-inf-ruby . [(20131115 350) ((inf-ruby (2 3 2)) (auto-complete (1 4))) "Enable auto-complete in inf-ruby sessions" single ((:keywords "languages" "tools")) "melpa"])
  (ac-ispell . [(20140214 751) ((auto-complete (1 4))) "ispell completion source for auto-complete" single ((:url . "https://github.com/syohex/emacs-ac-ispell")) "melpa"])
  (ac-js2 . [(20131112 403) ((js2-mode (20090723)) (skewer-mode (1 4))) "Auto-complete source for Js2-mode, with navigation" tar ((:url . "https://github.com/ScottyB/ac-js2")) "melpa"])
  (ac-math . [(20131003 1604) ((auto-complete (1 4))) "Auto-complete sources for input of mathematical symbols and latex tags" single ((:url . "https://github.com/vitoshka/ac-math") (:keywords "latex" "auto-complete" "unicode" "symbols")) "melpa"])
  (ac-nrepl . [(20131031 346) ((cider (0 1)) (auto-complete (1 4))) "auto-complete sources for Clojure using nrepl completions" single ((:url . "https://github.com/purcell/ac-nrepl") (:keywords "languages" "clojure" "nrepl")) "melpa"])
  (ac-octave . [(20140226 2051) ((auto-complete (1 4 0))) "An auto-complete source for Octave" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/ac-octave.el") (:keywords "octave" "auto-complete" "completion")) "melpa"])
  (ac-slime . [(20131005 326) nil "An auto-complete source using slime completions" single ((:url . "https://github.com/purcell/ac-slime")) "melpa"])
  (ace-jump-buffer . [(20140508 1309) ((ace-jump-mode (1 0)) (dash (2 4 0))) "fast buffer switching extension to `ace-jump-mode'" single ((:url . "https://github.com/waymondo/ace-jump-buffer")) "melpa"])
  (ace-jump-mode . [(20140207 530) nil "a quick cursor location minor mode for emacs" single ((:url . "https://github.com/winterTTr/ace-jump-mode/") (:keywords "motion" "location" "cursor")) "melpa"])
  (ace-link . [(20140404 2310) ((ace-jump-mode (2 0)) (noflet (0 0 10))) "Quickly follow links using `ace-jump-mode'" single ((:url . "https://github.com/abo-abo/ace-link") (:keywords "convenience" "links")) "melpa"])
  (ace-window . [(20140527 0) ((ace-jump-mode (2 0))) "Quickly switch windows using `ace-jump-mode'." single ((:url . "https://github.com/abo-abo/ace-window") (:keywords "cursor" "window" "location")) "melpa"])
  (achievements . [(20131111 2351) ((keyfreq (0 0 3))) "Achievements for emacs usage." tar nil "melpa"])
  (ack-and-a-half . [(20130815 1917) nil "Yet another front-end for ack" single ((:url . "http://technosorcery.net")) "melpa"])
  (ack-menu . [(20130312 131) ((mag-menu (0 1 0))) "A menu-based front-end for ack" single ((:url . "https://github.com/chumpage/ack-menu") (:keywords "tools" "matching" "convenience")) "melpa"])
  (actionscript-mode . [(20140202 1544) nil "A simple mode for editing Actionscript 3 files" single ((:keywords "language" "modes")) "melpa"])
  (addressbook-bookmark . [(20140430 10) ((emacs (24))) "An address book based on Standard Emacs bookmarks." single ((:url . "https://github.com/thierryvolpiatto/addressbook-bookmark")) "melpa"])
  (adoc-mode . [(20130917 0) ((markup-faces (1 0 0))) "a major-mode for editing AsciiDoc files in Emacs" single ((:url . "https://github.com/sensorflo/adoc-mode/wiki") (:keywords "wp" "asciidoc")) "melpa"])
  (aes . [(20140515 908) nil "Implementation of AES" single ((:url . "https://github.com/gaddhi/aes") (:keywords "data" "tools")) "melpa"])
  (afternoon-theme . [(20140104 1059) ((emacs (24 1))) "Dark color theme with a deep blue background" single ((:url . "http://github.com/osener/emacs-afternoon-theme") (:keywords "themes")) "melpa"])
  (ag . [(20140322 948) nil "A front-end for ag ('the silver searcher'), the C ack replacement." single nil "melpa"])
  (ahg . [(20140522 2343) nil "Alberto's Emacs interface for Mercurial (Hg)" single ((:url . "https://bitbucket.org/agriggio/ahg")) "melpa"])
  (airplay . [(20130212 426) ((request (20130110 2144)) (simple-httpd (1 4 1)) (deferred (0 3 1))) "Airplay bindings to Emacs" tar ((:url . "https://github.com/gongo/airplay-el") (:keywords "appletv" "airplay")) "melpa"])
  (alect-themes . [(20140522 206) nil "Configurable color themes (light, dark and black) for Emacs 24" tar nil "melpa"])
  (alert . [(20140506 2032) ((gntp (0 1))) "Growl-style notification system for Emacs" single ((:url . "https://github.com/jwiegley/alert") (:keywords "notification" "emacs" "message")) "melpa"])
  (align-cljlet . [(20131016 2356) ((clojure-mode (1 11 5))) "Space align various Clojure forms" single ((:url . "https://github.com/gstamp/align-cljlet")) "melpa"])
  (all-ext . [(20130824 1206) ((all (1 0))) "Extension of M-x all" single ((:url . "http://www.emacswiki.org/emacs/download/all-ext.el") (:keywords "all" "search" "replace" "anything" "helm" "occur")) "melpa"])
  (amd-mode . [(20140529 1216) ((projectile (0 10 0)) (s (1 9 0)) (f (0 16 2)) (dash (2 5 0)) (makey (0 3)) (js2-mode (20140114)) (js2-refactor (0 6 1))) "Minor mode for handling JavaScript AMD module requirements." single ((:keywords "javascript" "amd" "projectile")) "melpa"])
  (ample-theme . [(20140307 805) nil "Calm Dark Theme for Emacs" tar ((:url . "https://github.com/jordonbiondo/ample-theme") (:keywords "theme" "dark")) "melpa"])
  (ample-zen-theme . [(20131129 440) nil "AmpleZen Theme for Emacs 24" single ((:url . "https://github.com/mjwall/ample-zen") (:keywords "theme" "dark" "emacs 24")) "melpa"])
  (anaconda-mode . [(20140506 308) ((emacs (24))) "Code navigation, documentation lookup and completion for Python" tar ((:url . "https://github.com/proofit404/anaconda-mode")) "melpa"])
  (anaphora . [(20140508 1341) nil "anaphoric macros providing implicit temp variables" single ((:url . "http://github.com/rolandwalker/anaphora") (:keywords "extensions")) "melpa"])
  (android-mode . [(20140421 540) nil "Minor mode for Android application development" single ((:url . "https://github.com/remvee/android-mode") (:keywords "tools" "processes")) "melpa"])
  (angry-police-captain . [(20120829 552) nil "Show quote from http://theangrypolicecaptain.com in the minibuffer" single ((:keywords "games" "web" "fun")) "melpa"])
  (angular-snippets . [(20140513 2223) ((s (1 4 0)) (dash (1 2 0))) "Yasnippets for AngularJS" tar nil "melpa"])
  (annoying-arrows-mode . [(20130515 1000) nil "Ring the bell if using arrows too much" single ((:keywords "learning")) "melpa"])
  (ansi . [(20130827 753) ((s (1 6 1)) (dash (1 5 0))) "Turn string into ansi strings" single ((:url . "http://github.com/rejeep/ansi") (:keywords "color" "ansi")) "melpa"])
  (ant . [(20131227 2307) nil "helpers for compiling with ant" single ((:keywords "compilation" "ant" "java")) "melpa"])
  (anti-zenburn-theme . [(20140523 1453) nil "Low-contrast Zenburn-inverted theme" single ((:url . "https://github.com/m00natic/anti-zenburn-theme")) "melpa"])
  (anx-api . [(20140208 714) nil "Interact with the AppNexus API from Emacs." single ((:keywords "convenience" "json" "rest" "api" "appnexus")) "melpa"])
  (anyins . [(20131229 241) nil "Insert content at multiple places from shell command or kill-ring" single ((:url . "http://github.com/antham/anyins") (:keywords "insert" "rectangular")) "melpa"])
  (anything . [(20130605 1746) nil "open anything / QuickSilver-like candidate-selection framework" tar ((:url . "http://repo.or.cz/w/anything-config.git") (:keywords "files" "frames" "help" "matching" "outlines" "processes" "tools" "convenience" "anything")) "melpa"])
  (anything-exuberant-ctags . [(20140316 1637) ((anything (1 3 9))) "Exuberant ctags anything.el interface" single ((:url . "http://code.101000lab.org") (:keywords "anything" "exuberant ctags")) "melpa"])
  (anything-git-files . [(20130609 243) ((anything (1 3 9))) "anything for git files" single ((:keywords "anything" "git")) "melpa"])
  (anything-git-grep . [(20130608 1940) ((anything (1 3 9))) "anything for git grep" tar ((:url . "https://github.com/mechairoi/anything-git-grep") (:keywords "anything" "git")) "melpa"])
  (anything-milkode . [(20140518 743) ((milkode (0 3)) (anything (1 3 9))) "Command line search with Milkode" single ((:keywords "milkode" "anything" "search" "grep" "jump" "keyword")) "melpa"])
  (anything-prosjekt . [(20140129 4) ((prosjekt (0 3)) (anything (0))) "Anything integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (anything-replace-string . [(20140317 336) ((anything (1 3 9))) "`replace-string' and `query-replace' `anything.el' interface" single ((:url . "http://code.101000lab.org")) "melpa"])
  (anzu . [(20140422 1934) ((cl-lib (0 5)) (emacs (24))) "Show number of matches in mode-line while searching" single ((:url . "https://github.com/syohex/emacs-anzu")) "melpa"])
  (aok . [(20130824 1127) nil "various useful ways to do `multi-occur'" single nil "melpa"])
  (apache-mode . [(20080905 553) nil "major mode for editing Apache configuration files" single ((:keywords "languages" "faces last edit: 2005-01-06")) "melpa"])
  (apples-mode . [(20110120 2018) nil "Major mode for editing and executing AppleScript code" tar ((:keywords "applescript" "languages")) "melpa"])
  (applescript-mode . [(20090320 2332) nil "major mode for editing AppleScript source" single ((:keywords "languages" "tools")) "melpa"])
  (apropos-fn+var . [(20140505 328) nil "Apropos for functions and variables" single ((:url . "http://www.emacswiki.org/apropos-fn+var.el") (:keywords "apropos")) "melpa"])
  (apt-utils . [(20140429 753) nil "Emacs interface to APT (Debian package management)" single nil "melpa"])
  (apt-utils-ido . [(20130527 1345) ((apt-utils (1 212))) "Ido commands for apt-utils" single ((:url . "https://github.com/vapniks/apt-utils-ido") (:keywords "convenience")) "melpa"])
  (archive-region . [(20140201 2345) nil "Move region to archive file instead of killing" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/archive-region.el") (:keywords "languages")) "melpa"])
  (arduino-mode . [(20140108 1602) nil "Major mode for the Arduino language" single ((:keywords "languages" "arduino")) "melpa"])
  (ariadne . [(20131117 911) ((bert (0 1))) "Ariadne plugin for Emacs" single ((:keywords "comm" "convenience" "processes")) "melpa"])
  (ascii . [(20130824 1200) nil "ASCII code display." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ViniciusJoseLatorre") (:keywords "data" "ascii")) "melpa"])
  (ascope . [(20130824 1158) nil "Another cscope interface for emacs" single nil "melpa"])
  (asn1-mode . [(20131218 420) ((emacs (24 3))) "ASN.1/GDMO mode for GNU Emacs" single ((:url . "https://github.com/kawabata/asn1-mode/") (:keywords "languages" "processes" "tools")) "melpa"])
  (async . [(20140311 747) nil "Asynchronous processing in Emacs" tar nil "melpa"])
  (auctex-latexmk . [(20140221 1917) ((auctex (11 87))) "Add LatexMk support to AUCTeX" single ((:url . "https://github.com/tom-tan/auctex-latexmk/") (:keywords "tex")) "melpa"])
  (auctex-lua . [(20130818 1120) nil "Lua editing support for AUCTeX" single ((:url . "http://github.com/vermiculus/auctex-lua") (:keywords "latex" "lua")) "melpa"])
  (audio-notes-mode . [(20140204 1154) nil "Play audio notes synced from somewhere else." single ((:url . "http://github.com/Bruce-Connor/audio-notes-mode") (:keywords "hypermedia" "convenience")) "melpa"])
  (aurel . [(20140319 2341) nil "Search, get info, vote and download AUR packages" single ((:url . "https://github.com/alezost/aurel") (:keywords "tools")) "melpa"])
  (aurora-config-mode . [(20140520 203) nil "Major mode for Apache Aurora configuration files" single ((:url . "https://github.com/bdd/aurora-config.el") (:keywords "languages" "configuration")) "melpa"])
  (auto-async-byte-compile . [(20140212 2212) nil "No description available." single nil "melpa"])
  (auto-auto-indent . [(20131106 1103) ((es-lib (0 1)) (cl-lib (1 0))) "Indents code as you type" single ((:url . "https://github.com/sabof/auto-auto-indent")) "melpa"])
  (auto-capitalize . [(20131014 505) nil "Automatically capitalize (or upcase) words" single ((:keywords "text" "wp" "convenience rcs $id: auto-capitalize.el" "v 2.20 2005/05/25 18:47:22 kevinr exp $")) "melpa"])
  (auto-compile . [(20140521 723) ((cl-lib (0 2)) (packed (0 3 4))) "automatically compile Emacs Lisp libraries" single ((:url . "http://tarsius.github.com/auto-compile") (:keywords "compile" "convenience" "lisp")) "melpa"])
  (auto-complete . [(20140519 650) ((popup (0 5 0))) "Auto Completion for GNU Emacs" tar nil "melpa"])
  (auto-complete-auctex . [(20140223 958) ((yasnippet (0 6 1)) (auto-complete (1 4))) "auto-completion for auctex" single nil "melpa"])
  (auto-complete-c-headers . [(20140325 835) ((auto-complete (1 4))) "An auto-complete source for C/C++ header files" single ((:keywords "c")) "melpa"])
  (auto-complete-chunk . [(20140225 146) ((auto-complete (1 4))) "Auto-completion for dot.separated.words." single ((:url . "https://github.com/tkf/auto-complete-chunk")) "melpa"])
  (auto-complete-clang . [(20140409 52) ((auto-complete (1 3 1))) "Auto Completion source for clang for GNU Emacs" single ((:url . "https://github.com/brianjcj/auto-complete-clang") (:keywords "completion" "convenience")) "melpa"])
  (auto-complete-clang-async . [(20130526 814) nil "Auto Completion source for clang for GNU Emacs" single ((:keywords "completion" "convenience")) "melpa"])
  (auto-complete-exuberant-ctags . [(20140320 24) ((auto-complete (1 4 0))) "Exuberant ctags auto-complete.el source" single ((:url . "http://code.101000lab.org") (:keywords "anto-complete" "exuberant ctags")) "melpa"])
  (auto-complete-nxml . [(20140220 2058) ((auto-complete (1 4))) "do completion by auto-complete.el on nXML-mode" single ((:url . "https://github.com/aki2o/auto-complete-nxml") (:keywords "completion" "html" "xml")) "melpa"])
  (auto-complete-pcmp . [(20140226 2251) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide auto-complete sources using pcomplete results" single ((:url . "https://github.com/aki2o/auto-complete-pcmp") (:keywords "completion")) "melpa"])
  (auto-complete-rst . [(20140225 144) ((auto-complete (1 4))) "Auto-complete extension for ReST and Sphinx" tar ((:url . "https://github.com/tkf/auto-complete-rst")) "melpa"])
  (auto-dictionary . [(20130628 253) nil "automatic dictionary switcher for flyspell" single ((:url . "http://nschum.de/src/emacs/auto-dictionary/") (:keywords "wp")) "melpa"])
  (auto-dim-other-buffers . [(20140421 1237) nil "Makes non-current buffers less prominent" single ((:url . "https://github.com/mina86/auto-dim-other-buffers.el")) "melpa"])
  (auto-indent-mode . [(20140505 655) nil "Auto indent Minor mode" tar ((:url . "https://github.com/mlf176f2/auto-indent-mode.el/") (:keywords "auto" "indentation")) "melpa"])
  (auto-install . [(20130824 1206) nil "Auto install elisp file" single ((:url . "http://www.emacswiki.org/emacs/download/auto-install.el") (:keywords "auto-install")) "melpa"])
  (auto-save-buffers-enhanced . [(20130607 1949) nil "Automatically save buffers in a decent way" single nil "melpa"])
  (auto-shell-command . [(20130404 923) ((deferred (20130312)) (popwin (20130329))) "Run the shell command asynchronously that you specified when you save the file." single ((:keywords "shell" "save" "async" "deferred" "auto")) "melpa"])
  (auto-yasnippet . [(20140331 1425) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" single ((:url . "https://github.com/abo-abo/auto-yasnippet")) "melpa"])
  (autofit-frame . [(20140514 1527) ((fit-frame (0))) "Automatically resize one-window frames to fit" single ((:url . "http://www.emacswiki.org/autofit-frame.el") (:keywords "internal" "extensions" "convenience" "local")) "melpa"])
  (automargin . [(20131112 14) nil "add margins to windows not-splitted, and center them" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (autopair . [(20140311 1211) ((cl-lib (0 3))) "Automagically pair braces and quotes like TextMate" single ((:url . "http://autopair.googlecode.com") (:keywords "convenience" "emulations")) "melpa"])
  (awk-it . [(20130917 1848) nil "Run AWK interactively on region!" single ((:keywords "awk")) "melpa"])
  (babel . [(20131231 725) nil "interface to web translation services such as Babelfish" single ((:url . "http://github.com/juergenhoetzel/babel.el") (:keywords "translation" "web")) "melpa"])
  (back-button . [(20140508 1341) ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Visual navigation through mark rings" single ((:url . "http://github.com/rolandwalker/back-button") (:keywords "convenience" "navigation" "interface")) "melpa"])
  (backtrace-mode . [(20130223 1154) nil "A better way to browse /var/log/messages files" single ((:url . "https://github.com/EricCrosson/backtrace-mode")) "melpa"])
  (backup-each-save . [(20130704 1432) nil "backup each savepoint of a file" single nil "melpa"])
  (backup-walker . [(20130720 816) nil "quickly traverse all backups of a file" single ((:url . "https://github.com/lewang/backup-walker") (:keywords "backup")) "melpa"])
  (base16-theme . [(20130413 1655) nil "No description available." tar nil "melpa"])
  (bash-completion . [(20130526 544) nil "BASH completion for the shell buffer" tar nil "melpa"])
  (batch-mode . [(20130824 1158) nil "major mode for editing ESRI batch scrips" single nil "melpa"])
  (bbcode-mode . [(20130227 1137) nil "Major mode for writing BBCode markup" single ((:url . "https://github.com/ejmr/bbcode-mode")) "melpa"])
  (bbdb- . [(20140221 1554) ((bbdb (20140123 1541)) (log4e (0 2 0)) (yaxception (0 1))) "provide interface for more easily search/choice than BBDB." single ((:url . "https://github.com/aki2o/bbdb-") (:keywords "bbdb" "news" "mail")) "melpa"])
  (bbdb . [(20140515 806) nil "The Insidious Big Brother Database for GNU Emacs" tar nil "melpa"])
  (bbdb-csv-import . [(20140517 226) ((pcsv (1 3 3)) (dash (2 5 0)) (bbdb (20140412 1949))) "import csv to bbdb version 3+" single ((:url . "https://gitlab.com/iankelling/bbdb-csv-import") (:keywords "csv" "util" "bbdb")) "melpa"])
  (bbdb-ext . [(20130513 1152) ((bbdb (2 36))) "Extra commands for BBDB" single ((:url . "https://github.com/vapniks/bbdb-ext") (:keywords "extensions")) "melpa"])
  (bbdb-vcard . [(20131216 1632) ((bbdb (3 0))) "vCard import/export for BBDB" tar ((:url . "http://github.com/vgeddes/bbdb-vcard") (:keywords "data" "calendar" "mail" "news")) "melpa"])
  (bbdb2erc . [(20130606 2329) ((bbdb (3 0))) "make bbdb show if pal is online with ERC, click i to chat" single ((:keywords "irc" "contacts" "chat" "client" "internet")) "melpa"])
  (bdo . [(20140126 101) nil "Do things to a browser page from Emacs. BETA!" tar ((:keywords "development")) "melpa"])
  (beeminder . [(20140421 828) ((org (7))) "Emacs interface for Beeminder" single ((:url . "http://www.philnewton.net/code/beeminder-el/") (:keywords "beeminder")) "melpa"])
  (benchmark-init . [(20140510 732) nil "Benchmarks Emacs require and load calls" tar ((:keywords "benchmark")) "melpa"])
  (bert . [(20131117 214) nil "BERT serialization library for Emacs" single ((:keywords "comm" "data")) "melpa"])
  (better-defaults . [(20130422 1322) nil "Fixing weird quirks and poor defaults" single ((:url . "https://github.com/technomancy/better-defaults") (:keywords "convenience")) "melpa"])
  (bf-mode . [(20130403 742) nil "Browse file persistently on dired" single ((:url . "https://github.com/emacs-jp/bf-mode") (:keywords "convenience")) "melpa"])
  (bibretrieve . [(20131013 1132) ((auctex (11 87)) (emacs (24 3))) "Retrieving BibTeX entries from the web" tar ((:keywords "bibtex" "latex" "mathscinet" "arxiv" "zbmath")) "melpa"])
  (bibslurp . [(20130904 1053) ((s (1 6 0)) (dash (1 5 0))) "retrieve BibTeX entries from NASA ADS" single ((:url . "https://github.com/mkmcc/bibslurp") (:keywords "bibliography" "nasa ads")) "melpa"])
  (bind-key . [(20140525 1009) nil "A simple way to manage personal keybindings" single ((:url . "https://github.com/jwiegley/use-package") (:keywords "keys" "keybinding" "config" "dotemacs")) "melpa"])
  (birds-of-paradise-plus-theme . [(20130419 1429) nil "A brown/orange light-on-dark theme for Emacs 24 (deftheme)." single ((:url . "https://github.com/jimeh/birds-of-paradise-plus-theme.el") (:keywords "themes")) "melpa"])
  (bitlbee . [(20130328 1018) nil "Help get Bitlbee (http://www.bitlbee.org) up and running." single nil "melpa"])
  (bitly . [(20130503 149) nil "Shorten URLs using the bitly.com shortener service" single ((:url . "https://github.com/jorgenschaefer/bitly-el")) "melpa"])
  (blank-mode . [(20130824 1159) nil "minor mode to visualize TAB, (HARD) SPACE, NEWLINE" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ViniciusJoseLatorre") (:keywords "data" "wp")) "melpa"])
  (blgrep . [(20140325 313) ((clmemo (20140321 715))) "Block grep" tar ((:keywords "tools" "convenience")) "melpa"])
  (bm . [(20140303 1532) nil "Visible bookmarks in buffer." single ((:url . "https://github.com/joodland/bm") (:keywords "bookmark" "highlight" "faces" "persistent")) "melpa"])
  (bog . [(20140528 2009) ((dash (2 5 0))) "Extensions for research notes in Org mode" single ((:url . "https://github.com/kyleam/bog") (:keywords "bibtex" "org-mode")) "melpa"])
  (bongo . [(20140514 847) nil "play music with Emacs" tar nil "melpa"])
  (bookmark+ . [(20140527 1641) nil "Bookmark+: extensions to standard library `bookmark.el'." tar ((:url . "http://www.emacswiki.org/bookmark+.el") (:keywords "bookmarks" "bookmark+" "placeholders" "annotations" "search" "info" "url" "w3m" "gnus")) "melpa"])
  (boxquote . [(20081011 1326) nil "Quote text with a semi-box." single nil "melpa"])
  (bpe . [(20131227 2120) nil "Blog from Org mode to Blogger" single ((:url . "https://github.com/yuutayamada/bpe") (:keywords "blogger" "blog")) "melpa"])
  (bracketed-paste . [(20140222 1801) ((emacs (24 3))) "bracketed paste mode support within emacs -nw" single ((:keywords "terminals")) "melpa"])
  (brainfuck-mode . [(20140220 1855) ((langdoc (20130601 1450))) "Brainfuck mode for Emacs" single ((:url . "https://github.com/tom-tan/brainfuck-mode/") (:keywords "brainfuck" "langdoc")) "melpa"])
  (browse-kill-ring . [(20131116 2113) nil "interactively insert items from kill-ring" single ((:url . "https://github.com/browse-kill-ring/browse-kill-ring") (:keywords "convenience")) "melpa"])
  (browse-url-dwim . [(20140508 1341) ((string-utils (0 3 2))) "Context-sensitive external browse URL or Internet search" single ((:url . "http://github.com/rolandwalker/browse-url-dwim") (:keywords "hypermedia")) "melpa"])
  (bs-ext . [(20130824 1159) nil "Extensions to emacs buffer-selection library (bs.el)" single ((:url . "http://www.emacswiki.org/emacs/download/bs-ext.el") (:keywords "convenience" "files")) "melpa"])
  (btc-ticker . [(20140313 641) ((json (1 2)) (request (0 2 0))) "Shows latest bitcoin price" single ((:keywords "news")) "melpa"])
  (bubbleberry-theme . [(20131223 349) ((emacs (24 1))) "A theme based on LightTable for Emacs24" single ((:url . "https://github.com/jasonm23/emacs-bubbleberry-theme")) "melpa"])
  (buffer-buttons . [(20131127 946) nil "Define, save, and load code-safe buttons in files for emacs" single ((:url . "https://github.com/rpav/buffer-buttons")) "melpa"])
  (buffer-move . [(20140522 58) nil "" single ((:url . "https://github.com/lukhas/buffer-move") (:keywords "lisp" "convenience")) "melpa"])
  (buffer-stack . [(20101223 1020) nil "Enhanced intelligent switch-to-other-buffer replacement." single ((:url . "http://www.sixfingeredman.net/proj/xemacs") (:keywords "buffer" "buffers" "switching buffers")) "melpa"])
  (buffer-utils . [(20140512 700) nil "Buffer-manipulation utility functions" single ((:url . "http://github.com/rolandwalker/buffer-utils") (:keywords "extensions")) "melpa"])
  (bufshow . [(20130711 1039) ((emacs (24 1))) "A simple presentation tool for Emacs." single ((:url . "https://github.com/pjones/bufshow")) "melpa"])
  (bug-reference-github . [(20131202 1303) nil "Automatically set `bug-reference-url-format' in Github repositories." tar ((:url . "https://github.com/arnested/bug-reference-github") (:keywords "programming" "tools")) "melpa"])
  (bundler . [(20131213 357) ((inf-ruby (2 1))) "Interact with Bundler from Emacs" single ((:url . "http://github.com/tobiassvn/") (:keywords "bundler" "ruby")) "melpa"])
  (buster-mode . [(20121219 522) nil "Minor mode to speed up development when writing tests with Buster.js" single ((:keywords "buster" "testing" "javascript")) "melpa"])
  (buster-snippets . [(20130714 540) nil "Yasnippets for the Buster javascript testing framework" tar ((:keywords "snippets")) "melpa"])
  (busybee-theme . [(20130920 942) nil "port of vim's mustang theme" single ((:url . "http://github.com/mswift42/busybee-theme")) "melpa"])
  (butler . [(20140404 2226) ((deferred (3 1)) (json (1 2)) (emacs (24))) "Emacs client for Jenkins" tar nil "melpa"])
  (button-lock . [(20140512 702) nil "Clickable text defined by regular expression" single ((:url . "http://github.com/rolandwalker/button-lock") (:keywords "mouse" "button" "hypermedia" "extensions")) "melpa"])
  (c-eldoc . [(20130821 1146) nil "helpful description of the arguments to C functions" single ((:url . "http://github.com/nflath/c-eldoc")) "melpa"])
  (cache . [(20111019 1600) nil "implementation of a hash table whose key-value pairs expire" single nil "melpa"])
  (cacoo . [(20120319 1659) ((concurrent (0 3 1))) "Minor mode for Cacoo : http://cacoo.com" tar nil "melpa"])
  (cake . [(20140313 1710) ((cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP Minor Mode" tar ((:url . "https://github.com/k1LoW/emacs-cake")) "melpa"])
  (cake-inflector . [(20140415 158) ((s (1 9 0))) "Lazy porting CakePHP infrector.php to el" single ((:url . "https://github.com/k1LoW/emacs-cake-inflector")) "melpa"])
  (cake2 . [(20140423 343) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (ht (2 0)) (json (1 2)) (cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP2 Minor Mode" tar ((:url . "http://code.101000lab.org")) "melpa"])
  (calfw . [(20140407 2212) nil "Calendar view framework on Emacs" tar ((:keywords "calendar")) "melpa"])
  (calfw-gcal . [(20120111 200) nil "edit Google calendar for calfw.el." tar ((:url . "https://github.com/myuhe/calfw-gcal.el") (:keywords "convenience" "calendar" "calfw.el")) "melpa"])
  (calmer-forest-theme . [(20130925 2210) nil "Darkish theme with green/orange tint" single ((:url . "https://github.com/caldwell/calmer-forest-theme")) "melpa"])
  (caml . [(20130904 812) nil "No description available." tar nil "melpa"])
  (capture . [(20130828 944) nil "screencasting with \"avconv\" or \"ffmpeg\"" tar nil "melpa"])
  (cask . [(20140523 744) ((s (1 8 0)) (dash (2 2 0)) (f (0 16 0)) (epl (0 5)) (shut-up (0 1 0)) (cl-lib (0 3)) (package-build (0 1))) "Cask: Project management for Emacs package development" tar ((:url . "http://github.com/cask/cask") (:keywords "speed" "convenience")) "melpa"])
  (caskxy . [(20140513 839) ((log4e (0 2 0)) (yaxception (0 1))) "Control Cask in Emacs" single ((:url . "https://github.com/aki2o/caskxy") (:keywords "convenience")) "melpa"])
  (cdnjs . [(20140217 1312) ((cl-lib (0 3)) (dash (2 5 0)) (deferred (0 3 2)) (f (0 16 0)) (pkg-info (0 4))) "A front end for http://cdnjs.com" single ((:url . "https://github.com/yasuyk/cdnjs.el") (:keywords "tools")) "melpa"])
  (cedit . [(20131224 1929) nil "paredit-like commands for c-like languages" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (centered-cursor-mode . [(20131121 1237) nil "cursor stays vertically centered" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/centered-cursor-mode.el") (:keywords "convenience")) "melpa"])
  (centimacro . [(20140306 627) nil "Assign multiple macros as global key bindings" single ((:url . "https://github.com/abo-abo/centimacro") (:keywords "macros")) "melpa"])
  (cerbere . [(20140418 715) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5))) "Unit testing in Emacs for several programming languages" tar ((:url . "https://github.com/nlamirault/cerbere") (:keywords "python" "go" "php" "tests" "tdd")) "melpa"])
  (cfengine-code-style . [(20131209 411) nil "C code style for CFEngine project." single ((:url . "https://github.com/cfengine/core")) "melpa"])
  (cg . [(20140306 620) nil "major mode for editing Constraint Grammar files" single ((:url . "http://beta.visl.sdu.dk/constraint_grammar.html") (:keywords "languages")) "melpa"])
  (change-inner . [(20130208 1130) ((expand-region (0 7))) "Change contents based on semantic units" single ((:keywords "convenience" "extensions")) "melpa"])
  (charmap . [(20131019 2158) nil "Unicode table for Emacs" single ((:url . "https://github.com/lateau/charmap") (:keywords "unicode" "character" "ucs")) "melpa"])
  (cherry-blossom-theme . [(20140126 1025) ((emacs (24 0))) "a soothing color theme for Emacs24." single ((:url . "https://github.com/byels/emacs-cherry-blossom-theme")) "melpa"])
  (chicken-scheme . [(20140510 1153) nil "Scheme-mode extensions for Chicken Scheme" single ((:url . "http://github.com/dleslie/chicken-scheme")) "melpa"])
  (chm-view . [(20110616 1719) nil "View CHM file." single ((:url . "http://www.emacswiki.org/emacs/download/chm-view.el") (:keywords "chm" "chm-view")) "melpa"])
  (chruby . [(20140223 1028) nil "Emacs integration for chruby" single ((:url . "http://www.emacswiki.org/emacs/ChrubyEl") (:keywords "ruby" "chruby")) "melpa"])
  (cider . [(20140529 1400) ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 4 1)) (pkg-info (0 4)) (emacs (24))) "Clojure Integrated Development Environment and REPL" tar ((:url . "http://www.github.com/clojure-emacs/cider") (:keywords "languages" "clojure" "cider")) "melpa"])
  (cider-decompile . [(20131116 1002) ((cider (0 3 0)) (javap-mode (9))) "decompilation extension for cider" single ((:url . "http://www.github.com/clojure-emacs/cider-decompile") (:keywords "languages" "clojure" "cider")) "melpa"])
  (cider-tracing . [(20131018 738) ((cider (0 3 0)) (clojure-mode (2 1 0))) "Tracing extension for CIDER" single ((:url . "http://www.github.com/clojure-emacs/cider-tracing") (:keywords "languages" "clojure" "cider")) "melpa"])
  (circe . [(20140423 717) ((lui (0)) (lcs (0))) "Client for IRC in Emacs" tar nil "melpa"])
  (cl-lib-highlight . [(20140127 1312) ((cl-lib (0 3))) "full cl-lib font-lock highlighting" single ((:url . "https://github.com/skeeto/cl-lib-highlight")) "melpa"])
  (clang-format . [(20140415 657) ((json (1 3))) "Format code using clang-format" single ((:keywords "tools" "c")) "melpa"])
  (clevercss . [(20131228 1755) nil "A major mode for editing CleverCSS files" single ((:keywords "languages" "css")) "melpa"])
  (clippy . [(20140417 414) ((pos-tip (1 0))) "Show tooltip with function documentation at point" single ((:url . "https://github.com/Fuco1/clippy.el") (:keywords "docs")) "melpa"])
  (clips-mode . [(20131012 1401) nil "Major mode for editing CLIPS code and REPL" tar nil "melpa"])
  (clj-refactor . [(20140508 133) ((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2))) "A collection of clojure refactoring functions" single ((:keywords "convenience")) "melpa"])
  (cljsbuild-mode . [(20140516 123) nil "A minor mode for the ClojureScript 'lein cljsbuild' command" single ((:url . "http://github.com/kototama/cljsbuild-mode") (:keywords "clojure" "clojurescript" "leiningen" "compilation")) "melpa"])
  (clmemo . [(20140321 715) nil "Change Log MEMO" tar ((:url . "https://github.com/ataka/clmemo") (:keywords "convenience")) "melpa"])
  (clojure-cheatsheet . [(20140316 1520) ((helm (1 5 3)) (cider (0 1 8))) "The Clojure Cheatsheet for Emacs" single ((:url . "https://github.com/krisajenkins/clojure-cheatsheet") (:keywords "clojure" "nrepl" "cheatsheet" "helm")) "melpa"])
  (clojure-mode . [(20140514 810) nil "Major mode for Clojure code" single ((:url . "http://github.com/clojure-emacs/clojure-mode") (:keywords "languages" "lisp")) "melpa"])
  (clojure-snippets . [(20140325 331) ((yasnippet (0 8 0))) "Yasnippets for clojure" tar nil "melpa"])
  (clojure-test-mode . [(20140502 1311) ((clojure-mode (1 7)) (cider (0 4 0))) "Minor mode for Clojure tests" single ((:url . "http://emacswiki.org/cgi-bin/wiki/ClojureTestMode") (:keywords "languages" "lisp" "test")) "melpa"])
  (closure-lint-mode . [(20101118 1324) nil "minor mode for the Closure Linter" single ((:url . "https://github.com/r0man/closure-lint-mode") (:keywords "tools" "closure" "javascript" "lint" "flymake")) "melpa"])
  (cloud-to-butt-erc . [(20130627 1608) nil "Replace 'the cloud' with 'my butt'" single ((:url . "http://www.github.com/leathekd/cloud-to-butt-erc")) "melpa"])
  (clues-theme . [(20140416 1914) ((emacs (24 0))) "an Emacs 24 theme which may well be fully awesome..." single ((:url . "https://github.com/jasonm23/emacs-clues-theme")) "melpa"])
  (cm-mode . [(20140506 1729) nil "Minor mode for CriticMarkup" single ((:keywords "text" "markdown")) "melpa"])
  (cmake-mode . [(20140217 659) nil "major-mode for editing CMake sources" single nil "melpa"])
  (cmds-menu . [(20131226 1816) nil "`Recent Commands' submenu for the menu-bar `Tools' menu." single ((:url . "http://www.emacswiki.org/cmds-menu.el") (:keywords "convenience" "command" "menu")) "melpa"])
  (cn-outline . [(20100321 914) nil "No description available." single nil "melpa"])
  (cobra-mode . [(20140116 1316) nil "Major mode for .NET-based Cobra language" single ((:url . "http://github.com/Nekroze/cobra-mode") (:keywords "languages")) "melpa"])
  (coffee-fof . [(20131012 530) ((coffee-mode (0 4 1))) "A coffee-mode configuration for `ff-find-other-file'." single ((:url . "http://github.com/yasuyk/coffee-fof") (:keywords "coffee-mode")) "melpa"])
  (coffee-mode . [(20140524 2002) ((emacs (24 1)) (cl-lib (0 5))) "Major mode to edit CoffeeScript files in Emacs" single ((:url . "http://github.com/defunkt/coffee-mode") (:keywords "coffeescript" "major" "mode")) "melpa"])
  (col-highlight . [(20131226 1817) ((vline (0))) "Highlight the current column." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/col-highlight.el") (:keywords "faces" "frames" "emulation" "highlight" "cursor" "accessibility")) "melpa"])
  (colemak-evil . [(20140508 1612) ((evil (1 0 8))) "Colemak-friendly keybindings for Evil." single ((:url . "https://github.com/patbl/colemak-evil")) "melpa"])
  (color-identifiers-mode . [(20140523 2358) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" single ((:url . "https://github.com/ankurdave/color-identifiers-mode") (:keywords "faces" "languages")) "melpa"])
  (color-moccur . [(20140425 1602) nil "multi-buffer occur (grep) mode" single ((:url . "http://www.bookshelf.jp/elc/color-moccur.el") (:keywords "convenience")) "melpa"])
  (color-theme . [(20080305 34) nil "install color themes" tar ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?ColorTheme") (:keywords "faces")) "melpa"])
  (color-theme-approximate . [(20140227 2036) nil "Makes Emacs theme works on terminal transparently" single nil "melpa"])
  (color-theme-buffer-local . [(20120702 1336) nil "Install color-themes by buffer." single ((:url . "http://github.com/vic/color-theme-buffer-local") (:keywords "faces")) "melpa"])
  (color-theme-sanityinc-solarized . [(20140517 18) nil "A version of Ethan Schoonover's Solarized themes" tar nil "melpa"])
  (color-theme-sanityinc-tomorrow . [(20140517 17) nil "A version of Chris Kempson's various Tomorrow themes" tar nil "melpa"])
  (color-theme-solarized . [(20140408 1309) ((color-theme (6 5 5))) "Solarized themes for Emacs" tar nil "melpa"])
  (colorsarenice-theme . [(20140328 1243) ((emacs (24))) "A color theme." tar nil "melpa"])
  (column-enforce-mode . [(20131209 956) nil "Highlight text that extends beyond a  column" single ((:url . "www.github.com/jordonbiondo/column-enforce-mode")) "melpa"])
  (column-marker . [(20121128 843) nil "Highlight certain character columns" single ((:keywords "tools" "convenience" "highlight")) "melpa"])
  (command-log-mode . [(20120329 629) nil "log keyboard commands to buffer" single ((:url . "https://github.com/lewang/command-log-mode") (:keywords "help")) "melpa"])
  (commander . [(20140120 1052) ((s (1 6 0)) (dash (2 0 0)) (cl-lib (0 3)) (f (0 6 1))) "Emacs command line parser" single ((:url . "http://github.com/rejeep/commander.el") (:keywords "cli" "argv")) "melpa"])
  (company . [(20140528 1656) ((emacs (24 1)) (cl-lib (0 5))) "Modular text completion framework" tar ((:url . "http://company-mode.github.io/") (:keywords "abbrev" "convenience" "matching")) "melpa"])
  (company-cider . [(20140201 1017) ((company (0 6 13)) (cider (0 6 0))) "company-mode completion back-end for Cider" single ((:url . "https://github.com/clojure-emacs/company-cider") (:keywords "company-mode" "completion" "backend" "cider" "clojure")) "melpa"])
  (company-go . [(20140505 1312) ((company (0 8 0))) "company-mode backend for Go (using gocode)" single ((:keywords "languages")) "melpa"])
  (company-inf-python . [(20140428 2315) ((company (0 6 12))) "Inferior python backend for company-mode" single ((:url . "https://github.com/proofit404/company-inf-python")) "melpa"])
  (company-inf-ruby . [(20140306 1953) ((company (0 6 10)) (inf-ruby (2 2 7))) "company-mode completion back-end for inf-ruby" single ((:url . "https://github.com/company-mode/company-inf-ruby")) "melpa"])
  (company-tern . [(20140526 1110) ((company (0 8 0)) (tern (0 0 1)) (dash (2 6 0)) (s (1 9 0))) "Tern backend for company-mode" single ((:url . "https://github.com/proofit404/company-tern")) "melpa"])
  (concurrent . [(20140303 1635) ((deferred (0 3 1))) "Concurrent utility functions for emacs lisp" single ((:url . "https://github.com/kiwanami/emacs-deferred/blob/master/README-concurrent.markdown") (:keywords "deferred" "async" "concurrent")) "melpa"])
  (confluence . [(20140410 1723) ((xml-rpc (1 6 4))) "Emacs mode for interacting with confluence wikis" tar ((:url . "http://code.google.com/p/confluence-el/") (:keywords "confluence" "wiki" "xmlrpc")) "melpa"])
  (conkeror-minor-mode . [(20131218 334) nil "Mode for editing conkeror javascript files." single ((:url . "http://github.com/BruceConnor/conkeror-minor-mode") (:keywords "programming" "tools")) "melpa"])
  (connection . [(20131005 526) nil "TCP-based client connection" single ((:keywords "network")) "melpa"])
  (control-mode . [(20140218 607) nil "A \"control\" mode, similar to vim's \"normal\" mode" single ((:url . "https://github.com/stephendavidmarsh/control-mode") (:keywords "convenience" "emulations")) "melpa"])
  (cperl-mode . [(20140309 122) nil "Perl code editing commands for Emacs" single ((:keywords "languages" "perl")) "melpa"])
  (cpputils-cmake . [(20140503 424) nil "Easy real time C++ syntax check and intellisense if you use CMake" tar nil "melpa"])
  (crab . [(20130609 958) ((websocket (1 0)) (json (1 2))) "WebSocket server to remotely control a browser" single ((:url . "https://github.com/puffnfresh/crab-emacs")) "melpa"])
  (crappy-jsp-mode . [(20140311 231) nil "A pretty crappy major-mode for jsp." single ((:keywords "jsp" "major" "mode")) "melpa"])
  (creds . [(20140510 1006) ((s (1 9 0)) (dash (2 5 0))) "A parser credentials file library (not limited to credentials entries)" tar nil "melpa"])
  (creole . [(20140325 1159) ((noflet (0 0 3)) (kv (0 0 17))) "A parser for the Creole Wiki language" single ((:keywords "lisp" "creole" "wiki")) "melpa"])
  (creole-mode . [(20130721 1750) nil "a markup mode for creole" single ((:url . "https://github.com/nicferrier/creole-mode") (:keywords "hypermedia" "wp")) "melpa"])
  (crontab-mode . [(20090510 1355) nil "Mode for editing crontab files" single ((:url . "http://www.mahalito.net/~harley/elisp/crontab-mode.el") (:keywords "cron" "crontab" "emacs")) "melpa"])
  (crosshairs . [(20131226 1823) ((hl-line+ (0)) (col-highlight (0)) (vline (0))) "Highlight the current line and column." single ((:url . "http://www.emacswiki.org/crosshairs.el") (:keywords "faces" "frames" "emulation" "highlight" "cursor" "accessibility")) "melpa"])
  (cryptol-mode . [(20140426 1004) nil "Cryptol major mode for Emacs" single ((:url . "http://github.com/thoughtpolice/cryptol-mode") (:keywords "cryptol" "cryptography")) "melpa"])
  (csharp-mode . [(20130824 1200) nil "C# mode derived mode" single ((:url . "http://code.google.com/p/csharpmode/") (:keywords "c#" "languages" "oop" "mode")) "melpa"])
  (css-eldoc . [(20140128 2337) nil "an eldoc-mode plugin for CSS source code" tar nil "melpa"])
  (cssh . [(20120823 1241) nil "clusterssh implementation for emacs" single ((:url . "http://tapoueh.org/emacs/cssh.html") (:keywords "clusterssh" "ssh" "cssh")) "melpa"])
  (csv-nav . [(20130407 1820) nil "navigate and edit CSV files" single nil "melpa"])
  (ctable . [(20140304 1659) nil "Table component for Emacs Lisp" single ((:url . "https://github.com/kiwanami/emacs-ctable") (:keywords "table")) "melpa"])
  (ctags . [(20110911 304) nil "Exuberant Ctags utilities for Emacs" single ((:url . "https://bitbucket.org/semente/ctags.el") (:keywords "tags" "ctags" "etags")) "melpa"])
  (ctags-update . [(20131125 743) nil "(auto) update TAGS in parent directory using exuberant-ctags" single ((:url . "https://github.com/jixiuf/helm-etags-plus") (:keywords "exuberant-ctags" "etags")) "melpa"])
  (ctl-mode . [(20131229 2316) nil "Major mode for editing GrADS script files" single ((:keywords "grads" "script" "major-mode")) "melpa"])
  (ctxmenu . [(20140303 1342) ((popup (20140205 103)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a context menu like right-click." tar ((:url . "https://github.com/aki2o/emacs-ctxmenu") (:keywords "popup")) "melpa"])
  (cucumber-goto-step . [(20131209 2119) ((pcre2el (1 5))) "Jump to cucumber step definition" single ((:url . "http://orthogonal.me")) "melpa"])
  (cursor-chg . [(20131226 1824) nil "Change cursor dynamically, depending on the context." single ((:url . "http://www.emacswiki.org/cursor-chg.el") (:keywords "cursor" "accessibility")) "melpa"])
  (cursor-test . [(20131207 932) ((emacs (24))) "testing library for cursor position in emacs." single ((:url . "https://github.com/ainame/cursor-test.el")) "melpa"])
  (cus-edit+ . [(20140101 1842) nil "Enhancements to `cus-edit.el'." single ((:url . "http://www.emacswiki.org/cus-edit+.el") (:keywords "help" "customize" "help" "faces")) "melpa"])
  (cyberpunk-theme . [(20140527 1852) nil "Cyberpunk Color Theme" single ((:keywords "color" "theme" "cyberpunk")) "melpa"])
  (cycbuf . [(20131203 1237) nil "Cycle buffers, inspired by swbuff.el, swbuff-x.el, and bs.el" single ((:url . "https://github.com/martinp26/cycbuf") (:keywords "files" "convenience" "buffer switching")) "melpa"])
  (cypher-mode . [(20140221 422) nil "major mode for editing cypher scripts" single ((:url . "http://github.com/fxbois/cypher-mode") (:keywords "cypher" "graph")) "melpa"])
  (cython-mode . [(20140322 8) nil "Major mode for editing Cython files" single nil "melpa"])
  (d-mode . [(20140206 1054) nil "D Programming Language mode for (X)Emacs" single ((:keywords "d" "programming" "language" "emacs" "cc-mode")) "melpa"])
  (dakrone-theme . [(20140211 2045) nil "dakrone's custom dark theme" single ((:url . "https://github.com/dakrone/dakrone-theme") (:keywords "color" "themes" "this" "file" "is" "not" "part" "of" "gnu" "emacs.")) "melpa"])
  (darcsum . [(20140315 2110) nil "a pcl-cvs like interface for managing darcs patches" tar ((:keywords "completion" "convenience" "tools" "vc")) "melpa"])
  (dark-souls . [(20140314 428) nil "Prepare to die" single ((:url . "http://github.com/tomjakubowski/dark-souls.el") (:keywords "games")) "melpa"])
  (darkburn-theme . [(20140510 1449) nil "A not-so-low contrast color theme for Emacs." single ((:url . "http://github.com/gorauskas/darkburn-theme")) "melpa"])
  (dart-mode . [(20140411 1313) nil "Major mode for editing Dart files" single ((:url . "http://code.google.com/p/dart-mode") (:keywords "language")) "melpa"])
  (dash . [(20140528 511) nil "A modern list library for Emacs" single ((:keywords "lists")) "melpa"])
  (dash-at-point . [(20140515 1839) nil "Search the word at point with Dash" single ((:url . "https://github.com/stanaka/dash-at-point")) "melpa"])
  (dash-functional . [(20140524 517) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single ((:keywords "lisp" "functions" "combinators")) "melpa"])
  (datomic-snippets . [(20130707 1315) ((s (1 4 0)) (dash (1 2 0)) (yasnippet (0 6 1))) "Yasnippets for Datomic" tar nil "melpa"])
  (dayone . [(20131117 255) ((uuid (0 0 3)) (mustache (0 22)) (ht (1 5))) "Utility script for Day One" tar ((:url . "https://github.com/mori-dev/emacs-dayone") (:keywords "day one" "tools" "convenience")) "melpa"])
  (db . [(20140421 1411) ((kv (0 0 11))) "A database for EmacsLisp" single ((:keywords "data" "lisp")) "melpa"])
  (db-pg . [(20130131 1102) ((pg (0 12)) (db (0 0 6))) "A PostgreSQL adapter for emacs-db" single ((:keywords "data" "comm" "database" "postgresql")) "melpa"])
  (debpaste . [(20140208 2) ((xml-rpc (1 6 7))) "Interface for getting/posting/deleting pastes from paste.debian.net" single ((:url . "http://github.com/alezost/debpaste.el") (:keywords "paste")) "melpa"])
  (debug-print . [(20140125 1619) ((emacs (24))) "A nice printf debugging environment by the way Gauche do" single ((:url . "https://github.com/kenoss/debug-print") (:keywords "extensions" "lisp" "tools" "maint")) "melpa"])
  (decl . [(20140424 2227) ((dash (2 5 0)) (emacs (24 3)) (cl-lib (0 3))) "Enables you to organize your code in a declarative manner" single ((:url . "https://github.com/preetpalS/decl.el")) "melpa"])
  (dedicated . [(20090428 1231) nil "A very simple minor mode for dedicated buffers" single ((:keywords "dedicated" "buffer")) "melpa"])
  (dedukti-mode . [(20140430 734) nil "Major mode for Dedukti files" single nil "melpa"])
  (deferred . [(20140303 1634) nil "Simple asynchronous functions for emacs lisp" single ((:url . "https://github.com/kiwanami/emacs-deferred") (:keywords "deferred" "async")) "melpa"])
  (deft . [(20131027 757) nil "quickly browse, filter, and edit plain text notes" single ((:url . "http://jblevins.org/projects/deft/") (:keywords "plain text" "notes" "simplenote" "notational velocity")) "melpa"])
  (delim-kill . [(20100516 2320) nil "Kill text between delimiters." single ((:url . "http://github.com/thomas11/delim-kill/tree/master") (:keywords "convenience" "languages")) "melpa"])
  (demangle-mode . [(20140516 743) ((emacs (24)) (cl-lib (0 1))) "Automatically demangle C++ symbols" single ((:keywords "c" "tools")) "melpa"])
  (desktop-registry . [(20140119 1343) nil "Keep a central registry of desktop files" single ((:url . "http://projects.ryuslash.org/desktop-registry/") (:keywords "convenience")) "melpa"])
  (dic-lookup-w3m . [(20140528 525) ((w3m (20120723 324)) (stem (20120826))) "look up dictionaries on the Internet" tar ((:keywords "emacs-w3m" "w3m" "dictionary")) "melpa"])
  (dictionary . [(20131005 526) ((connection (1 10)) (link (1 10))) "Client for rfc2229 dictionary servers" single ((:keywords "interface" "dictionary")) "melpa"])
  (diff-hl . [(20140416 524) ((cl-lib (0 2))) "Highlight uncommitted changes" tar ((:url . "https://github.com/dgutov/diff-hl") (:keywords "vc" "diff")) "melpa"])
  (dim-autoload . [(20140309 1759) nil "dim complete autoload cookie lines" single ((:url . "http://github.com/tarsius/dim-autoload") (:keywords "convenience")) "melpa"])
  (diminish . [(20091203 1012) nil "Diminished modes are minor modes with no modeline display" single ((:url . "http://www.eskimo.com/~seldon") (:keywords "extensions" "diminish" "minor" "codeprose")) "melpa"])
  (dircmp . [(20130806 1157) nil "Compare and sync directories." tar ((:url . "https://github.com/matthewlmcclure/dircmp-mode") (:keywords "unix" "tools")) "melpa"])
  (dired+ . [(20140528 1926) nil "Extensions to Dired." single ((:url . "http://www.emacswiki.org/dired+.el") (:keywords "unix" "mouse" "directories" "diredp" "dired")) "melpa"])
  (dired-avfs . [(20140220 1247) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "AVFS support for dired" single ((:keywords "files")) "melpa"])
  (dired-details+ . [(20131226 1832) ((dired-details (0))) "Enhancements to library `dired-details+.el'." single ((:url . "http://www.emacswiki.org/dired-details+.el") (:keywords "dired" "frames")) "melpa"])
  (dired-details . [(20130824 1158) nil "make file details hide-able in dired" single ((:keywords "dired" "hide")) "melpa"])
  (dired-dups . [(20130527 1425) nil "Find duplicate files and display them in a dired buffer" single ((:url . "https://github.com/vapniks/dired-dups") (:keywords "unix")) "melpa"])
  (dired-efap . [(20140122 856) nil "Edit Filename At Point in a dired buffer" single ((:url . "https://github.com/juan-leon/dired-efap") (:keywords "dired" "environment" "files" "renaming")) "melpa"])
  (dired-filter . [(20140331 438) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Ibuffer-like filtering for dired" single ((:keywords "files")) "melpa"])
  (dired-hacks-utils . [(20140401 1220) ((dash (2 5 0))) "Utilities and helpers for dired-hacks collection" single ((:keywords "files")) "melpa"])
  (dired-imenu . [(20140109 810) nil "imenu binding for dired mode" single ((:url . "https://github.com/DamienCassou/dired-imenu") (:keywords "dired" "imenu")) "melpa"])
  (dired-k . [(20140425 105) ((cl-lib (0 5)) (emacs (24))) "highlight dired buffer by file size, modified time, git status" single ((:url . "https://github.com/syohex/emacs-dired-k")) "melpa"])
  (dired-open . [(20140319 508) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Open files from dired using using custom actions" single ((:keywords "files")) "melpa"])
  (dired-rainbow . [(20140222 1042) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Extended file highlighting according to its type" single ((:keywords "files")) "melpa"])
  (dired-single . [(20130824 1200) nil "Reuse the current dired buffer to visit another directory" single ((:keywords "dired" "reuse" "buffer" "latest" "version:" "http://www.northbound-train.com/emacs.html")) "melpa"])
  (dired-sort-menu+ . [(20131226 1833) ((dired-sort-menu (0))) "Extensions to `dired-sort-menu.el'" single ((:url . "http://www.emacswiki.org/dired-sort-menu+.el") (:keywords "directories" "diredp" "dired")) "melpa"])
  (dired-sort-menu . [(20130824 1207) nil "provide menu/dialogue for dired sort options" single ((:url . "http://centaur.maths.qmw.ac.uk/Emacs/") (:keywords "dired" "sort" "menu" "dialogue")) "melpa"])
  (dired-subtree . [(20140408 1154) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Insert subdirectories in a tree-like fashion" single ((:keywords "files")) "melpa"])
  (dired-toggle . [(20131023 110) nil "provide a simple way to toggle dired buffer for current directory" single ((:url . "https://github.com/fasheng/dired-toggle") (:keywords "dired" "toggle")) "melpa"])
  (dired-toggle-sudo . [(20131022 626) nil "Browse directory with sudo privileges." single ((:keywords "emacs" "dired")) "melpa"])
  (direx . [(20140323 908) nil "Simple Directory Explorer" tar ((:keywords "convenience")) "melpa"])
  (direx-grep . [(20140515 806) ((direx (0 1 -3))) "Grep node of direx.el using incremental search like anything.el/helm.el" single ((:url . "https://github.com/aki2o/direx-grep") (:keywords "convenience")) "melpa"])
  (dirtree . [(20140129 832) ((tree-mode (1 1 1 1)) (windata (0))) "Directory tree views" single nil "melpa"])
  (dirtree-prosjekt . [(20140129 104) ((prosjekt (0 3)) (dirtree (0 1))) "dirtree integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (disaster . [(20130509 1055) nil "Disassemble C/C++ code under cursor in Emacs" single ((:url . "https://github.com/jart/disaster") (:keywords "tools")) "melpa"])
  (discover . [(20140103 1339) ((makey (0 3))) "discover more of Emacs" single nil "melpa"])
  (discover-js2-refactor . [(20140129 752) ((js2-refactor (20131221 501)) (discover (20140103 1339))) "Adds discover context menu for js2-refactor" single ((:keywords "js2-refactor" "discover")) "melpa"])
  (discover-my-major . [(20140510 1007) ((makey (0 2))) "Discover key bindings and their meaning for the current Emacs major mode" single ((:url . "https://github.com/steckerhalter/discover-my-major") (:keywords "discover" "help" "major-mode" "keys")) "melpa"])
  (disk . [(20081128 1506) nil "simplified find-file, revert-file, save-buffer interface" single ((:url . "http://www.emacswiki.org/emacs/DiskKey") (:keywords "convenience")) "melpa"])
  (dispass . [(20140202 731) ((dash (1 0 0))) "Emacs wrapper for DisPass" single ((:url . "http://projects.ryuslash.org/dispass.el/") (:keywords "processes")) "melpa"])
  (display-theme . [(20140115 756) ((emacs (24))) "display current theme(s) at mode-line" single ((:url . "https://github.com/kawabata/emacs-display-theme/") (:keywords "tools")) "melpa"])
  (distinguished-theme . [(20140513 1150) nil "A dark and elegant theme for emacs." single ((:url . "https://github.com/Lokaltog/distinguished-theme")) "melpa"])
  (dizzee . [(20111009 616) nil "A more pleasant way to manage your project's subprocesses in Emacs." tar nil "melpa"])
  (django-mode . [(20140207 1050) nil "Major mode for Django web framework." tar ((:keywords "languages")) "melpa"])
  (django-snippets . [(20131229 811) ((yasnippet (0 8 0))) "Yasnippets for django" tar ((:url . "https://github.com/myfreeweb/django-mode")) "melpa"])
  (django-theme . [(20131022 202) nil "Custom face theme for Emacs" single ((:url . "http://github/anrzejsliwa/django-theme")) "melpa"])
  (dkdo . [(20131110 319) ((dkmisc (0 50)) (emacs (24 1))) "Do List major mode based on org-mode." tar nil "melpa"])
  (dklrt . [(20131110 541) ((dkmisc (0 50)) (ledger-mode (20130908 1357)) (emacs (24 1))) "Ledger Recurring Transactions." tar nil "melpa"])
  (dkmisc . [(20131110 315) ((emacs (24 1))) "Miscellaneous functions required by dk* packages." tar nil "melpa"])
  (dna-mode . [(20130821 1105) nil "a major mode for editing dna sequences" tar ((:url . "http://www.mahalito.net/~harley/elisp/dna-mode.el") (:keywords "dna" "emacs" "editing")) "melpa"])
  (docbook-snippets . [(20130716 1849) ((yasnippet (0 8 0))) "Yasnippets for DocBook" tar ((:keywords "snippets")) "melpa"])
  (dockerfile-mode . [(20140408 719) nil "Major mode for editing Docker's Dockerfiles" single nil "melpa"])
  (dokuwiki-mode . [(20140130 936) nil "Major mode for DokuWiki document" single ((:url . "https://github.com/kbkbkbkb1/emacs-dokuwiki") (:keywords "dokuwiki")) "melpa"])
  (dollaro . [(20130620 1325) ((s (1 6 0))) "simple text templates" single ((:keywords "tools" "convenience")) "melpa"])
  (dom . [(20091224 1827) nil "DOM implementation" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?XmlParser") (:keywords "xml")) "melpa"])
  (doremi . [(20131226 1835) nil "Do Re Mi: Incremental change using arrow keys or mouse wheel." single ((:url . "http://www.emacswiki.org/doremi.el") (:keywords "keys" "cycle" "repeat" "higher-order")) "melpa"])
  (doremi-cmd . [(20131226 1833) ((doremi (0))) "Miscellaneous Do Re Mi commands" single ((:url . "http://www.emacswiki.org/doremi-cmd.el") (:keywords "keys" "cycle" "repeat")) "melpa"])
  (doremi-frm . [(20131226 1834) ((doremi (0)) (faces+ (0)) (frame-fns (0)) (hexrgb (0))) "Incrementally adjust face attributes and frame parameters." single ((:url . "http://www.emacswiki.org/doremi-frm.el") (:keywords "frames" "extensions" "convenience" "keys" "repeat" "cycle")) "melpa"])
  (doremi-mac . [(20131226 1835) nil "A macro for defining Do Re Mi commands." single ((:url . "http://www.emacswiki.org/doremi-mac.el") (:keywords "extensions" "convenience" "keys" "repeat" "cycle")) "melpa"])
  (dos . [(20130711 409) nil "Major mode for editing Dos scripts" single ((:keywords "languages")) "melpa"])
  (dot-mode . [(20140128 1716) nil "No description available." single nil "melpa"])
  (download-region . [(20140224 653) ((cl-lib (0 3))) "Simple in-buffer download manager" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (downplay-mode . [(20140110 2058) nil "focus attention on a region of the buffer" single ((:url . "https://github.com/tobias/downplay-mode/")) "melpa"])
  (dpaste . [(20140503 450) nil "Emacs integration for dpaste.com" single ((:keywords "paste" "pastie" "pastebin" "dpaste" "python")) "melpa"])
  (dpaste_de . [(20131015 525) ((web (0 3 7))) "Emacs mode to paste to dpaste.de" single ((:keywords "pastebin")) "melpa"])
  (draft-mode . [(20140517 2246) nil "Rough drafting for Emacs." single ((:url . "https://github.com/gaudecker/draft-mode") (:keywords "draft" "drafting")) "melpa"])
  (drag-stuff . [(20140121 723) nil "Drag stuff (lines, words, region, etc...) around" tar nil "melpa"])
  (drill-instructor-AZIK-force . [(20120907 1817) ((popup (0 5))) "Support AZIK input" tar nil "melpa"])
  (dropbox . [(20130513 1537) ((json (1 2)) (oauth (1 0 3))) "Emacs backend for dropbox" single ((:keywords "dropbox")) "melpa"])
  (dropdown-list . [(20120329 1636) nil "Drop-down menu interface" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/dropdown-list.el") (:keywords "menu" "convenience" "dropdown")) "melpa"])
  (drupal-mode . [(20140312 639) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar ((:url . "https://github.com/arnested/drupal-mode") (:keywords "programming" "php" "drupal")) "melpa"])
  (drupal-spell . [(20130520 955) nil "Aspell extra dictionary for Drupal" tar ((:url . "https://github.com/arnested/drupal-spell") (:keywords "wp")) "melpa"])
  (dsvn . [(20130120 1257) nil "Subversion interface" single ((:keywords "docs")) "melpa"])
  (dtrt-indent . [(20140325 1330) nil "Adapt to foreign indentation offsets" tar ((:keywords "convenience" "files" "languages" "c")) "melpa"])
  (ducpel . [(20140418 2216) ((cl-lib (0 5))) "Logic game with sokoban elements" tar ((:url . "https://github.com/alezost/ducpel") (:keywords "games")) "melpa"])
  (dummy-h-mode . [(20130824 1159) nil "switch major mode to c-/c++-/objc-mode on .h file" single ((:keywords "c-mode" "c++-mode" "objc-mode")) "melpa"])
  (dummyparens . [(20140214 2305) nil "parenthesis auto-pairing and wrapping" single ((:url . "https://github.com/snosov1/dummyparens") (:keywords "dummyparens" "auto-pair" "wrapping")) "melpa"])
  (duplicate-thing . [(20120515 948) nil "Duplicate current line & selection" single ((:keywords "command" "duplicate" "line" "selection")) "melpa"])
  (dvorak-mode . [(20140423 1105) nil "Switch to dvorak layout easily" single ((:url . "https://github.com/proofit404/dvorak-mode")) "melpa"])
  (dylan-mode . [(20140529 345) nil "Major mode for editing Dylan programs." tar nil "melpa"])
  (dynamic-fonts . [(20140508 1341) ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Set faces based on available fonts" single ((:url . "http://github.com/rolandwalker/dynamic-fonts") (:keywords "faces" "frames")) "melpa"])
  (e2wm . [(20130909 2314) ((window-layout (1 2))) "simple window manager for emacs" tar ((:keywords "tools" "window manager")) "melpa"])
  (e2wm-R . [(20130505 2208) ((e2wm (20130225 1602)) (inlineR (20120520 2332)) (ess (20130225 1754))) "some e2wm plugin and perspective for GNU R" single ((:url . "https://github.com/myuhe/e2wm-R.el") (:keywords "convenience" "e2wm")) "melpa"])
  (e2wm-bookmark . [(20120811 2350) ((e2wm (1 2))) "Bookmark plugin for e2wm.el" single ((:keywords "convenience")) "melpa"])
  (e2wm-direx . [(20140523 1723) ((e2wm (1 2)) (direx (0 1 -3))) "Plugin of e2wm.el for direx.el" single ((:url . "https://github.com/aki2o/e2wm-direx") (:keywords "tools" "window manager" "convenience")) "melpa"])
  (e2wm-svg-clock . [(20130303 1326) ((e2wm (20130225 1602)) (svg-clock (0 4))) "e2wm plugin for svg-clock" single ((:url . "https://github.com/myuhe/e2wm-svg-clock.el") (:keywords "convenience" "e2wm")) "melpa"])
  (e2wm-sww . [(20140524 158) ((e2wm (1 2))) "Plugin of e2wm.el to switch plugin quickly" single ((:url . "https://github.com/aki2o/e2wm-sww") (:keywords "tools" "window manager")) "melpa"])
  (easy-after-load . [(20121224 1849) nil "eval-after-load for all files in a directory" single ((:url . "https://github.com/pd/easy-after-load")) "melpa"])
  (easy-kill . [(20140505 343) ((emacs (24)) (cl-lib (0 5))) "kill & mark things easily" tar ((:url . "https://github.com/leoliu/easy-kill") (:keywords "killing" "convenience")) "melpa"])
  (ebib . [(20140423 1321) nil "a BibTeX database manager" tar ((:keywords "text" "bibtex")) "melpa"])
  (ecb . [(20140215 114) nil "a code browser for Emacs" tar ((:keywords "browser" "code" "programming" "tools")) "melpa"])
  (ecukes . [(20140403 2248) ((commander (0 6 1)) (espuds (0 2 2)) (ansi (0 3 0)) (dash (2 2 0)) (s (1 8 0)) (f (0 11 0))) "Cucumber for Emacs." tar nil "melpa"])
  (edbi . [(20130809 556) ((concurrent (0 3 1)) (ctable (0 1 2)) (epc (0 1 1))) "Emacs Database Interface" tar nil "melpa"])
  (ede-compdb . [(20140406 1433) ((ede (1 2)) (semantic (2 2)) (cl-lib (0 4))) "Support for compilation database projects in EDE" single ((:keywords "development" "ninja" "build" "cedet" "ede")) "melpa"])
  (edebug-x . [(20130615 2325) nil "Extensions for Edebug" single ((:url . "https://github.com/ScottyB/edebug-x") (:keywords "extensions")) "melpa"])
  (edit-color-stamp . [(20130529 1033) ((es-lib (0 2)) (cl-lib (1 0))) "Edit a hex color stamp, using a QT or the internal color picker" tar ((:url . "https://github.com/sabof/edit-color-stamp")) "melpa"])
  (edit-list . [(20100930 743) nil "edit a single list" single ((:url . "http://mwolson.org/static/dist/elisp/edit-list.el")) "melpa"])
  (edit-server . [(20131229 441) nil "server that responds to edit requests from Chrome" single ((:url . "https://github.com/stsquad/emacs_chrome")) "melpa"])
  (edit-server-htmlize . [(20130329 1548) ((edit-server (1 9))) "(de)HTMLization hooks for edit-server.el" single ((:url . "https://github.com/frobtech/edit-server-htmlize")) "melpa"])
  (editorconfig . [(20140507 2243) nil "EditorConfig Emacs extension" single ((:url . "http://github.com/editorconfig/editorconfig-emacs#readme")) "melpa"])
  (efire . [(20130811 1649) ((circe (1 2))) "Use campfire from Emacs" single ((:url . "https://github.com/capitaomorte/efire") (:keywords "convenience" "tools")) "melpa"])
  (egg . [(20140508 1803) nil "Emacs Got Git - Emacs interface to Git" tar ((:keywords "git" "version control" "release management")) "melpa"])
  (egison-mode . [(20140217 2053) nil "Egison editing mode" single ((:url . "https://github.com/egisatoshi/egison3/blob/master/elisp/egison-mode.el")) "melpa"])
  (eimp . [(20091025 922) nil "Emacs Image Manipulation Package" single nil "melpa"])
  (ein . [(20140317 1114) ((websocket (0 9)) (request (0 2)) (auto-complete (1 4))) "Emacs IPython Notebook" tar nil "melpa"])
  (el-autoyas . [(20120918 617) nil "Automatically create Emacs-Lisp Yasnippets" tar ((:url . "https://github.com/mlf176f2/el-autoyas.el") (:keywords "emacs" "lisp" "mode" "yasnippet")) "melpa"])
  (el-get . [(20140528 1501) nil "Manage the external elisp bits and pieces you depend upon" tar ((:url . "http://www.emacswiki.org/emacs/el-get") (:keywords "emacs" "package" "elisp" "install" "elpa" "git" "git-svn" "bzr" "cvs" "svn" "darcs" "hg" "apt-get" "fink" "pacman" "http" "http-tar" "emacswiki")) "melpa"])
  (el-mock . [(20140219 506) nil "Tiny Mock and Stub framework in Emacs Lisp" single ((:url . "http://github.com/rejeep/el-mock.el") (:keywords "lisp" "testing" "unittest")) "melpa"])
  (el-spec . [(20121018 4) nil "ruby's rspec like syntax test frame work" single ((:url . "https://github.com/uk-ar/el-spec") (:keywords "test")) "melpa"])
  (el-spice . [(20140113 816) ((thingatpt+ (0))) "Extra spice for emacs lisp programming" tar ((:url . "https://github.com/vedang/el-spice") (:keywords "languages" "extensions")) "melpa"])
  (el-sprunge . [(20140106 1739) ((web-server (20140105 2246)) (htmlize (20130207 1202)) (emacs (24 3))) "Command line paste server with Emacs highlighting" tar nil "melpa"])
  (el-spy . [(20131226 1208) nil "Mocking framework for Emacs lisp. It also support spy, proxy." single ((:url . "https://github.com/uk-ar/el-spy") (:keywords "test")) "melpa"])
  (el-swank-fuzzy . [(20130824 1157) nil "fuzzy symbol completion." single ((:keywords "matching" "completion" "string")) "melpa"])
  (el-x . [(20140111 1401) nil "main entry point for el-x package" tar ((:keywords "lisp")) "melpa"])
  (eldoc-eval . [(20140126 8) nil "Enable eldoc support when minibuffer is in use." single nil "melpa"])
  (eldoc-extension . [(20140306 1445) nil "Some extension for eldoc" single ((:keywords "eldoc")) "melpa"])
  (electric-case . [(20130620 154) nil "insert camelCase, snake_case words without \"Shift\"ing" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (elein . [(20120120 316) nil "running leiningen commands from emacs" single ((:url . "https://github.com/remvee/elein") (:keywords "tools" "processes")) "melpa"])
  (elfeed . [(20140521 833) ((emacs (24 1))) "an Emacs Atom/RSS feed reader" tar nil "melpa"])
  (elfeed-web . [(20140127 1410) ((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1))) "web interface to Elfeed" tar nil "melpa"])
  (elhome . [(20131202 1108) ((initsplit (20120630))) "A framework for a \"home\" Emacs configuration" tar ((:url . "http://github.com/demyanrogozhin/elhome") (:keywords "lisp")) "melpa"])
  (elisp-depend . [(20120427 123) nil "Parse depend libraries of elisp file." single ((:url . "http://www.emacswiki.org/emacs/download/elisp-depend.el") (:keywords "elisp-depend")) "melpa"])
  (elisp-sandbox . [(20131116 1042) nil "Evaluate EmacsLisp expressions in a sandbox" single ((:url . "https://github.com/joelmccracken/elisp-sandbox") (:keywords "lisp")) "melpa"])
  (elisp-slime-nav . [(20140116 405) ((cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" single ((:url . "https://github.com/purcell/elisp-slime-nav") (:keywords "navigation" "slime" "elisp" "emacs-lisp")) "melpa"])
  (elixir-mix . [(20131126 4) nil "Emacs integration for Elixir's mix" single ((:url . "http://github.com/tonini/elixir-mix.el") (:keywords "elixir" "mix" "elixir-mix")) "melpa"])
  (elixir-mode . [(20140525 1107) nil "Major mode for editing Elixir files" tar ((:url . "https://github.com/elixir-lang/emacs-elixir") (:keywords "languages" "elixir")) "melpa"])
  (elixir-yasnippets . [(20130908 1930) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar nil "melpa"])
  (elm-mode . [(20140114 2016) nil "Major mode for Elm" tar ((:url . "https://github.com/jcollard/elm-mode")) "melpa"])
  (elmine . [(20130330 1300) nil "Redmine API access via elisp." single ((:url . "http://github.com/leoc/elmine") (:keywords "tools")) "melpa"])
  (elnode . [(20140203 1506) ((web (0 1 4)) (dash (1 1 0)) (noflet (0 0 7)) (s (1 5 0)) (creole (0 8 14)) (fakir (0 1 6)) (db (0 0 5)) (kv (0 0 17))) "The Emacs webserver." tar nil "melpa"])
  (elpa-audit . [(20131230 1344) nil "Handy functions for inspecting and comparing package archives" single ((:url . "https://github.com/purcell/elpa-audit") (:keywords "maint")) "melpa"])
  (elpy . [(20140523 112) ((auto-complete (1 4)) (find-file-in-project (3 2)) (fuzzy (0 1)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (iedit (0 97)) (nose (0 1 1)) (pyvenv (1 0)) (yasnippet (0 8 0))) "Emacs Python Development Environment" tar nil "melpa"])
  (elscreen . [(20120413 807) nil "Emacs window session manager" single nil "melpa"])
  (elscreen-mew . [(20131201 36) ((elscreen (20120413 1107))) "ElScreen Add-On for Mew" single ((:url . "https://github.com/masutaka/elscreen-mew")) "melpa"])
  (elwm . [(20140217 528) ((dash (1 1 0))) "Minimalistic window manager for emacs" single ((:url . "https://github.com/Fuco1/elwm") (:keywords "docs")) "melpa"])
  (elx . [(20140310 1049) ((emacs (24 3 50))) "extract information from Emacs Lisp libraries" single ((:url . "https://github.com/tarsius/elx") (:keywords "docs" "libraries" "packages")) "melpa"])
  (emacs-eclim . [(20140505 743) ((json (1 2)) (s (1 9 0))) "An interface to the Eclipse IDE." tar nil "melpa"])
  (emacs-setup . [(20120727 726) nil "Package for maintaining your emacs configuration. Clean up your .emacs!" tar nil "melpa"])
  (emacsagist . [(20140331 1130) ((cl-lib (0 5))) "Search Packagist.org packages without leaving Emacs" single ((:url . "http://github.com/echosa/emacsagist") (:keywords "tools")) "melpa"])
  (emacsc . [(20131027 225) nil "helper for emacsc(1)" tar ((:url . "https://github.com/knu/emacsc") (:keywords "tools")) "melpa"])
  (emacsql . [(20140525 1615) ((emacs (24 3)) (cl-lib (0 3)) (finalize (1 0 0)) (pg (0 12))) "high-level SQL database front-end" tar ((:url . "https://github.com/skeeto/emacsql")) "melpa"])
  (emagician-fix-spell-memory . [(20130415 1244) nil "Simple hack into ispell to fix (muscle) memory problems" single ((:keywords "erc" "bitlbee" "bot" "version" "0.1")) "melpa"])
  (emamux . [(20140520 304) ((cl-lib (0 5))) "Interact with tmux" single ((:url . "https://github.com/syohex/emacs-emamux")) "melpa"])
  (emamux-ruby-test . [(20130812 939) ((emamux (0 1)) (projectile (0 9 1))) "Ruby test with emamux" single ((:url . "https://github.com/syohex/emamux-ruby-test")) "melpa"])
  (emmet-mode . [(20140528 1855) nil "Unofficial Emmet's support for emacs" single ((:url . "https://github.com/smihica/emmet-mode") (:keywords "convenience")) "melpa"])
  (emms . [(20140529 1117) nil "The Emacs Multimedia System" tar ((:keywords "emms" "mp3" "mpeg" "multimedia")) "melpa"])
  (emms-info-mediainfo . [(20131223 500) ((emms (0))) "Info-method for EMMS using medianfo" single ((:keywords "multimedia" "processes")) "melpa"])
  (emms-mark-ext . [(20130528 2027) ((emms (3 0))) "Extra functions for emms-mark-mode and emms-tag-edit-mode" single ((:url . "https://github.com/vapniks/emms-mark-ext") (:keywords "convenience" "multimedia")) "melpa"])
  (emms-soundcloud . [(20131221 345) ((emms (20131016)) (json (1 2))) "EMMS source for Soundcloud audio sharing platform" single ((:url . "http://github.com/osener/emms-soundcloud") (:keywords "emms" "soundcloud")) "melpa"])
  (emoji-display . [(20140117 213) nil "emoji displaying module" single ((:url . "https://github.com/ikazuhiro/emoji-display") (:keywords "emoji")) "melpa"])
  (emr . [(20130619 316) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (redshank (1 0 0)) (paredit (24 0 0)) (projectile (0 9 1))) "Emacs refactoring system." tar ((:keywords "tools" "convenience" "refactoring")) "melpa"])
  (enclose . [(20121008 914) nil "Enclose cursor within punctuation pairs." tar nil "melpa"])
  (engine-mode . [(20140512 1325) nil "Define and query search engines from within Emacs." single ((:url . "https://github.com/hrs/engine-mode/engine-mode.el")) "melpa"])
  (enh-ruby-mode . [(20140520 1524) nil "Major mode for editing Ruby files" tar ((:url . "http://github.com/zenspider/Enhanced-Ruby-Mode") (:keywords "languages elisp" "ruby")) "melpa"])
  (enotify . [(20130407 648) nil "A networked notification system for emacs" tar nil "melpa"])
  (ensime . [(20131030 1503) ((s (1 3 0)) (dash (1 0 3)) (popup (0 5 0)) (auto-complete (1 4 0)) (scala-mode2 (0 21))) "ENhanced Scala Interaction Mode for Emacs" tar nil "melpa"])
  (epc . [(20140323 2054) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar ((:url . "https://github.com/kiwanami/emacs-epc") (:keywords "lisp" "rpc")) "melpa"])
  (epic . [(20130319 2340) ((htmlize (1 47))) "Evernote Picker" tar ((:keywords "evernote" "applescript")) "melpa"])
  (epl . [(20140405 51) ((cl-lib (0 3))) "Emacs Package Library" single ((:url . "http://github.com/cask/epl") (:keywords "convenience")) "melpa"])
  (epresent . [(20140419 1754) nil "Simple presentation mode for Emacs Org-mode" single ((:keywords "gui")) "melpa"])
  (eprime-mode . [(20140513 1116) nil "An E-prime checking mode for Emacs" single ((:url . "https://github.com/AndrewHynes/eprime-mode") (:keywords "e-prime" "english" "grammar")) "melpa"])
  (eproject . [(20140118 1608) nil "assign files to projects, programatically" tar ((:keywords "programming" "projects")) "melpa"])
  (erc-crypt . [(20140316 651) nil "Symmetric Encryption for ERC" single ((:keywords "application")) "melpa"])
  (erc-hl-nicks . [(20130114 1348) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" single ((:url . "http://www.github.com/leathekd/erc-hl-nicks")) "melpa"])
  (erc-image . [(20140225 1026) ((erc (5 3))) "Show received image urls in the ERC buffer" single ((:keywords "multimedia")) "melpa"])
  (erc-terminal-notifier . [(20140115 224) nil "OSX notifications via the terminal-notifier gem for Emacs ERC." single ((:url . "http://github.com/julienXX/") (:keywords "erc" "terminal-notifier" "nick")) "melpa"])
  (erc-track-score . [(20130328 515) nil "Add score support to tracked channel buffers" single ((:url . "http://julien.danjou.info/erc-track-score.html")) "melpa"])
  (erc-tweet . [(20140225 1552) ((erc (5 3))) "shows text of a tweet when an url is posted in erc buffers" single ((:keywords "extensions")) "melpa"])
  (erc-view-log . [(20140227 1239) nil "Major mode for viewing ERC logs" single ((:url . "http://github.com/Niluge-KiWi/erc-view-log/raw/master/erc-view-log.el") (:keywords "erc" "viewer" "logs" "colors")) "melpa"])
  (erc-youtube . [(20140225 1556) ((erc (5 3))) "Show received youtube urls in the ERC buffer" single ((:keywords "multimedia")) "melpa"])
  (ercn . [(20121230 1013) nil "Flexible ERC notifications" single ((:url . "http://www.github.com/leathekd/ercn")) "melpa"])
  (eredis . [(20120808 2007) nil "eredis, a Redis client in emacs lisp" single ((:url . "http://code.google.com/p/eredis/")) "melpa"])
  (erefactor . [(20140119 901) nil "Emacs-Lisp refactoring utilities" single ((:url . "https://github.com/mhayashi1120/Emacs-erefactor/raw/master/erefactor.el") (:keywords "extensions" "tools" "maint")) "melpa"])
  (ergoemacs-mode . [(20140527 932) nil "Emacs mode based on common modern software interface and ergonomics." tar ((:url . "https://github.com/ergoemacs/ergoemacs-mode") (:keywords "convenience")) "melpa"])
  (erlang . [(20140319 402) nil "Erlang major mode" tar nil "melpa"])
  (ert-async . [(20140112 314) nil "Async support for ERT" single ((:url . "http://github.com/rejeep/ert-async.el") (:keywords "test")) "melpa"])
  (ert-expectations . [(20130824 1200) nil "The simplest unit test framework in the world" single ((:url . "http://www.emacswiki.org/emacs/download/ert-expectations.el") (:keywords "test" "unittest" "ert" "expectations")) "melpa"])
  (ert-modeline . [(20140115 215) ((s (1 3 1)) (dash (1 2 0)) (emacs (24 1)) (projectile (0 9 1))) "displays ert test results in the modeline." single ((:keywords "tools" "tests" "convenience")) "melpa"])
  (ert-runner . [(20140519 2327) ((s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) "Opinionated Ert testing workflow" tar ((:url . "http://github.com/rejeep/ert-runner.el") (:keywords "test")) "melpa"])
  (es-lib . [(20131029 107) ((cl-lib (0 3))) "A collection of emacs utilities" tar ((:url . "https://github.com/sabof/es-lib")) "melpa"])
  (es-mode . [(20140424 1427) nil "A major mode for editing Elasticsearch queries" tar ((:url . "http://www.github.com/dakrone/es-mode") (:keywords "elasticsearch")) "melpa"])
  (es-windows . [(20140211 104) ((cl-lib (0 3)) (emacs (24))) "Window-management utilities" single ((:url . "https://github.com/sabof/es-windows")) "melpa"])
  (escreen . [(20091203 1013) nil "emacs window session manager" single ((:keywords "extensions")) "melpa"])
  (esh-buf-stack . [(20140107 218) nil "Add a buffer stack feature to Eshell" single ((:keywords "eshell" "extensions")) "melpa"])
  (esh-help . [(20140107 222) ((dash (1 4 0))) "Add some help functions and support for Eshell" single ((:url . "https://github.com/tom-tan/esh-help/") (:keywords "eshell" "extensions")) "melpa"])
  (espresso-theme . [(20130228 2348) nil "Espresso Tutti Colori port for Emacs" single ((:url . "https://github.com/dgutov/espresso-theme")) "melpa"])
  (espuds . [(20140317 815) ((s (1 7 0)) (dash (2 2 0)) (noflet (0 0 10)) (f (0 12 1))) "Ecukes step definitions" single ((:url . "http://github.com/ecukes/espuds") (:keywords "test")) "melpa"])
  (esqlite . [(20140310 308) ((pcsv (1 3 3))) "Manipulate sqlite file from Emacs" single ((:url . "https://github.com/mhayashi1120/Emacs-esqlite/raw/master/esqlite.el") (:keywords "data")) "melpa"])
  (esqlite-helm . [(20140121 623) ((esqlite (0 2 0)) (helm (20131207 845))) "Define helm source for sqlite database" single ((:url . "https://github.com/mhayashi1120/Emacs-esqlite/raw/master/esqlite-helm.el") (:keywords "data")) "melpa"])
  (ess . [(20140522 945) nil "No description available." tar nil "melpa"])
  (ess-R-data-view . [(20130509 458) ((ctable (20130313 1743)) (popup (20130324 1305)) (ess (20130225 1754))) "Data viewer for GNU R" single ((:url . "https://github.com/myuhe/ess-R-data-view.el") (:keywords "convenience")) "melpa"])
  (ess-R-object-popup . [(20130302 336) ((popup (20130117 1954)) (ess (20130225 1754))) "popup description of R object" single ((:url . "https://github.com/myuhe/ess-R-object-popup.el") (:keywords "convenience" "ess")) "melpa"])
  (ess-smart-underscore . [(20131229 1851) ((ess (0))) "Ess Smart Underscore" tar ((:url . "http://github.com/mlf176f2/ess-smart-underscore.el") (:keywords "ess" "underscore")) "melpa"])
  (esup . [(20130607 1350) nil "the Emacs StartUp Profiler (ESUP)" single ((:url . "http://github.com/jschaf/esup") (:keywords "emacs-lisp" "elisp" "profile" "startup")) "melpa"])
  (esxml . [(20140320 1321) ((kv (0 0 5))) "Library for working with xml via esxml and sxml" single ((:keywords "tools" "lisp" "comm")) "melpa"])
  (etags-table . [(20130824 1157) nil "Set tags table(s) based on current file" single ((:keywords "etags" "tags" "tag")) "melpa"])
  (ethan-wspace . [(20140524 1112) nil "whitespace customizations for emacs" single ((:keywords "whitespace" "tab" "newline" "trailing" "clean")) "melpa"])
  (eval-sexp-fu . [(20131230 1351) ((highlight (0))) "Tiny functionality enhancements for evaluating sexps." single ((:keywords "lisp" "highlight" "convenience")) "melpa"])
  (evil . [(20140529 125) ((undo-tree (0 6 3)) (goto-chg (1 6))) "Extensible Vi layer for Emacs." tar nil "melpa"])
  (evil-args . [(20140329 1429) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." single ((:url . "http://github.com/wcsmith/evil-args") (:keywords "evil" "vim-emulation")) "melpa"])
  (evil-exchange . [(20140409 2045) ((evil (1 0 7)) (cl-lib (0 3))) "Exchange text more easily within Evil" single ((:url . "http://github.com/Dewdrops/evil-exchange") (:keywords "evil" "plugin")) "melpa"])
  (evil-god-state . [(20140504 1103) ((evil (1 0 8)) (god-mode (2 12 0))) "use god-mode keybindings in evil-mode" single ((:url . "https://github.com/gridaphobe/evil-god-state") (:keywords "evil" "leader" "god-mode")) "melpa"])
  (evil-indent-textobject . [(20130831 1519) ((evil (0))) "evil textobjects based on indentation" single ((:url . "http://github.com/cofi/evil-indent-textobject") (:keywords "convenience" "evil")) "melpa"])
  (evil-leader . [(20140307 1304) ((evil (0))) "let there be <leader>" single ((:url . "http://github.com/cofi/evil-leader") (:keywords "evil" "vim-emulation" "leader")) "melpa"])
  (evil-matchit . [(20140430 434) nil "Vim matchit ported into Emacs (requires EVIL)" tar nil "melpa"])
  (evil-nerd-commenter . [(20140501 1600) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar nil "melpa"])
  (evil-numbers . [(20121108 1738) nil "increment/decrement numbers like in vim" single ((:url . "http://github.com/cofi/evil-numbers") (:keywords "numbers" "increment" "decrement" "octal" "hex" "binary")) "melpa"])
  (evil-paredit . [(20140521 1712) ((evil (0 0 0)) (paredit (1))) "Paredit support for evil keybindings" single ((:url . "https://github.com/roman/evil-paredit") (:keywords "paredit" "evil")) "melpa"])
  (evil-tabs . [(20140528 1439) ((evil (0 0 0)) (elscreen (0 0 0))) "Integrating Vim-style tabs for Evil mode users." single ((:url . "https://github.com/krisajenkins/evil-tabs") (:keywords "evil" "tab" "tabs" "vim")) "melpa"])
  (evil-terminal-cursor-changer . [(20140423 1151) ((evil (1 0 8))) "Change cursor by evil state on terminal." single ((:url . "https://github.com/7696122/evil-terminal-cursor-changer") (:keywords "evil" "terminal" "cursor")) "melpa"])
  (evil-visualstar . [(20130925 1114) ((evil (0))) "Starts a * or # search from the visual selection" single ((:url . "https://github.com/bling/evil-visualstar") (:keywords "evil" "vim" "visualstar")) "melpa"])
  (evm . [(20140224 316) ((dash (2 3 0)) (f (0 13 0))) "Emacs Version Manager" single ((:url . "http://github.com/rejeep/evm")) "melpa"])
  (eww-lnum . [(20140509 1523) nil "Operations using link numbers" single ((:url . "https://github.com/m00natic/eww-lnum") (:keywords "eww" "browse" "conkeror")) "melpa"])
  (exec-path-from-shell . [(20140219 104) nil "Get environment variables such as $PATH from the shell" single ((:url . "https://github.com/purcell/exec-path-from-shell") (:keywords "environment")) "melpa"])
  (expand-region . [(20140406 324) nil "Increase selected region by semantic units." tar nil "melpa"])
  (express . [(20140508 1341) ((string-utils (0 3 2))) "Alternatives to `message'" single ((:url . "http://github.com/rolandwalker/express") (:keywords "extensions" "message" "interface")) "melpa"])
  (extend-dnd . [(20130328 1034) nil "R drag and Drop" tar ((:url . "https://github.com/mlf176f2/extend-dnd") (:keywords "extend" "drag and drop")) "melpa"])
  (eyebrowse . [(20140408 2230) ((dash (2 4 0)) (s (1 4 0)) (emacs (24))) "Easy window config switching" single ((:url . "https://github.com/wasamasa/eyebrowse") (:keywords "convenience")) "melpa"])
  (eyedropper . [(20131226 1838) ((hexrgb (0))) "Pick foreground and background colors at cursor or pointer." single ((:url . "http://www.emacswiki.org/eyedropper.el") (:keywords "color" "rgb" "hsv" "hexadecimal" "face" "frame")) "melpa"])
  (ez-query-replace . [(20140203 915) ((dash (1 2 0))) "A helpful query-replace." single nil "melpa"])
  (f . [(20140220 21) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single ((:url . "http://github.com/rejeep/f.el") (:keywords "files" "directories")) "melpa"])
  (fabric . [(20140514 854) nil "Launch Fabric using Emacs" tar ((:url . "https://github.com/nlamirault/fabric.el") (:keywords "python" "fabric")) "melpa"])
  (face-remap+ . [(20131226 1839) nil "Extensions to standard library `face-remap.el'." single ((:url . "http://www.emacswiki.org/face-remap+.el") (:keywords "window" "frame" "face" "font")) "melpa"])
  (facemenu+ . [(20140517 2033) nil "Extensions to `facemenu.el'." single ((:url . "http://www.emacswiki.org/facemenu+.el") (:keywords "faces" "extensions" "convenience" "menus" "local")) "melpa"])
  (faces+ . [(20131226 1840) nil "Extensions to `faces.el'." single ((:url . "http://www.emacswiki.org/faces+.el") (:keywords "faces" "local")) "melpa"])
  (factlog . [(20130209 1740) ((deferred (0 3 1))) "File activity logger" single ((:url . "https://github.com/tkf/factlog")) "melpa"])
  (fakespace . [(20120817 1706) nil "fake namespaces with defpackage" single ((:url . "https://github.com/skeeto/elisp-fakespace")) "melpa"])
  (fakir . [(20140417 1347) ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) "fakeing bits of Emacs" single ((:url . "http://github.com/nicferrier/emacs-fakir") (:keywords "lisp" "tools")) "melpa"])
  (fancy-narrow . [(20140424 1627) nil "narrow-to-region with more eye candy." single ((:url . "http://github.com/Bruce-Connor/fancy-narrow") (:keywords "faces" "convenience")) "melpa"])
  (fasd . [(20130831 1003) ((grizzl (0))) "Emacs integration for the command-line productivity booster `fasd'" single ((:url . "https://github.com/steckerhalter/emacs-fasd") (:keywords "cli" "bash" "zsh" "autojump")) "melpa"])
  (fasm-mode . [(20140421 1140) nil "Fasm major mode" single ((:url . "https://github.com/Fanael/fasm-mode")) "melpa"])
  (fastnav . [(20120211 657) nil "Fast navigation and editing routines." single ((:keywords "nav" "fast" "fastnav" "navigation")) "melpa"])
  (feature-mode . [(20140522 1009) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar nil "melpa"])
  (fetch . [(20131130 2330) nil "Fetch and unpack resources" single ((:url . "https://github.com/crshd/fetch.el")) "melpa"])
  (fic-mode . [(20140421 1622) nil "Show FIXME/TODO/BUG/KLUDGE in special face only in comments and strings" single nil "melpa"])
  (figlet . [(20120601 1315) nil "Annoy people with big, ascii art text" single nil "melpa"])
  (files+ . [(20131226 1841) nil "Enhancements of standard library `files.el'." single ((:url . "http://www.emacswiki.org/files+.el") (:keywords "internal" "extensions" "local")) "melpa"])
  (filesets+ . [(20131226 1842) nil "Extensions to `filesets.el'." single ((:url . "http://www.emacswiki.org/filesets+.el")) "melpa"])
  (fill-column-indicator . [(20140509 1101) nil "Graphically indicate the fill column" tar ((:keywords "convenience")) "melpa"])
  (finalize . [(20140127 1046) ((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4))) "finalizers for Emacs Lisp" tar nil "melpa"])
  (find-file-in-project . [(20140221 557) nil "Find files in a project quickly." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/FindFileInProject") (:keywords "project" "convenience")) "melpa"])
  (find-file-in-repository . [(20130221 511) nil "Quickly find files in a git, mercurial or other repository" single ((:url . "https://github.com/hoffstaetter/find-file-in-repository") (:keywords "files" "convenience" "repository" "project" "source control")) "melpa"])
  (find-things-fast . [(20120920 1804) nil "Find things fast, leveraging the power of git" single ((:keywords "project" "convenience")) "melpa"])
  (finder+ . [(20131226 1844) nil "Extensions to standard library finder.el" single ((:url . "http://www.emacswiki.org/finder+.el") (:keywords "help")) "melpa"])
  (findr . [(20130824 1207) nil "Breadth-first file-finding facility for (X)Emacs" single ((:keywords "files")) "melpa"])
  (fiplr . [(20140221 2) ((grizzl (0 1 0)) (cl-lib (0 1))) "Fuzzy Search for Files in Projects" tar nil "melpa"])
  (firebelly-theme . [(20140410 155) ((cl-lib (0 5))) "a subdued, dark theme with pastelish colors." single ((:url . "https://github.com/startling/firebelly")) "melpa"])
  (fit-frame . [(20131226 1844) nil "Resize a frame.  In particular, fit a frame to its buffers." single ((:url . "http://www.emacswiki.org/fit-frame.el") (:keywords "internal" "extensions" "convenience" "local")) "melpa"])
  (fixmee . [(20140508 1341) ((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) "Quickly navigate to FIXME notices in code" single ((:url . "http://github.com/rolandwalker/fixmee") (:keywords "navigation" "convenience")) "melpa"])
  (flash-region . [(20130923 1117) nil "Flash a region" single ((:keywords "utility")) "melpa"])
  (flatland-theme . [(20131204 858) nil "A simple theme for Emacs based on the Flatland theme for Sublime Text" single ((:url . "http://github.com/gregchapple/flatland-emacs")) "melpa"])
  (flatui-theme . [(20140429 314) nil "A color theme for Emacs based on flatuicolors.com" single ((:url . "https://github.com/john2x/flatui-theme.el")) "melpa"])
  (flex-autopair . [(20120809 518) nil "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable." single ((:url . "https://github.com/uk-ar/flex-autopair.el") (:keywords "keyboard" "input")) "melpa"])
  (flex-isearch . [(20130508 1503) nil "Flex matching (like ido) in isearch." single ((:url . "https://bitbucket.org/jpkotta/flex-isearch") (:keywords "convenience" "search")) "melpa"])
  (fliptext . [(20131114 218) nil "Input method for flipping characters upside down" single ((:keywords "games" "i18n")) "melpa"])
  (floobits . [(20140513 1224) ((json (1 2)) (highlight (0))) "Floobits plugin for real-time collaborative editing" tar ((:url . "http://github.com/Floobits/floobits-emacs") (:keywords "comm" "tools")) "melpa"])
  (flx . [(20140420 1131) ((cl-lib (0 3))) "fuzzy matching with good sorting" single ((:url . "https://github.com/lewang/flx")) "melpa"])
  (flx-ido . [(20140416 1727) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" single ((:url . "https://github.com/lewang/flx")) "melpa"])
  (flycheck . [(20140527 1133) ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (pkg-info (0 4)) (cl-lib (0 3)) (emacs (24 1))) "On-the-fly syntax checking (Flymake done right)" tar ((:url . "https://flycheck.readthedocs.org") (:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-cask . [(20140118 923) ((flycheck (0 14)) (dash (2 4 0)) (f (0 11 0))) "Cask support in Flycheck" single ((:url . "https://github.com/flycheck/flycheck-cask") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-color-mode-line . [(20131125 2138) ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) "Change mode line color with Flycheck status" single ((:keywords "convenience" "language" "tools")) "melpa"])
  (flycheck-d-unittest . [(20140416 1456) ((flycheck (0 18)) (dash (1 4 0))) "Add D unittest support to flycheck" single ((:url . "https://github.com/tom-tan/flycheck-d-unittest/") (:keywords "flycheck" "d")) "melpa"])
  (flycheck-dmd-dub . [(20140508 721) nil "Sets flycheck-dmd-include-paths from dub package information" single ((:url . "http://github.com/atilaneves/flycheck-dmd-dub") (:keywords "languages")) "melpa"])
  (flycheck-google-cpplint . [(20140228 647) ((flycheck (0 18))) "Help to comply with the Google C++ Style Guide" single ((:url . "https://github.com/flycheck/flycheck-google-cpplint/") (:keywords "flycheck" "c" "c++")) "melpa"])
  (flycheck-haskell . [(20140518 859) ((flycheck (0 19 -3)) (haskell-mode (13 7)) (dash (2 4 0)) (f (0 11 0))) "Flycheck: Cabal projects and sandboxes" tar ((:url . "https://github.com/flycheck/flycheck-haskell") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-hdevtools . [(20131130 1105) ((flycheck (0 15))) "A flycheck checker for Haskell using hdevtools" single ((:url . "https://github.com/flycheck/flycheck-hdevtools") (:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-ledger . [(20131218 324) ((flycheck (0 15))) "Flycheck integration for ledger files" single ((:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-mercury . [(20140123 312) ((flycheck (0 15)) (s (1 9 0)) (dash (2 4 0))) "Mercury support in Flycheck" single ((:url . "https://github.com/flycheck/flycheck-mercury") (:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-pos-tip . [(20140304 333) ((flycheck (0 18)) (pos-tip (0 4 5))) "Flycheck errors display in tooltip" single ((:url . "https://github.com/flycheck/flycheck-pos-tip") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-pyflakes . [(20140430 1556) ((flycheck (0 18))) "Support pyflakes in flycheck" single nil "melpa"])
  (flycheck-tip . [(20140405 1034) ((flycheck (0 13)) (dash (1 2)) (emacs (24 1)) (popup (0 5 0))) "show flycheck's error by popup-tip" tar ((:url . "https://github.com/yuutayamada/flycheck-tip") (:keywords "flycheck")) "melpa"])
  (flymake-coffee . [(20130828 258) ((flymake-easy (0 1))) "A flymake handler for coffee script" single ((:url . "https://github.com/purcell/flymake-coffee")) "melpa"])
  (flymake-cppcheck . [(20140415 557) ((flymake-easy (0 9))) "Flymake work with Cppcheck for C/C++" single ((:url . "https://github.com/senda-akiha/flymake-cppcheck/") (:keywords "flymake" "cppcheck" "c" "c++")) "melpa"])
  (flymake-css . [(20121104 1104) ((flymake-easy (0 1))) "Flymake support for css using csslint" single ((:url . "https://github.com/purcell/flymake-css")) "melpa"])
  (flymake-cursor . [(20130822 1032) nil "displays flymake error msg in minibuffer after delay" single ((:url . "http://www.emacswiki.org/emacs/flymake-cursor.el") (:keywords "languages" "mode" "flymake")) "melpa"])
  (flymake-easy . [(20130907 131) nil "Helpers for easily building flymake checkers" single ((:url . "https://github.com/purcell/flymake-easy") (:keywords "convenience" "internal")) "melpa"])
  (flymake-elixir . [(20130810 717) nil "A flymake handler for elixir-mode .ex files." single nil "melpa"])
  (flymake-gjshint . [(20130327 532) nil "A flymake handler for javascript using both jshint and gjslint" single ((:keywords "flymake" "javascript" "jshint" "gjslint")) "melpa"])
  (flymake-go . [(20130314 741) ((flymake (0 4 13))) "A flymake handler for go-mode files" single ((:url . "https://github.com/robert-zaremba/flymake-go") (:keywords "go" "flymake")) "melpa"])
  (flymake-google-cpplint . [(20140205 525) ((flymake-easy (0 9))) "Help to comply with the Google C++ Style Guide" single ((:url . "https://github.com/senda-akiha/flymake-google-cpplint/") (:keywords "flymake" "c" "c++")) "melpa"])
  (flymake-haml . [(20130324 351) ((flymake-easy (0 1))) "A flymake handler for haml files" single ((:url . "https://github.com/purcell/flymake-haml")) "melpa"])
  (flymake-haskell-multi . [(20130620 422) ((flymake-easy (0 1))) "Syntax-check haskell-mode using both ghc and hlint" tar nil "melpa"])
  (flymake-hlint . [(20130309 145) ((flymake-easy (0 1))) "A flymake handler for haskell-mode files using hlint" single ((:url . "https://github.com/purcell/flymake-hlint")) "melpa"])
  (flymake-jshint . [(20140319 1500) ((flymake-easy (0 8))) "making flymake work with JSHint" single ((:keywords "flymake" "jshint" "javascript")) "melpa"])
  (flymake-jslint . [(20130613 202) ((flymake-easy (0 1))) "A flymake handler for javascript using jslint" single ((:url . "https://github.com/purcell/flymake-jslint")) "melpa"])
  (flymake-json . [(20130423 2357) ((flymake-easy (0 1))) "A flymake handler for json using jsonlint" single ((:url . "https://github.com/purcell/flymake-json")) "melpa"])
  (flymake-lua . [(20140310 230) nil "Flymake for Lua" single ((:keywords "lua")) "melpa"])
  (flymake-perlcritic . [(20120328 114) ((flymake (0 3))) "Flymake handler for Perl to invoke Perl::Critic" tar ((:url . "https://github.com/illusori/emacs-flymake-perlcritic")) "melpa"])
  (flymake-php . [(20121104 1102) ((flymake-easy (0 1))) "A flymake handler for php-mode files" single ((:url . "https://github.com/purcell/flymake-php")) "melpa"])
  (flymake-phpcs . [(20140111 1932) ((flymake-easy (0 9))) "making flymake work with PHP CodeSniffer" single ((:url . "https://github.com/senda-akiha/flymake-phpcs/") (:keywords "flymake" "phpcs" "php")) "melpa"])
  (flymake-puppet . [(20130731 2203) ((flymake-easy (0 9))) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" single ((:url . "https://github.com/benprew/flymake-puppet")) "melpa"])
  (flymake-python-pyflakes . [(20131127 6) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" single ((:url . "https://github.com/purcell/flymake-python-pyflakes")) "melpa"])
  (flymake-racket . [(20131209 2157) ((flymake-easy (0 1))) "A flymake handler for scheme-mode files" single ((:url . "https://github.com/yuyang0/flymake-racket")) "melpa"])
  (flymake-ruby . [(20121104 1059) ((flymake-easy (0 1))) "A flymake handler for ruby-mode files" single ((:url . "https://github.com/purcell/flymake-ruby")) "melpa"])
  (flymake-rust . [(20131020 345) ((flymake-easy (0 1))) "A flymake handler for rust-mode files" single ((:url . "https://github.com/joaoxsouls/flymake-rust")) "melpa"])
  (flymake-sass . [(20140308 325) ((flymake-easy (0 1))) "Flymake handler for sass and scss files" single ((:url . "https://github.com/purcell/flymake-sass")) "melpa"])
  (flymake-shell . [(20121104 1100) ((flymake-easy (0 1))) "A flymake syntax-checker for shell scripts" single ((:url . "https://github.com/purcell/flymake-shell")) "melpa"])
  (flymake-yaml . [(20130423 848) ((flymake-easy (0 1))) "A flymake handler for YAML" single ((:url . "https://github.com/yasuyk/flymake-yaml") (:keywords "yaml")) "melpa"])
  (flyspell-lazy . [(20140520 800) nil "Improve flyspell responsiveness using idle timers" single ((:url . "http://github.com/rolandwalker/flyspell-lazy") (:keywords "spelling")) "melpa"])
  (fold-dwim . [(20140208 837) nil "Unified user interface for Emacs folding modes" single ((:url . "http://www.dur.ac.uk/p.j.heslin/Software/Emacs")) "melpa"])
  (fold-dwim-org . [(20131203 551) ((fold-dwim (1 2))) "Fold DWIM bound to org key-strokes." single ((:url . "https://github.com/mlf176f2/fold-dwim-org") (:keywords "folding" "emacs" "org-mode")) "melpa"])
  (fold-this . [(20131113 247) nil "Just fold this region please" single ((:keywords "convenience")) "melpa"])
  (font-lock+ . [(20131226 1846) nil "Enhancements to standard library `font-lock.el'." single ((:url . "http://www.emacswiki.org/font-lock+.el") (:keywords "languages" "faces" "highlighting")) "melpa"])
  (font-lock-menus . [(20131226 1847) nil "Font-lock menus: enhanced `font-menus.el'" single ((:url . "http://www.emacswiki.org/font-lock-menus.el") (:keywords "font" "highlighting" "syntax" "decoration")) "melpa"])
  (font-utils . [(20140508 1341) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single ((:url . "http://github.com/rolandwalker/font-utils") (:keywords "extensions")) "melpa"])
  (foreign-regexp . [(20130618 321) nil "search and replace by foreign regexp." tar ((:keywords "convenience" "emulations" "matching" "tools" "unix" "wp")) "melpa"])
  (fountain-mode . [(20140521 18) ((s (1 9 0))) "Major mode for screenwriting in Fountain markup" tar ((:url . "https://github.com/rnkn/fountain-mode/") (:keywords "wp")) "melpa"])
  (frame-cmds . [(20140419 2112) nil "Frame and window commands (interactive functions)." single ((:url . "http://www.emacswiki.org/frame-cmds.el") (:keywords "internal" "extensions" "mouse" "frames" "windows" "convenience")) "melpa"])
  (frame-fns . [(20131226 1849) nil "Non-interactive frame and window functions." single ((:url . "http://www.emacswiki.org/frame-fns.el") (:keywords "internal" "extensions" "local" "frames")) "melpa"])
  (frame-restore . [(20130922 735) ((dash (1 2)) (f (0 11)) (emacs (24 1))) "Restore Emacs frame" single ((:url . "https://github.com/lunaryorn/frame-restore.el") (:keywords "frames" "convenience")) "melpa"])
  (frame-tag . [(20120527 136) nil "Minor mode that assigns a unique number to each frame for easy switching" single ((:url . "http://github.com/liangzan/frame-tag.el") (:keywords "frame" "movement")) "melpa"])
  (framemove . [(20130328 1133) nil "directional frame selection routines" single ((:keywords "frame" "movement" "convenience")) "melpa"])
  (framesize . [(20131017 1432) ((key-chord (0 5 20080915))) "change the size of frames in Emacs" single ((:url . "http://github.com/nicferrier/emacs-framesize") (:keywords "frames")) "melpa"])
  (free-keys . [(20140309 1051) ((cl-lib (0 3))) "Show free keybindings for modkeys or prefixes" single ((:url . "https://github.com/Fuco1/free-keys") (:keywords "convenience")) "melpa"])
  (fringe-current-line . [(20140110 2011) nil "show current line on the fringe." single ((:url . "http://github.com/kyanagi/fringe-current-line/raw/master/fringe-current-line.el")) "melpa"])
  (fringe-helper . [(20130519 741) nil "helper functions for fringe bitmaps" single ((:url . "http://nschum.de/src/emacs/fringe-helper/") (:keywords "lisp")) "melpa"])
  (fsharp-mode . [(20140416 1005) ((auto-complete (1 4)) (popup (0 5)) (pos-tip (0 4 5)) (s (1 3 1)) (dash (1 1 0))) "F# mode for Emacs" tar nil "melpa"])
  (fuel . [(20140425 849) ((cl-lib (0 2)) (emacs (24 2))) "Major mode for the Factor programming language." tar nil "melpa"])
  (full-ack . [(20130423 1304) nil "a front-end for ack" single ((:url . "http://nschum.de/src/emacs/full-ack/") (:keywords "tools" "matching")) "melpa"])
  (fullframe . [(20140501 546) nil "Generalized automatic execution in a single frame" single ((:keywords "fullscreen")) "melpa"])
  (fullscreen-mode . [(20130524 956) nil "fullscreen window support for Emacs" single ((:url . "https://github.com/ryantm/fullscreen-mode") (:keywords "fullscreen" "fullscreen-mode")) "melpa"])
  (function-args . [(20140403 407) nil "C++ completion for GNU Emacs" single ((:url . "https://github.com/abo-abo/function-args")) "melpa"])
  (furl . [(20110112 1707) nil "Friendly URL retrieval" single nil "melpa"])
  (fuzzy . [(20131025 2343) nil "Fuzzy Matching" single ((:keywords "convenience")) "melpa"])
  (fuzzy-format . [(20130824 1200) nil "select indent-tabs-mode and format code automatically." single ((:url . "http://code.101000lab.org, http://trac.codecheck.in")) "melpa"])
  (fuzzy-match . [(20131226 1850) nil "fuzzy matching" single ((:url . "http://www.emacswiki.org/fuzzy-match.el") (:keywords "matching" "completion" "string")) "melpa"])
  (fvwm-mode . [(20140329 350) nil "major mode for editing Fvwm configuration files" single ((:keywords "files")) "melpa"])
  (fwb-cmds . [(20131209 1600) nil "misc frame, window and buffer commands" single ((:url . "http://github.com/tarsius/fwb-cmds") (:keywords "convenience")) "melpa"])
  (fyure . [(20130216 514) nil "An interface to fix Japanese hyoki-yure" tar ((:keywords "languages")) "melpa"])
  (gandalf-theme . [(20130809 247) nil "Gandalf color theme" single ((:keywords "color" "theme")) "melpa"])
  (gap-mode . [(20131212 2130) nil "Major mode for editing files in the GAP programing language." tar ((:url . "https://bitbucket.org/gvol/gap-mode") (:keywords "gap")) "melpa"])
  (gather . [(20140115 552) nil "Gather string in buffer." single ((:url . "https://github.com/mhayashi1120/Emacs-gather/raw/master/gather.el") (:keywords "matching" "convenience" "tools")) "melpa"])
  (geben . [(20100330 343) nil "DBGp protocol frontend, a script debugger" tar ((:url . "http://code.google.com/p/geben-on-emacs/") (:keywords "dbgp" "debugger" "php" "xdebug" "perl" "python" "ruby" "tcl" "komodo")) "melpa"])
  (gedit-mode . [(20140109 928) ((tabbar (0)) (shell-pop (0)) (move-text (0)) (whole-line-or-region (0))) "Emulate the look & feel of GEdit in Emacs" single ((:url . "https://github.com/robru/gedit-mode") (:keywords "gedit" "keys" "keybindings" "easy" "cua")) "melpa"])
  (geiser . [(20140326 951) nil "GNU Emacs and Scheme talk to each other" tar nil "melpa"])
  (genrnc . [(20130711 2251) ((deferred (0 3 1)) (log4e (0 2 0)) (yaxception (0 1))) "generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD." tar ((:url . "https://github.com/aki2o/emacs-genrnc") (:keywords "xml")) "melpa"])
  (gerrit-download . [(20140505 2259) ((emacs (24 0)) (magit (20130828 1540))) "Show gerrit reviews in a diff buffer." single ((:url . "https://github.com/chmouel/gerrit-download.el") (:keywords "tools" "gerrit" "git")) "melpa"])
  (ggo-mode . [(20130524 443) nil "Gengetopt major mode" single ((:keywords "extensions" "convenience" "local")) "melpa"])
  (ggtags . [(20140521 346) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single ((:url . "https://github.com/leoliu/ggtags") (:keywords "tools" "convenience")) "melpa"])
  (gh . [(20140121 2038) ((eieio (1 3)) (pcache (0 2 4)) (logito (0 1))) "A GitHub library for Emacs" tar nil "melpa"])
  (ghc . [(20140513 1445) nil "Sub mode for Haskell mode" tar nil "melpa"])
  (ghci-completion . [(20140316 2331) ((emacs (24 1))) "Completion for GHCi commands in inferior-haskell buffers" single ((:keywords "convenience")) "melpa"])
  (gherkin-mode . [(20140107 804) nil "An emacs major mode for editing gherkin files." single ((:keywords "languages")) "melpa"])
  (gist . [(20131109 2155) ((eieio (1 3)) (gh (0 7 2)) (tabulated-list (0))) "Emacs integration for gist.github.com" single ((:keywords "gist" "git" "github" "paste" "pastie" "pastebin")) "melpa"])
  (git . [(20140128 241) ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) "An Elisp API for programmatically using Git" single ((:url . "http://github.com/rejeep/git.el") (:keywords "git")) "melpa"])
  (git-annex . [(20131119 1445) nil "Mode for easy editing of git-annex'd files" single ((:url . "https://github.com/jwiegley/git-annex-el") (:keywords "files" "data" "git" "annex")) "melpa"])
  (git-auto-commit-mode . [(20131007 1423) nil "Emacs Minor mode to automatically commit and push" single ((:url . "http://ryuslash.org/projects/git-auto-commit-mode/") (:keywords "vc")) "melpa"])
  (git-blame . [(20110509 926) nil "Minor mode for incremental blame for Git" single ((:keywords "git" "version control" "release management")) "melpa"])
  (git-commit-mode . [(20140313 1504) nil "Major mode for editing git commit messages" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (git-commit-training-wheels-mode . [(20131121 544) ((git-commit-mode (0 14 0))) "Helps you craft well formed commit messages with git-commit-mode" single ((:url . "https://github.com/yasuyk/git-commit-training-wheels-mode") (:keywords "convenience" "vc" "git")) "melpa"])
  (git-dwim . [(20130130 2150) nil "Context-aware git commands such as branch handling" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/git-dwim.el") (:keywords "git" "tools" "convenience")) "melpa"])
  (git-gutter+ . [(20140205 802) ((git-commit-mode (0 14))) "Manage Git hunks straight from the buffer" single ((:url . "https://github.com/nonsequitur/git-gutter-plus")) "melpa"])
  (git-gutter . [(20140418 1904) ((cl-lib (0 5))) "Port of Sublime Text plugin GitGutter" single ((:url . "https://github.com/syohex/emacs-git-gutter")) "melpa"])
  (git-gutter-fringe+ . [(20140131 1030) ((git-gutter+ (0 1)) (fringe-helper (1 0 1))) "Fringe version of git-gutter+.el" single ((:url . "https://github.com/nonsequitur/git-gutter-fringe-plus")) "melpa"])
  (git-gutter-fringe . [(20131117 635) ((git-gutter (0 42)) (fringe-helper (0 1 1))) "Fringe version of git-gutter.el" single ((:url . "https://github.com/syohex/emacs-git-gutter-fringe")) "melpa"])
  (git-link . [(20140222 1435) nil "Get the GitHub/Bitbucket/Gitorious URL for a buffer location" single ((:url . "http://github.com/sshaw/git-link")) "melpa"])
  (git-messenger . [(20140525 545) ((popup (0 5 0))) "Pop up last commit information of current line" single ((:url . "https://github.com/syohex/emacs-git-messenger")) "melpa"])
  (git-rebase-mode . [(20140313 1504) nil "Major mode for editing git rebase files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (gitattributes-mode . [(20140313 1504) nil "Major mode for editing .gitattributes files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (gitconfig . [(20130718 235) nil "Emacs lisp interface to work with git-config variables" single ((:keywords "git" "gitconfig" "git-config")) "melpa"])
  (gitconfig-mode . [(20140313 1504) nil "Major mode for editing .gitconfig files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (github-browse-file . [(20140202 51) nil "View the file you're editing on GitHub" single ((:url . "https://github.com/osener/github-browse-file") (:keywords "convenience" "vc" "git" "github")) "melpa"])
  (gitignore-mode . [(20140313 1504) nil "Major mode for editing .gitignore files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (gitty . [(20121014 742) nil "vc-mode extension for fast git interaction" single ((:url . "https://github.com/jorgenschaefer/gitty") (:keywords "vc")) "melpa"])
  (glsl-mode . [(20130815 1435) nil "major mode for Open GLSL shader files" single ((:url . "http://artis.inrialpes.fr/~Xavier.Decoret/resources/glsl-mode/") (:keywords "languages")) "melpa"])
  (gmail-message-mode . [(20140317 506) ((ham-mode (1 0))) "A major-mode for editing gmail messages using markdown syntax." single ((:url . "http://github.com/Bruce-Connor/gmail-message-mode") (:keywords "mail" "convenience" "emulation")) "melpa"])
  (gnome-calendar . [(20140112 359) nil "Integration with the GNOME Shell calendar" single ((:keywords "gnome" "calendar")) "melpa"])
  (gnomenm . [(20140308 938) ((s (1 9 0)) (dash (2 3 0)) (kv (0 0 19))) "Emacs interface to Gnome nmcli command" single ((:url . "http://github.com/nicferrier/emacs-nm") (:keywords "processes" "hardware")) "melpa"])
  (gntp . [(20140330 131) nil "Growl Notification Protocol for Emacs" single nil "melpa"])
  (gnu-apl-mode . [(20140529 152) ((emacs (24))) "Integrate GNU APL with Emacs" tar nil "melpa"])
  (gnuplot . [(20130206 1701) nil "drive gnuplot from within emacs" tar ((:keywords "gnuplot" "plotting")) "melpa"])
  (gnuplot-mode . [(20131203 2159) nil "Major mode for editing gnuplot scripts" single ((:url . "https://github.com/mkmcc/gnuplot") (:keywords "gnuplot" "plotting")) "melpa"])
  (gnus-alias . [(20130824 1206) nil "an alternative to gnus-posting-styles" single ((:keywords "personality" "identity" "news" "mail" "gnus")) "melpa"])
  (gnus-spotlight . [(20130901 1435) nil "Search mail with Spotlight" single ((:keywords "mail" "searching" "spotlight")) "melpa"])
  (gnus-summary-ext . [(20131222 2021) ((macro-utils (1 0))) "Extra limit and process mark commands for the gnus summary buffer" single ((:url . "https://github.com/vapniks/gnus-summary-ext") (:keywords "comm")) "melpa"])
  (go-autocomplete . [(20140527 2104) ((auto-complete (1 4 0))) "auto-complete-mode backend for go-mode" single ((:keywords "languages")) "melpa"])
  (go-direx . [(20140303 447) ((direx (0 1 -3)) (cl-lib (0 5))) "Tree style source code viewer for Go language" single ((:url . "https://github.com/syohex/emacs-go-direx")) "melpa"])
  (go-eldoc . [(20140509 150) ((go-mode (0)) (cl-lib (0 5))) "eldoc for go-mode" single ((:url . "https://github.com/syohex/emacs-go-eldoc")) "melpa"])
  (go-errcheck . [(20140107 1046) nil "errcheck integration for go-mode" single nil "melpa"])
  (go-mode . [(20140409 928) nil "Major mode for the Go programming language" tar nil "melpa"])
  (go-play . [(20120914 1248) nil "Paste to play.golang.org" single nil "melpa"])
  (go-projectile . [(20140507 1610) ((projectile (0 10 0)) (go-mode (0)) (go-eldoc (0))) "Go add-ons for Projectile" single ((:url . "https://github.com/dougm/go-projectile") (:keywords "project" "convenience")) "melpa"])
  (go-snippets . [(20130821 844) ((yasnippet (0 8 0))) "Yasnippets for go" tar nil "melpa"])
  (god-mode . [(20140526 1552) nil "God-like command entering minor mode" single ((:url . "https://github.com/chrisdone/god-mode")) "melpa"])
  (golden-ratio . [(20130921 144) nil "Automatic resizing of Emacs windows to the golden ratio" single ((:keywords "window" "resizing")) "melpa"])
  (golint . [(20140122 1122) nil "lint for the Go source code" single ((:url . "https://github.com/golang/lint")) "melpa"])
  (gom-mode . [(20131007 1953) nil "Major mode for Gomfile" single ((:url . "https://github.com/syohex/emacs-gom-mode")) "melpa"])
  (google . [(20140330 856) nil "Emacs interface to the Google API" single ((:keywords "comm" "processes" "tools")) "melpa"])
  (google-c-style . [(20130412 1415) nil "Google's C/C++ style for c-mode" single ((:keywords "c" "tools")) "melpa"])
  (google-contacts . [(20140130 232) ((oauth2 (0 10))) "Support for Google Contacts in Emacs" tar ((:url . "http://julien.danjou.info/projects/emacs-packages#google-contacts") (:keywords "comm")) "melpa"])
  (google-maps . [(20130412 230) nil "Access Google Maps from Emacs" tar ((:keywords "comm")) "melpa"])
  (google-this . [(20131031 315) nil "A set of functions and bindings to google under point." single ((:url . "http://github.com/Bruce-Connor/emacs-google-this") (:keywords "convenience" "hypermedia")) "melpa"])
  (google-translate . [(20140524 434) nil "Emacs interface to Google Translate." tar nil "melpa"])
  (google-weather . [(20110930 155) nil "Fetch Google Weather forecasts." tar ((:keywords "comm")) "melpa"])
  (gore-mode . [(20131027 2227) nil "Simple mode for gore, a command-line evaluator for golang." single ((:keywords "go" "repl")) "melpa"])
  (gotest . [(20140521 46) ((s (1 9 0)) (f (0 11 0)) (go-mode (20131222))) "Launch GO unit tests" single ((:url . "https://github.com/nlamirault/gotest.el") (:keywords "go" "tests")) "melpa"])
  (goto-chg . [(20131228 1459) nil "goto last change" single ((:keywords "convenience" "matching")) "melpa"])
  (goto-last-change . [(20121115 1014) nil "Move point through buffer-undo-list positions" single ((:keywords "convenience")) "melpa"])
  (gplusify . [(20121211 522) nil "Add Google Plus markup to a piece of code" single ((:url . "https://github.com/jorgenschaefer/gplusify")) "melpa"])
  (grandshell-theme . [(20140415 2225) nil "Dark color theme for Emacs > 24 with intensive colors." tar nil "melpa"])
  (graphene . [(20140517 600) ((auto-complete (20131121)) (flycheck (20131129)) (smartparens (20131123)) (web-mode (20131125)) (smex (20130707)) (sr-speedbar (20130309)) (project-persist (20131030)) (exec-path-from-shell (20131002)) (scss-mode (20121203)) (markdown-mode (20131005)) (feature-mode (20130714))) "Friendly Emacs defaults." tar nil "melpa"])
  (graphviz-dot-mode . [(20140303 1301) nil "Mode for the dot-language used by graphviz (att)." single ((:url . "http://ppareit.github.com/graphviz-dot-mode/") (:keywords "mode" "dot" "dot-language" "dotlanguage" "graphviz" "graphs" "att")) "melpa"])
  (grapnel . [(20131001 834) nil "HTTP request lib with flexible callback dispatch" single ((:url . "http://www.github.com/leathekd/grapnel")) "melpa"])
  (grass-mode . [(20140120 1444) ((cl-lib (0 2))) "Provides Emacs modes for interacting with the GRASS GIS program" single ((:keywords "grass" "gis")) "melpa"])
  (grep+ . [(20131226 1851) nil "Extensions to standard library `grep.el'." single ((:url . "http://www.emacswiki.org/grep+.el") (:keywords "tools" "processes" "compile")) "melpa"])
  (grep-a-lot . [(20131006 647) nil "manages multiple search results buffers for grep.el" single ((:url . "https://github.com/ZungBang/emacs-grep-a-lot") (:keywords "tools" "convenience" "search")) "melpa"])
  (grin . [(20110805 2358) nil "run grin and grind (python replacements for grep and find) putting hits in a grep buffer" single ((:url . "http://bitbucket.org/dariusp686/emacs-grin") (:keywords "python" "grin" "grind" "grep" "find")) "melpa"])
  (grizzl . [(20130810 202) ((cl-lib (0 1))) "Fuzzy Search Library & Completing Read" tar nil "melpa"])
  (gruber-darker-theme . [(20140403 2129) nil "Gruber Darker color theme for Emacs 24." single ((:url . "http://github.com/rexim/gruber-darker-theme")) "melpa"])
  (grunt . [(20140517 2134) ((dash (2 6 0))) "Some glue to stick Emacs and Gruntfiles together" single ((:url . "https://github.com/gempesaw/grunt.el") (:keywords "convenience" "grunt")) "melpa"])
  (gruvbox-theme . [(20131229 1458) nil "A retro-groove colour theme for Emacs" single ((:url . "http://github.com/Greduan/emacs-theme-gruvbox")) "melpa"])
  (gs-mode . [(20131229 2316) nil "Major mode for editing GrADS script files" single ((:keywords "grads" "script" "major-mode")) "melpa"])
  (guide-key . [(20140319 5) ((popwin (0 3 0))) "Guide the following key bindings automatically and dynamically" single ((:url . "https://github.com/kbkbkbkb1/guide-key") (:keywords "help" "convenience")) "melpa"])
  (guide-key-tip . [(20140406 1820) ((guide-key (1 2 3)) (pos-tip (0 4 5))) "Show guide-key.el hints using pos-tip.el" single ((:url . "https://github.com/aki2o/guide-key-tip") (:keywords "help" "convenience" "tooltip")) "melpa"])
  (guru-mode . [(20140103 1545) nil "Become an Emacs guru" single ((:url . "https://github.com/bbatsov/guru-mode") (:keywords "convenience")) "melpa"])
  (gvpr-mode . [(20131208 918) nil "A major mode offering basic syntax coloring for gvpr scripts." single ((:url . "https://raw.github.com/rodw/gvpr-lib/master/extra/gvpr-mode.el") (:keywords "graphviz" "gv" "dot" "gvpr" "graph")) "melpa"])
  (hackernews . [(20140328 805) ((json (1 2))) "Access the hackernews aggregator from Emacs" tar nil "melpa"])
  (ham-mode . [(20131209 656) ((html-to-markdown (1 2)) (markdown-mode (2 0))) "Html As Markdown. Transparently edit an html file using markdown." single ((:url . "http://github.com/Bruce-Connor/ham-mode") (:keywords "convenience" "emulation" "wp")) "melpa"])
  (haml-mode . [(20140206 600) ((ruby-mode (1 0))) "Major mode for editing Haml files" single ((:url . "http://github.com/nex3/haml/tree/master") (:keywords "markup" "language" "html")) "melpa"])
  (hamlet-mode . [(20131207 2324) ((cl-lib (0 3)) (dash (2 3 0)) (s (1 7 0))) "Hamlet editing mode" single ((:url . "https://github.com/lightquake/hamlet-mode") (:keywords "wp" "languages" "comm")) "melpa"])
  (handlebars-mode . [(20131122 1406) nil "A major mode for editing Handlebars files." single nil "melpa"])
  (handlebars-sgml-mode . [(20130623 1633) nil "Add Handlebars contextual indenting support to sgml-mode" single ((:url . "http://github.com/jacott/handlebars-sgml-mode")) "melpa"])
  (hardcore-mode . [(20111204 2216) nil "Disable arrow keys + optionally backspace and return" single ((:keywords "marking" "region")) "melpa"])
  (hardhat . [(20140508 1341) ((ignoramus (0 7 0))) "Protect against clobbering user-writable files" single ((:url . "http://github.com/rolandwalker/hardhat") (:keywords "convenience")) "melpa"])
  (haskell-mode . [(20140527 2339) nil "A Haskell editing mode" tar nil "melpa"])
  (haste . [(20131203 1340) ((json (1 2))) "Emacs client for hastebin (http://hastebin.com/about.md)" single ((:url . "http://github.com/rlister/emacs-haste-client")) "melpa"])
  (haxe-mode . [(20131004 142) nil "An Emacs major mode for Haxe" single ((:url . "http://people.debian.org/~jps/misc/haxe-mode.el")) "melpa"])
  (header-button . [(20130110 851) nil "clickable buttons in header lines" single ((:url . "https://github.com/emacsattic/header-button") (:keywords "extensions")) "melpa"])
  (header2 . [(20140113 1618) nil "Support for creation and update of file headers." single ((:url . "http://www.emacswiki.org/header2.el") (:keywords "tools" "docs" "maint" "abbrev" "local")) "melpa"])
  (helm . [(20140528 2248) nil "Helm is an Emacs incremental and narrowing framework" tar nil "melpa"])
  (helm-R . [(20120819 1714) ((helm (20120517)) (ess (20120509))) "helm-sources and some utilities for GNU R." single ((:url . "https://github.com/myuhe/helm-R.el") (:keywords "convenience")) "melpa"])
  (helm-ack . [(20140507 2127) ((helm (1 0)) (cl-lib (0 5))) "Ack command with helm interface" single ((:url . "https://github.com/syohex/emacs-helm-ack")) "melpa"])
  (helm-ag . [(20140526 1830) ((helm (1 5 6)) (cl-lib (0 5))) "the silver searcher with helm interface" single ((:url . "https://github.com/syohex/emacs-helm-ag")) "melpa"])
  (helm-ag-r . [(20131123 731) ((helm (1 0))) "Search something by ag and display by helm" single ((:url . "https://github.com/yuutayamada/helm-ag-r") (:keywords "searching")) "melpa"])
  (helm-anything . [(20131217 1832) ((helm (20130406)) (anything (20120101))) "Bridge between anything and helm" single ((:url . "http://www.emacswiki.org/emacs/download/helm-anything.el") (:keywords "helm" "anything" "convenience" "search" "tools")) "melpa"])
  (helm-backup . [(20140124 1404) ((helm (1 5 5)) (s (1 8 0))) "Backup each file change using git" single ((:url . "http://github.com/antham/helm-backup") (:keywords "backup")) "melpa"])
  (helm-bibtex . [(20140527 624) ((helm (1 5 5)) (ebib (1 15)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5))) "Helm source for managing BibTeX bibliographies" single nil "melpa"])
  (helm-bibtexkey . [(20140214 704) ((helm (1 5 8))) "Bibtexkey source for helm" tar ((:url . "https://github.com/kenbeese/helm-bibtexkey") (:keywords "bib" "tex")) "melpa"])
  (helm-bm . [(20131224 705) ((bm (1 0)) (cl-lib (0 3)) (helm (1 5 7)) (s (1 8 0))) "helm sources for bm.el" single ((:url . "https://github.com/yasuyk/helm-bm") (:keywords "helm" "bookmark")) "melpa"])
  (helm-c-moccur . [(20140115 1943) ((helm (20120811)) (color-moccur (2 71))) "helm source for color-moccur.el" single ((:keywords "convenience" "emulation")) "melpa"])
  (helm-c-yasnippet . [(20140131 226) ((helm (1 5 8)) (yasnippet (0 8 0)) (cl-lib (0 3))) "helm source for yasnippet.el" single ((:keywords "convenience" "emulation")) "melpa"])
  (helm-chrome . [(20140116 252) ((helm (1 0)) (cl-lib (0 3)) (emacs (24))) "Helm interface for Chrome bookmarks" single ((:url . "https://github.com/kawabata/helm-chrome") (:keywords "tools")) "melpa"])
  (helm-cmd-t . [(20140515 1258) nil "cmd-t style completion" tar ((:url . "https://github.com/lewang/helm-cmd-t") (:keywords "helm" "project-management" "completion" "convenience" "cmd-t" "textmate")) "melpa"])
  (helm-company . [(20140116 1335) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" single ((:url . "https://github.com/yasuyk/helm-company")) "melpa"])
  (helm-css-scss . [(20140315 528) ((helm (1 0)) (emacs (24))) "CSS/SCSS/LESS Selectors with helm interface" single ((:url . "https://github.com/ShingoFukuyama/helm-css-scss") (:keywords "scss" "css" "less" "selector" "helm")) "melpa"])
  (helm-dash . [(20140527 231) ((helm (0 0 0))) "Helm extension to search dash docsets" single ((:keywords "docs")) "melpa"])
  (helm-descbinds . [(20140122 2158) ((helm (1 5))) "Yet Another `describe-bindings' with `helm'." single ((:keywords "helm" "help")) "melpa"])
  (helm-dictionary . [(20140506 626) ((helm (1 5 5))) "Helm source for looking up dictionaries" single ((:url . "https://github.com/emacs-helm/helm-dictionary")) "melpa"])
  (helm-dired-recent-dirs . [(20131228 614) ((helm (1 0))) "Show recent dirs with helm.el support." single ((:keywords "helm" "dired" "zsh")) "melpa"])
  (helm-emmet . [(20131013 2329) ((helm (1 0)) (emmet-mode (1 0 2))) "helm sources for emmet-mode's snippets" single ((:url . "https://github.com/yasuyk/helm-emmet") (:keywords "convenience" "helm" "emmet")) "melpa"])
  (helm-flycheck . [(20140128 127) ((dash (2 4 0)) (flycheck (0 15)) (helm (1 5 7))) "Show flycheck errors with helm" single ((:url . "https://github.com/yasuyk/helm-flycheck") (:keywords "helm" "flycheck")) "melpa"])
  (helm-flymake . [(20130716 2244) ((helm (1 0))) "helm interface for flymake" single ((:url . "https://github.com/tam17aki")) "melpa"])
  (helm-gist . [(20120819 1735) ((helm (20120811)) (gist (1 0 1))) "helm-sources and some utilities for gist." single ((:keywords "convenience" "emulation")) "melpa"])
  (helm-git . [(20120630 1403) nil "Helm extension for Git." single ((:url . "https://github.com/maio/helm-git") (:keywords "helm" "git")) "melpa"])
  (helm-git-files . [(20140214 1059) ((helm (1 5 9))) "helm for git files" single ((:keywords "helm" "git")) "melpa"])
  (helm-git-grep . [(20140222 1822) ((helm (1 5 9))) "helm for git grep, an incremental git-grep(1)" single ((:url . "https://github.com/yasuyk/helm-git-grep") (:keywords "helm" "git")) "melpa"])
  (helm-github-stars . [(20131123 817) ((helm (1 5 5))) "Helm integration for your starred repositories on github" single ((:keywords "helm" "github" "stars")) "melpa"])
  (helm-go-package . [(20140211 1457) ((helm (1 0)) (go-mode (9)) (deferred (0 3 2))) "helm sources for Go programming language's package" single ((:url . "https://github.com/yasuyk/helm-go-package") (:keywords "helm" "go")) "melpa"])
  (helm-google . [(20140405 1723) ((helm (0)) (google (0))) "Emacs Helm Interface for quick Google searches" single ((:url . "https://github.com/steckerhalter/helm-google") (:keywords "helm" "google" "search" "browse")) "melpa"])
  (helm-growthforecast . [(20140119 1944) ((helm (1 5 9))) "helm extensions for growthforecast." single ((:url . "https://github.com/daic-h/helm-growthforecast")) "melpa"])
  (helm-gtags . [(20140328 332) ((helm (1 5 6)) (cl-lib (0 5))) "GNU GLOBAL helm interface" single ((:url . "https://github.com/syohex/emacs-helm-gtags")) "melpa"])
  (helm-hatena-bookmark . [(20131128 557) ((helm (1 5 6))) "Hatena::Bookmark helm.el interface" single ((:url . "https://github.com/masutaka/emacs-helm-hatena-bookmark")) "melpa"])
  (helm-hayoo . [(20140504 109) ((helm (1 6 0)) (json (1 2)) (haskell-mode (13 7))) "Source and configured helm for searching hayoo" single ((:keywords "helm")) "melpa"])
  (helm-helm-commands . [(20130902 1048) ((helm (1 5 4))) "List all helm commands with helm" single ((:url . "https://github.com/vapniks/helm-helm-commands") (:keywords "convenience")) "melpa"])
  (helm-j-cheatsheet . [(20131228 441) ((helm (1 5 3))) "Quick J reference for Emacs" single ((:url . "https://github.com/abo-abo/helm-j-cheatsheet")) "melpa"])
  (helm-ls-git . [(20140527 133) nil "list git files." single nil "melpa"])
  (helm-ls-hg . [(20140420 347) nil "List hg files in hg project." single nil "melpa"])
  (helm-make . [(20140214 443) ((helm (1 5 3))) "Select makefile target with helm" single ((:url . "https://github.com/abo-abo/helm-make") (:keywords "makefile")) "melpa"])
  (helm-migemo . [(20130820 440) ((helm (1 5 3)) (migemo (1 9))) "Migemo plug-in for helm" single ((:url . "https://github.com/emacs-helm/helm-migemo") (:keywords "matching" "convenience" "tools" "i18n")) "melpa"])
  (helm-mode-manager . [(20140224 1504) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" single ((:url . "https://github.com/istib/helm-mode-manager")) "melpa"])
  (helm-open-github . [(20140307 1623) ((helm (1 0)) (gh (1 0)) (cl-lib (0 5))) "Utilities of Opening Github Page" single ((:url . "https://github.com/syohex/emacs-helm-open-github")) "melpa"])
  (helm-orgcard . [(20130608 430) ((helm (1 5 2))) "browse the orgcard by helm" single ((:url . "https://github.com/emacs-helm/helm-orgcard") (:keywords "convenience" "helm" "org")) "melpa"])
  (helm-package . [(20140108 2223) ((helm (1 0)) (cl-lib (0 3))) "Listing ELPA packages with helm interface" single ((:url . "https://github.com/syohex/emacs-helm-package")) "melpa"])
  (helm-perldoc . [(20140319 353) ((helm (1 0)) (deferred (0 3 1)) (cl-lib (0 5))) "perldoc with helm interface" tar ((:url . "https://github.com/syohex/emacs-helm-perldoc")) "melpa"])
  (helm-proc . [(20140504 157) ((helm (1 6 0))) "Helm interface for managing system processes" tar nil "melpa"])
  (helm-project-persist . [(20130601 1328) ((helm (1 5 2)) (project-persist (0 1 4))) "Helm integration for project-persist package" single ((:keywords "project-persist" "project" "helm")) "melpa"])
  (helm-projectile . [(20140527 405) ((helm (1 4 0)) (projectile (0 11 0)) (cl-lib (0 3))) "Helm integration for Projectile" single ((:url . "https://github.com/bbatsov/projectile") (:keywords "project" "convenience")) "melpa"])
  (helm-projectile-all . [(20140429 952) ((helm (1 6 0)) (projectile (0 10 0)) (dash (1 5 0)) (s (1 9 0))) "Find files in all projectile projects using helm" single nil "melpa"])
  (helm-prosjekt . [(20140128 2317) ((prosjekt (0 3)) (helm (1 5 9))) "Helm integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (helm-pydoc . [(20140307 1630) ((helm (1 0)) (cl-lib (0 5))) "pydoc with helm interface" tar ((:url . "https://github.com/syohex/emacs-helm-pydoc")) "melpa"])
  (helm-rails . [(20130424 819) ((helm (1 5 1)) (inflections (1 1))) "Helm extension for Rails projects." single ((:url . "https://github.com/asok/helm-rails") (:keywords "helm" "rails" "git")) "melpa"])
  (helm-rb . [(20131123 839) ((helm (1 0)) (helm-ag-r (20131123))) "Search Ruby's method by ag and display helm" tar ((:url . "https://github.com/yuutayamada/helm-rb") (:keywords "searching" "ruby")) "melpa"])
  (helm-recoll . [(20130905 1822) ((helm (1 5 4))) "helm interface for the recoll desktop search tool." single ((:url . "https://github.com/emacs-helm/helm-recoll") (:keywords "convenience")) "melpa"])
  (helm-rubygems-local . [(20130711 1811) ((helm (1 5 3))) "Installed local rubygems find-file for helm" single ((:url . "https://github.com/f-kubotar/helm-rubygems-local")) "melpa"])
  (helm-sheet . [(20130630 539) ((helm (1 0))) "helm sources for sheet" single ((:url . "https://github.com/yasuyk/helm-sheet") (:keywords "helm" "sheet")) "melpa"])
  (helm-spaces . [(20130605 900) ((helm (1 0)) (spaces (0 1 0))) "helm sources for spaces" single ((:url . "https://github.com/yasuyk/helm-spaces") (:keywords "helm" "frames" "convenience")) "melpa"])
  (helm-spotify . [(20131014 1421) ((helm (0 0 0)) (multi (2 0 0))) "Control Spotify with Helm." single ((:url . "https://github.com/krisajenkins/helm-spotify") (:keywords "helm" "spotify")) "melpa"])
  (helm-swoop . [(20140502 913) ((helm (1 0)) (emacs (24))) "Efficiently hopping squeezed lines powered by helm interface" single ((:url . "https://github.com/ShingoFukuyama/helm-swoop") (:keywords "helm" "swoop" "inner" "buffer" "search")) "melpa"])
  (helm-themes . [(20140307 1632) ((helm (1 0))) "Color theme selection with helm interface" single ((:url . "https://github.com/syohex/emacs-helm-themes")) "melpa"])
  (help+ . [(20140504 2037) nil "Extensions to `help.el'." single ((:url . "http://www.emacswiki.org/help+.el") (:keywords "help")) "melpa"])
  (help-fns+ . [(20140511 2325) nil "Extensions to `help-fns.el'." single ((:url . "http://www.emacswiki.org/help-fns+.el") (:keywords "help" "faces" "characters" "packages" "description")) "melpa"])
  (help-mode+ . [(20140117 2115) nil "Extensions to `help-mode.el'" single ((:url . "http://www.emacswiki.org/help-mode+.el") (:keywords "help")) "melpa"])
  (hemisu-theme . [(20130508 1144) nil "Hemisu for Emacs." tar ((:url . "http://github/anrzejsliwa/django-theme")) "melpa"])
  (heroku . [(20120629 1113) nil "Interface to Heroku apps." single ((:url . "https://github.com/technomancy/heroku.el") (:keywords "convenience" "api" "database")) "melpa"])
  (heroku-theme . [(20130809 2143) nil "Heroku color theme" single ((:url . "https://github.com/jonathanchu/heroku-theme")) "melpa"])
  (hexrgb . [(20131226 1855) nil "Functions to manipulate colors, including RGB hex strings." single ((:url . "http://www.emacswiki.org/hexrgb.el") (:keywords "number" "hex" "rgb" "color" "background" "frames" "display")) "melpa"])
  (hi2 . [(20130925 558) nil "indentation module for Haskell Mode" single ((:url . "https://github.com/errge/hi2") (:keywords "indentation" "haskell")) "melpa"])
  (hide-comnt . [(20140206 1830) nil "Hide/show comments in code." single ((:url . "http://www.emacswiki.org/hide-comnt.el") (:keywords "comment" "hide" "show")) "melpa"])
  (hide-lines . [(20130824 1207) nil "Commands for hiding lines based on a regexp" single ((:url . "https://github.com/vapniks/hide-lines") (:keywords "convenience")) "melpa"])
  (hideshow-org . [(20120223 1450) nil "Provides org-mode like hide and show for hideshow.el" single ((:keywords "c" "c++" "java" "lisp" "tools" "editing" "comments" "blocks" "hiding" "outlines" "org-mode" "this" "file" "is" "not" "part" "of" "gnu" "emacs.")) "melpa"])
  (highlight . [(20140527 1631) nil "Highlighting commands." single ((:url . "http://www.emacswiki.org/highlight.el") (:keywords "faces" "help" "local")) "melpa"])
  (highlight-blocks . [(20140424 859) ((emacs (24))) "Highlight the blocks point is in" single ((:url . "https://github.com/Fanael/highlight-blocks")) "melpa"])
  (highlight-chars . [(20140513 444) nil "Highlight specified sets of characters, including whitespace." single ((:url . "http://www.emacswiki.org/highlight-chars.el") (:keywords "highlight" "whitespace" "characters" "unicode")) "melpa"])
  (highlight-cl . [(20091012 1730) nil "Highlighting `cl' functions." single ((:url . "http://www.emacswiki.org/emacs/highlight-cl.el") (:keywords "faces")) "melpa"])
  (highlight-current-line . [(20051013 1756) nil "highlight line where the cursor is." single ((:keywords "faces")) "melpa"])
  (highlight-defined . [(20140327 1137) ((emacs (24))) "Syntax highlighting of known Elisp symbols" single ((:url . "https://github.com/Fanael/highlight-defined")) "melpa"])
  (highlight-escape-sequences . [(20130531 1512) nil "Highlight escape sequences" single ((:url . "https://github.com/dgutov/highlight-escape-sequences") (:keywords "convenience")) "melpa"])
  (highlight-indentation . [(20131207 835) nil "Minor modes for highlighting indentation" single ((:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs")) "melpa"])
  (highlight-parentheses . [(20130523 852) nil "highlight surrounding parentheses" single ((:url . "http://nschum.de/src/emacs/highlight-parentheses/") (:keywords "faces" "matching")) "melpa"])
  (highlight-symbol . [(20131103 1336) nil "automatic and manual symbol highlighting" single ((:url . "http://nschum.de/src/emacs/highlight-symbol/") (:keywords "faces" "matching")) "melpa"])
  (highlight-tail . [(20140416 141) nil "draw a colourful \"tail\" while you write" single ((:keywords "highlight" "tail" "eye-candy" "visual-effect" "light" "color" "burn" "web" "page:" "http://nic-nac-project.net/~necui/ht.html")) "melpa"])
  (highlight-unique-symbol . [(20130611 2242) ((deferred (0 3 2))) "highlight symbols which not appear in the repository" single ((:url . "https://github.com/hitode909/emacs-highlight-unique-symbol")) "melpa"])
  (hippie-exp-ext . [(20130824 1207) nil "Extension of hippie-expand" single ((:url . "http://www.emacswiki.org/emacs/download/hippie-exp-ext.el") (:keywords "abbrev" "convenience" "completions" "hippie-expand")) "melpa"])
  (hippie-expand-slime . [(20130907 132) nil "Hook slime's completion into hippie-expand" single ((:url . "https://github.com/purcell/hippie-expand-slime")) "melpa"])
  (hippie-namespace . [(20140508 1341) nil "Special treatment for namespace prefixes in hippie-expand" single ((:url . "http://github.com/rolandwalker/hippie-namespace") (:keywords "convenience" "lisp" "tools" "completion")) "melpa"])
  (historyf . [(20131203 22) nil "file history library like browser" single ((:url . "https://github.com/k1LoW/emacs-historyf")) "melpa"])
  (hive . [(20131217 712) ((sql (3 0))) "Hive SQL mode extension" single ((:keywords "sql" "hive")) "melpa"])
  (hiwin . [(20140521 2134) nil "Visible active window mode." single ((:keywords "faces" "editing" "emulating")) "melpa"])
  (hl-defined . [(20131226 1912) nil "Highlight defined or undefined symbols in Emacs-Lisp." single ((:url . "http://www.emacswiki.org/hl-defined.el") (:keywords "highlight" "lisp" "functions")) "melpa"])
  (hl-line+ . [(20140521 323) nil "Extensions to hl-line.el." single ((:url . "http://www.emacswiki.org/hl-line+.el") (:keywords "highlight" "cursor" "accessibility")) "melpa"])
  (hl-sentence . [(20110815 954) nil "highlight a sentence based on customizable face" single ((:url . "http://github.com/milkypostman/hl-sentence") (:keywords "highlighting")) "melpa"])
  (hl-sexp . [(20101130 443) nil "highlight the current sexp" single ((:keywords "faces" "frames" "emulation")) "melpa"])
  (hl-spotlight . [(20131226 1913) nil "Extension of hl-line.el to spotlight current few lines." single ((:url . "http://www.emacswiki.org/hl-spotlight.el") (:keywords "highlight" "cursor" "accessibility")) "melpa"])
  (hl-todo . [(20140309 1759) nil "highlight TODO keywords" single ((:url . "http://github.com/tarsius/hl-todo") (:keywords "convenience")) "melpa"])
  (hlinum . [(20140107 220) ((cl-lib (0 2))) "Extension for linum.el to highlight current line number" single ((:url . "http://code.google.com/p/hlinum-mode/") (:keywords "convenience" "extensions")) "melpa"])
  (howdoi . [(20140309 1614) nil "Instant coding answers via Emacs." tar nil "melpa"])
  (ht . [(20140122 1555) nil "The missing hash table library for Emacs" single ((:keywords "hash table" "hash map" "hash")) "melpa"])
  (html-script-src . [(20120403 1115) nil "Insert <script src=\"..\"> for popular JavaScript libraries" single ((:url . "http://github.com/rejeep/html-script-src") (:keywords "tools" "convenience")) "melpa"])
  (html-to-markdown . [(20131212 1441) nil "HTML to Markdown converter written in Emacs-lisp." single ((:url . "http://github.com/Bruce-Connor/html-to-markdown") (:keywords "tools" "wp" "languages")) "melpa"])
  (htmlize . [(20130207 1202) nil "Convert buffer text and decorations to HTML." single ((:keywords "hypermedia" "extensions")) "melpa"])
  (http-post-simple . [(20131011 358) nil "HTTP POST requests using the url library" single ((:keywords "comm" "data" "processes" "hypermedia")) "melpa"])
  (http-twiddle . [(20121117 812) nil "send & twiddle & resend HTTP requests" single ((:url . "https://github.com/hassy/http-twiddle/blob/master/http-twiddle.el") (:keywords "http" "rest" "soap")) "melpa"])
  (httpcode . [(20121001 2045) nil "explains the meaning of an HTTP status code" single ((:url . "http://github.com/rspivak/httpcode.el")) "melpa"])
  (httprepl . [(20140215 511) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "An HTTP REPL" single ((:url . "https://github.com/gregsexton/httprepl.el") (:keywords "http" "repl")) "melpa"])
  (hungry-delete . [(20120128 1153) nil "hungry delete minor mode" single ((:url . "http://github.com/nflath/hungry-delete")) "melpa"])
  (hy-mode . [(20140201 2055) nil "Major mode for Hy code" single ((:url . "http://github.com/hylang/hy-mode") (:keywords "languages" "lisp")) "melpa"])
  (hyde . [(20140131 456) nil "Major mode to help create and manage Jekyll blogs" tar nil "melpa"])
  (iasm-mode . [(20131004 1644) nil "interactive assembly major mode." tar ((:url . "https://github.com/RAttab/iasm-mode") (:keywords ":" "tools")) "melpa"])
  (ibuffer-git . [(20110508 31) nil "show git status in ibuffer column" single ((:keywords "convenience")) "melpa"])
  (ibuffer-tramp . [(20140301 1006) nil "Group ibuffer's list by TRAMP connection" single ((:url . "http://github.com/svend/ibuffer-tramp") (:keywords "themes")) "melpa"])
  (ibuffer-vc . [(20130924 608) ((cl-lib (0 2))) "Group ibuffer's list by VC project, or show VC status" single ((:url . "http://github.com/purcell/ibuffer-vc") (:keywords "themes")) "melpa"])
  (icicles . [(20140519 1649) nil "Minibuffer input completion and cycling." tar ((:url . "http://www.emacswiki.org/icicles.el") (:keywords "extensions" "help" "abbrev" "local" "minibuffer" "keys" "apropos" "completion" "matching" "regexp" "command")) "melpa"])
  (icomplete+ . [(20140415 1655) nil "Extensions to `icomplete.el'." single ((:url . "http://www.emacswiki.org/icomplete+.el") (:keywords "help" "abbrev" "internal" "extensions" "local" "completion" "matching")) "melpa"])
  (identica-mode . [(20130204 1453) nil "Major mode API client for status.net open microblogging" tar ((:url . "http://blog.gabrielsaldana.org/identica-mode-for-emacs/") (:keywords "identica" "web")) "melpa"])
  (idle-highlight-mode . [(20120920 948) nil "highlight the word the point is on" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/IdleHighlight") (:keywords "convenience")) "melpa"])
  (idle-require . [(20090715 1503) nil "load elisp libraries while Emacs is idle" single ((:url . "http://nschum.de/src/emacs/idle-require/") (:keywords "internal")) "melpa"])
  (ido-at-point . [(20140416 656) ((emacs (24))) "ido-style completion-at-point" single ((:url . "https://github.com/katspaugh/ido-at-point") (:keywords "convenience" "abbrev")) "melpa"])
  (ido-complete-space-or-hyphen . [(20130228 208) nil "Complete SPACE or HYPHEN when type SPACE in ido" single ((:url . "https://github.com/doitian/ido-complete-space-or-hyphen") (:keywords "ido" "completion")) "melpa"])
  (ido-gnus . [(20140216 846) ((gnus (5 13))) "Access gnus groups or servers using ido" single ((:url . "https://github.com/vapniks/ido-gnus") (:keywords "comm")) "melpa"])
  (ido-hacks . [(20130411 1859) nil "Put more IDO in your IDO" single ((:keywords "convenience")) "melpa"])
  (ido-load-library . [(20140508 1341) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Load-library alternative using ido-completing-read" single ((:url . "http://github.com/rolandwalker/ido-load-library") (:keywords "maint" "completion")) "melpa"])
  (ido-select-window . [(20131220 1247) ((emacs (24 1))) "Select a window using ido and buffer names" single ((:url . "https://github.com/pjones/ido-select-window")) "melpa"])
  (ido-sort-mtime . [(20131117 530) nil "Sort Ido's file list by modification time" single ((:keywords "convenience" "files")) "melpa"])
  (ido-ubiquitous . [(20140526 1306) ((emacs (24 1))) "Use ido (nearly) everywhere." single ((:url . "https://github.com/DarwinAwardWinner/ido-ubiquitous") (:keywords "convenience")) "melpa"])
  (ido-vertical-mode . [(20140516 1920) nil "Makes ido-mode display vertically." single ((:url . "https://github.com/gempesaw/ido-vertical-mode.el") (:keywords "convenience")) "melpa"])
  (idomenu . [(20111122 1048) nil "imenu tag selection a la ido" single nil "melpa"])
  (idris-mode . [(20140526 46) ((emacs (24))) "Major mode for editing Idris code" tar ((:url . "https://github.com/idris-hackers/idris-mode") (:keywords "languages")) "melpa"])
  (ids-edit . [(20140329 2054) ((emacs (24 3))) "IDS (Ideographic Description Sequence) editing tool" tar ((:url . "http://github.com/kawabata/ids-edit") (:keywords "text")) "melpa"])
  (iedit . [(20131021 116) nil "Edit multiple regions in the same way simultaneously." tar ((:url . "http://www.emacswiki.org/emacs/Iedit") (:keywords "occurrence" "region" "simultaneous" "refactoring")) "melpa"])
  (iflipb . [(20130331 1108) nil "interactively flip between recently visited buffers" single ((:url . "http://hg.rosdahl.net/iflipb")) "melpa"])
  (ignoramus . [(20140512 658) nil "Ignore backups, build files, et al." single ((:url . "http://github.com/rolandwalker/ignoramus") (:keywords "convenience" "tools")) "melpa"])
  (igrep . [(20130824 1207) nil "An improved interface to `grep` and `find`" single ((:keywords "tools" "processes" "search")) "melpa"])
  (image+ . [(20130221 820) nil "Image manupulation extensions for Emacs" single ((:url . "http://github.com/mhayashi1120/Emacs-imagex/raw/master/image+.el") (:keywords "multimedia" "extensions")) "melpa"])
  (image-dired+ . [(20130811 1741) nil "Image-dired extensions" single ((:url . "https://github.com/mhayashi1120/Emacs-image-diredx/raw/master/image-dired+.el") (:keywords "extensions" "multimedia")) "melpa"])
  (imenu+ . [(20131226 1948) nil "Extensions to `imenu.el'." single ((:url . "http://www.emacswiki.org/imenu+.el") (:keywords "tools" "menus")) "melpa"])
  (imenu-anywhere . [(20131210 1130) nil "ido/helm imenu tag selection across all buffers with the same mode" single ((:url . "https://github.com/vitoshka/imenu-anywhere") (:keywords "ido" "imenu" "tags")) "melpa"])
  (immutant-server . [(20140311 1508) nil "Run your Immutant server in Emacs" single ((:url . "http://www.github.com/leathekd/immutant-server.el")) "melpa"])
  (impatient-mode . [(20140203 753) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar ((:url . "https://github.com/netguy204/imp.el")) "melpa"])
  (import-popwin . [(20140413 2241) ((popwin (0 6)) (cl-lib (0 5))) "popwin buffer near by import statements with popwin" single ((:url . "https://github.com/syohex/emacs-import-popwin")) "melpa"])
  (indent-guide . [(20140212 2009) nil "show vertical lines to guide indentation" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (indicators . [(20130217 1405) nil "Display the buffer relative location of line in the fringe." single ((:url . "https://github.com/Fuco1/indicators.el") (:keywords "fringe" "frames")) "melpa"])
  (inf-mongo . [(20131216 228) nil "Run a MongoDB shell process in a buffer" single ((:url . "http://github.com/tobiassvn/inf-mongo") (:keywords "databases" "mongodb")) "melpa"])
  (inf-php . [(20130414 21) ((php-mode (1 5 0))) "Run a php interactive shell in a buffer" single ((:url . "https://github.com/taksatou/inf-php") (:keywords "languages" "php")) "melpa"])
  (inf-ruby . [(20140428 201) nil "Run a Ruby process in a buffer" single ((:url . "http://github.com/nonsequitur/inf-ruby") (:keywords "languages" "ruby")) "melpa"])
  (inflections . [(20121016 157) nil "convert english words between singular and plural" single ((:url . "https://github.com/eschulte/jump.el") (:keywords "ruby" "rails" "languages" "oop")) "melpa"])
  (info+ . [(20140504 2110) nil "Extensions to `info.el'." single ((:url . "http://www.emacswiki.org/info+.el") (:keywords "help" "docs" "internal")) "melpa"])
  (inform7-mode . [(20131009 2354) ((sws-mode (0 1))) "Major mode for editing Inform 7 source files" single ((:keywords "inform" "inform7" "interactive fiction")) "melpa"])
  (init-loader . [(20140216 2240) nil "Loader for configuration files" single ((:url . "https://github.com/emacs-jp/init-loader/")) "melpa"])
  (initsplit . [(20140203 441) nil "code to split customizations into different files" single ((:url . "http://www.gci-net.com/users/j/johnw/emacs.html") (:keywords "lisp")) "melpa"])
  (inkpot-theme . [(20120505 708) nil "port of vim's inkpot theme" single ((:url . "http://github.com/siovan/emacs24-inkpot.git")) "melpa"])
  (inline-crypt . [(20130409 507) nil "Simple inline encryption via openssl" tar nil "melpa"])
  (inlineR . [(20120520 732) nil "insert Tag for inline image of R graphics" single ((:url . "https://github.com/myuhe/inlineR.el") (:keywords "convenience" "iimage.el" "cacoo.el")) "melpa"])
  (insert-shebang . [(20140508 318) nil "Insert shebang line automatically." single ((:url . "http://github.com/psachin/insert-shebang") (:keywords "shebang" "tool" "convenience")) "melpa"])
  (insfactor . [(20140206 1312) nil "Client for a Clojure project with insfactor in it" single ((:url . "http://github.com/duelinmarkers/insfactor.el") (:keywords "clojure")) "melpa"])
  (instapaper . [(20130104 621) nil "add URLs to instapaper from emacs" single ((:url . "htts://bitbucket.org/jfm/emacs-instapaper")) "melpa"])
  (interaction-log . [(20140502 2010) ((cl-lib (0))) "exhaustive log of interactions with Emacs" single ((:url . "https://github.com/michael-heerdegen/interaction-log.el") (:keywords "convenience")) "melpa"])
  (interval-tree . [(20130325 707) ((dash (1 1 0))) "Interval tree data structure for 1D range queries" single ((:url . "https://github.com/Fuco1/interval-tree") (:keywords "extensions" "data structure")) "melpa"])
  (io-mode . [(20140102 810) nil "Major mode to edit Io language files in Emacs" single ((:url . "https://github.com/superbobry/io-mode") (:keywords "languages" "io")) "melpa"])
  (io-mode-inf . [(20140128 1134) nil "Interaction with an Io interpreter." single ((:url . "https://github.com/slackorama/io-emacs") (:keywords "io" "languages")) "melpa"])
  (iplayer . [(20140522 1304) nil "Browse and download BBC TV/radio shows" single ((:keywords "multimedia")) "melpa"])
  (ipretty . [(20140406 2220) nil "Interactive Emacs Lisp pretty-printing" single ((:url . "https://github.com/steckerhalter/ipretty") (:keywords "pretty-print" "elisp" "buffer")) "melpa"])
  (ir-black-theme . [(20130302 2355) nil "Port of ir-black theme" single ((:keywords "faces")) "melpa"])
  (iregister . [(20140525 1456) nil "Interactive register commands for Emacs." tar ((:url . "https://github.com/atykhonov/iregister.el") (:keywords "convenience")) "melpa"])
  (irfc . [(20130824 1207) nil "Interface for IETF RFC document." single ((:url . "http://www.emacswiki.org/emacs/download/irfc.el") (:keywords "rfc" "ietf")) "melpa"])
  (isearch+ . [(20140415 1703) nil "Extensions to `isearch.el' (incremental search)." single ((:url . "http://www.emacswiki.org/isearch+.el") (:keywords "help" "matching" "internal" "local")) "melpa"])
  (isearch-prop . [(20131227 127) nil "Search text-property or overlay-property contexts." single ((:url . "http://www.emacswiki.org/isearch-prop.el") (:keywords "search" "matching" "invisible" "thing" "help")) "melpa"])
  (isearch-symbol-at-point . [(20130728 1521) nil "Use isearch to search for the symbol at point" single ((:url . "https://github.com/re5et/isearch-symbol-at-point") (:keywords "isearch")) "melpa"])
  (isend-mode . [(20130419 258) nil "Interactively send parts of an Emacs buffer to an interpreter" single ((:url . "https://github.com/ffevotte/isend-mode.el")) "melpa"])
  (isgd . [(20130927 657) nil "Shorten URLs using the isgd.com shortener service" single ((:url . "https://github.com/chmouel/isgd.el")) "melpa"])
  (itail . [(20140505 1531) nil "An interactive tail mode" single ((:url . "https://github.com/re5et/itail") (:keywords "tail")) "melpa"])
  (iterator . [(20140412 2153) ((emacs (24)) (cl-lib (0 5))) "A library to create and use elisp iterators objects." single ((:url . "https://github.com/thierryvolpiatto/iterator")) "melpa"])
  (ivariants . [(20140404 2326) ((emacs (24 3)) (ivs-edit (1 0))) "Ideographic Variants Editor and Browser" tar ((:url . "http://github.com/kawabata/ivariants") (:keywords "i18n" "languages")) "melpa"])
  (ivs-edit . [(20140516 1937) ((emacs (24 3)) (dash (2 6 0)) (cl-lib (1 0))) "IVS (Ideographic Variation Sequence) editing tool" tar ((:url . "http://github.com/kawabata/ivs-edit") (:keywords "text")) "melpa"])
  (ix . [(20131027 929) ((grapnel (0 5 3))) "Emacs client for http://ix.io pastebin" single ((:url . "http://www.github.com/theanalyst/ix.el")) "melpa"])
  (iy-go-to-char . [(20130901 729) nil "Go to next CHAR which is similar to \"f\" and \"t\" in vim" single ((:url . "https://github.com/doitian/iy-go-to-char") (:keywords "navigation" "search")) "melpa"])
  (j-mode . [(20140121 1125) nil "Major mode for editing J programs" tar ((:url . "http://github.com/zellio/j-mode") (:keywords "j" "langauges")) "melpa"])
  (jabber . [(20140523 153) nil "A Jabber client for Emacs." tar nil "melpa"])
  (jade-mode . [(20131018 1010) ((sws-mode (0))) "Major mode for editing .jade files" single ((:url . "https://github.com/brianc/jade-mode")) "melpa"])
  (japanese-holidays . [(20130928 949) ((cl-lib (0 3))) "calendar functions for the Japanese calendar" single ((:url . "https://github.com/emacs-jp/japanese-holidays") (:keywords "calendar")) "melpa"])
  (japanlaw . [(20131109 224) ((revive (20121022 1311))) "Japan law from law.e-gov.go.jp" single ((:keywords "docs" "help")) "melpa"])
  (jaunte . [(20130413 219) nil "Emacs Hit a Hint" single nil "melpa"])
  (java-snippets . [(20140519 2031) ((yasnippet (0 8 0))) "Yasnippets for Java" tar ((:url . "https://github.com/nekop/yasnippet-java-mode")) "melpa"])
  (javadoc-lookup . [(20130618 1736) nil "Javadoc Emacs integration with Maven" tar ((:url . "https://github.com/skeeto/javadoc-lookup")) "melpa"])
  (javap-mode . [(20120223 1408) nil "Javap major mode" single ((:url . "http://github.com/hiredman/javap-mode")) "melpa"])
  (jedi . [(20140321 1323) ((epc (0 1 0)) (auto-complete (1 4)) (python-environment (0 0 2))) "Python auto-completion for Emacs" tar nil "melpa"])
  (jedi-direx . [(20140310 236) ((jedi (0 1 2)) (direx (0 1 -3))) "Tree style source code viewer for Python buffer" single nil "melpa"])
  (jenkins-watch . [(20121004 1626) nil "Watch continuous integration build status" single ((:url . "https://github.com/ataylor284/jenkins-watch")) "melpa"])
  (jinja2-mode . [(20120827 203) nil "A major mode for jinja2" single nil "melpa"])
  (jira . [(20131210 1822) nil "Connect to JIRA issue tracking software" single nil "melpa"])
  (jknav . [(20121006 1325) nil "Automatically enable j/k keys for line-based navigation" single ((:keywords "keyboard" "navigation")) "melpa"])
  (jquery-doc . [(20131223 845) nil "jQuery api documentation interface for emacs" tar ((:keywords "docs" "jquery")) "melpa"])
  (js-comint . [(20080530 757) nil "Run javascript in an inferior process window." single ((:keywords "javascript" "inferior-mode" "convenience")) "melpa"])
  (js-doc . [(20131215 519) nil "Insert JsDoc style comment easily" single ((:url . "https://github.com/mooz/js-doc") (:keywords "document" "comment")) "melpa"])
  (js2-mode . [(20140520 1804) ((emacs (24 1))) "Improved JavaScript editing mode" tar ((:url . "https://github.com/mooz/js2-mode/") (:keywords "languages" "javascript")) "melpa"])
  (js2-refactor . [(20140427 428) ((js2-mode (20101228)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (20130218))) "A JavaScript refactoring library for emacs." tar nil "melpa"])
  (js3-mode . [(20130904 1444) nil "An improved JavaScript editing mode" tar ((:keywords "javascript" "languages")) "melpa"])
  (json-mode . [(20140528 1402) ((json-reformat (20140301 39)) (json-snatcher (20131110 1107))) "Major mode for editing JSON files" single ((:url . "https://github.com/joshwnj/json-mode")) "melpa"])
  (json-reformat . [(20140320 734) nil "Reformatting tool for JSON" single ((:url . "https://github.com/gongo/json-reformat") (:keywords "json")) "melpa"])
  (json-rpc . [(20140528 1714) ((emacs (24 1)) (cl-lib (0 5))) "JSON-RPC library" single ((:url . "https://github.com/skeeto/elisp-json-rpc")) "melpa"])
  (json-snatcher . [(20140527 2147) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single ((:url . "http://github.com/sterlingg/json-snatcher")) "melpa"])
  (jss . [(20130508 723) ((emacs (24 1)) (websocket (0)) (js2-mode (0))) "An emacs interface to webkit and mozilla debuggers" tar ((:keywords "languages")) "melpa"])
  (jsx-mode . [(20130908 1024) nil "major mode for JSX" single ((:url . "https://github.com/jsx/jsx-mode.el")) "melpa"])
  (jtags . [(20111208 1022) nil "enhanced tags functionality for Java development" tar ((:url . "http://jtags.sourceforge.net") (:keywords "languages" "tools")) "melpa"])
  (jumblr . [(20131005 1810) ((s (1 8 0)) (dash (2 2 0))) "an anagram game for emacs" tar ((:url . "https://github.com/mkmcc/jumblr") (:keywords "anagram" "word game" "games")) "melpa"])
  (jump . [(20130702 33) ((findr (0 7)) (inflections (1 1))) "build functions which contextually jump between files" single ((:url . "http://github.com/eschulte/jump.el/tree/master") (:keywords "project" "convenience" "navigation")) "melpa"])
  (jump-char . [(20140515 551) nil "navigation by char" single ((:url . "https://github.com/lewang/jump-char")) "melpa"])
  (jump-to-line . [(20130122 853) nil "Jump to line number at point." single ((:keywords "jump" "line" "back" "file" "ruby" "csharp" "python" "perl")) "melpa"])
  (jvm-mode . [(20140313 132) ((dash (2 6 0)) (emacs (24))) "Monitor and manage your JVMs" single ((:url . "https://github.com/martintrojer/jvm-mode.el") (:keywords "convenience")) "melpa"])
  (kaesar . [(20131030 2312) nil "Another AES algorithm encrypt/decrypt string with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/kaesar.el") (:keywords "data")) "melpa"])
  (kaesar-file . [(20130912 212) ((kaesar (0 1 1))) "Encrypt/Decrypt file by AES with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/cipher/kaesar-file.el") (:keywords "data" "files")) "melpa"])
  (kaesar-mode . [(20131030 2312) ((kaesar (0 1 4))) "Encrypt/Decrypt buffer by AES with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/cipher/kaesar-mode.el") (:keywords "data" "convenience")) "melpa"])
  (kanban . [(20130815 48) nil "Parse org-todo headlines to use org-tables as Kanban tables" single ((:keywords "outlines" "convenience")) "melpa"])
  (key-chord . [(20080915 2156) nil "map pairs of simultaneously pressed keys to commands" single ((:keywords "keyboard" "chord" "input")) "melpa"])
  (key-combo . [(20131205 1338) nil "map key sequence to commands" tar ((:url . "https://github.com/uk-ar/key-combo") (:keywords "keyboard" "input")) "melpa"])
  (key-intercept . [(20140210 2349) nil "Intercept prefix keys" single ((:url . "http://github.com/tarao/key-intercept-el") (:keywords "keyboard")) "melpa"])
  (keychain-environment . [(20121026 1246) nil "load keychain environment variables" single ((:url . "https://github.com/tarsius/keychain-environment") (:keywords "gnupg" "pgp" "ssh")) "melpa"])
  (keydef . [(20090428 1231) nil "a simpler way to define keys, with kbd syntax" single ((:keywords "convenience" "lisp" "customization" "keyboard" "keys")) "melpa"])
  (keyfreq . [(20131109 926) nil "track command frequencies" single nil "melpa"])
  (keymap-utils . [(20140314 941) ((cl-lib (0 3))) "keymap utilities" single ((:url . "https://github.com/tarsius/keymap-utils") (:keywords "convenience" "extensions")) "melpa"])
  (kibit-mode . [(20140110 612) nil "No description available." tar nil "melpa"])
  (kill-ring-search . [(20140422 855) nil "incremental search for the kill ring" single ((:url . "http://nschum.de/src/emacs/kill-ring-search/") (:keywords "convenience" "matching")) "melpa"])
  (killer . [(20120808 422) nil "kill and delete text" single ((:url . "http://github.com/tarsius/killer") (:keywords "convenience")) "melpa"])
  (kite . [(20130201 1138) ((json (1 2)) (websocket (0 93 1))) "WebKit inspector front-end" tar ((:keywords "tools")) "melpa"])
  (kivy-mode . [(20140524 557) nil "Emacs major mode for editing Kivy files" single nil "melpa"])
  (kmacro-decision . [(20130919 826) ((el-x (1 0)) (jb-misc-macros (0 2))) "Add conditional branching to keyboard macros" single ((:url . "https://github.com/vapniks/kmacro-decision") (:keywords "convenience")) "melpa"])
  (know-your-http-well . [(20131125 1540) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar nil "melpa"])
  (kolon-mode . [(20140122 334) nil "Syntax highlighting for Text::Xslate's Kolon syntax" single ((:url . "https://github.com/samvtran/kolon-mode") (:keywords "xslate" "perl")) "melpa"])
  (kpm-list . [(20130131 148) nil "An emacs buffer list that tries to intelligently group together buffers." single ((:url . "https://github.com/KMahoney/kpm-list/")) "melpa"])
  (kv . [(20140108 734) nil "key/value data structure functions" single ((:keywords "lisp")) "melpa"])
  (kwin . [(20130206 2231) nil "communcate with the KWin window manager" single ((:url . "http://github.com/Tass/kwin-minor-mode")) "melpa"])
  (lacarte . [(20140201 2051) nil "Execute menu items as commands, with completion." single ((:url . "http://www.emacswiki.org/lacarte.el") (:keywords "menu-bar" "menu" "command" "help" "abbrev" "minibuffer" "keys" "completion" "matching" "local" "internal" "extensions")) "melpa"])
  (lang-refactor-perl . [(20131122 1327) nil "Simple refactorings, primarily for Perl" single ((:url . "https://github.com/jplindstrom/emacs-lang-refactor-perl") (:keywords "languages" "refactoring" "perl")) "melpa"])
  (langdoc . [(20140120 1845) ((cl-lib (0 2))) "Help to define help document mode for various languages" single ((:url . "https://github.com/tom-tan/langdoc/") (:keywords "convenience" "eldoc")) "melpa"])
  (langtool . [(20140330 316) nil "Grammar check utility using LanguageTool" single ((:url . "https://github.com/mhayashi1120/Emacs-langtool/raw/master/langtool.el") (:keywords "docs")) "melpa"])
  (latest-clojure-libraries . [(20140314 617) nil "Clojure dependency resolver" single ((:url . "http://github.com/AdamClements/latest-clojure-libraries/")) "melpa"])
  (latex-extra . [(20140507 350) ((auctex (11 86 1))) "Adds several useful functionalities to LaTeX-mode." single ((:url . "http://github.com/Bruce-Connor/latex-extra") (:keywords "tex")) "melpa"])
  (latex-pretty-symbols . [(20111011 546) nil "Display many latex symbols as their unicode counterparts" single ((:url . "https://bitbucket.org/mortiferus/latex-pretty-symbols.el") (:keywords "convenience" "display")) "melpa"])
  (latex-preview-pane . [(20140403 1049) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar nil "melpa"])
  (launch . [(20130619 1504) nil "launch files with OS-standard associated applications." single ((:url . "https://github.com/sfllaw/emacs-launch") (:keywords "convenience" "processes")) "melpa"])
  (lcs . [(20121201 555) nil "find out the longest common sequence" single ((:url . "https://github.com/jorgenschaefer/circe/wiki/lcs")) "melpa"])
  (ledger-mode . [(20140518 1943) nil "Helper code for use with the \"ledger\" command-line tool" tar nil "melpa"])
  (lein . [(20130406 1312) ((nrepl (0 1 7))) "Eshell interface to Leiningen" single ((:url . "https://github.com/technomancy/lein.el") (:keywords "tools" "convenience")) "melpa"])
  (lemon-mode . [(20130216 504) nil "A major mode for editing lemon grammar files" single ((:keywords "lemon")) "melpa"])
  (less-css-mode . [(20140205 250) nil "Major mode for editing LESS CSS files (lesscss.org)" single ((:url . "https://github.com/purcell/less-css-mode") (:keywords "less" "css" "mode")) "melpa"])
  (letcheck . [(20130213 1605) nil "Check the erroneous assignments in let forms" single ((:url . "https://github.com/Fuco1/letcheck") (:keywords "convenience")) "melpa"])
  (leuven-theme . [(20140520 542) nil "Awesome Emacs color theme on white background" single ((:url . "https://github.com/fniessen/emacs-leuven-theme") (:keywords "color" "theme")) "melpa"])
  (levenshtein . [(20051013 1756) nil "Edit distance between two strings." single ((:keywords "lisp")) "melpa"])
  (lexbind-mode . [(20140303 359) nil "Puts the value of lexical-binding in the mode line" single ((:url . "https://github.com/spacebat/lexbind-mode") (:keywords "convenience" "lisp")) "melpa"])
  (lfe-mode . [(20140420 1632) nil "Lisp Flavoured Erlang mode" tar nil "melpa"])
  (lib-requires . [(20131227 130) nil "Commands to list Emacs Lisp library dependencies." single ((:url . "http://www.emacswiki.org/lib-requires.el") (:keywords "libraries" "files")) "melpa"])
  (lice . [(20140116 657) nil "License And Header Template" tar ((:url . "https://github.com/buzztaiki/lice-el") (:keywords "template" "license" "tools")) "melpa"])
  (lingr . [(20100807 1031) nil "Lingr Client for GNU Emacs" single ((:url . "http://github.com/lugecy/lingr-el") (:keywords "chat" "client" "internet")) "melpa"])
  (link . [(20131005 526) nil "Hypertext links in text buffers" single ((:keywords "interface" "hypermedia")) "melpa"])
  (linphone . [(20130524 409) nil "Emacs interface to Linphone" tar ((:url . "https://github.com/zabbal/emacs-linphone") (:keywords "comm")) "melpa"])
  (linum-relative . [(20131210 2053) nil "display relative line number in emacs." single ((:url . "http://github.com/coldnew/linum-relative") (:keywords "converience")) "melpa"])
  (lispxmp . [(20130824 1207) nil "Automagic emacs lisp code annotation" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/lispxmp.el") (:keywords "lisp" "convenience")) "melpa"])
  (lispy . [(20140526 531) ((helm (1 5 3)) (ace-jump-mode (2 0)) (s (1 4 0)) (noflet (0 0 10)) (multiple-cursors (1 3 0)) (iedit (0 97))) "vi-like Paredit" tar nil "melpa"])
  (lispyscript-mode . [(20130828 719) nil "Major mode for LispyScript code." single ((:url . "https://github.com/krisajenkins/lispyscript-mode") (:keywords "lisp" "languages")) "melpa"])
  (list-packages-ext . [(20130927 908) ((s (1 6 0)) (ht (1 5 0)) (persistent-soft (0 8 6))) "Extras for list-packages" single ((:keywords "convenience" "tools")) "melpa"])
  (list-processes+ . [(20131117 1935) nil "Add process management to `list-processes'" single ((:url . "not distributed yet")) "melpa"])
  (list-register . [(20130824 1200) nil "List register" single nil "melpa"])
  (list-utils . [(20140508 1341) nil "List-manipulation utility functions" single ((:url . "http://github.com/rolandwalker/list-utils") (:keywords "extensions")) "melpa"])
  (litable . [(20140306 236) ((dash (2 6 0))) "dynamic evaluation replacement with emacs" single ((:keywords "lisp")) "melpa"])
  (literate-coffee-mode . [(20140307 1644) ((coffee-mode (0 5 0))) "major-mode for Literate CoffeeScript" single ((:url . "https://github.com/syohex/emacs-literate-coffee-mode")) "melpa"])
  (lively . [(20120728 1413) nil "Interactively updating text" single nil "melpa"])
  (livescript-mode . [(20131206 2300) nil "Major mode for editing LiveScript files" single ((:url . "https://github.com/yhisamatsu/livescript-mode") (:keywords "languages" "livescript")) "melpa"])
  (livid-mode . [(20131116 544) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single ((:url . "https://github.com/pandeiro/livid-mode")) "melpa"])
  (load-relative . [(20130410 249) nil "relative file load (within a multi-file Emacs package)" single ((:url . "http://github.com/rocky/emacs-load-relative") (:keywords "internal")) "melpa"])
  (load-theme-buffer-local . [(20120702 1336) nil "Install emacs24 color themes by buffer." single ((:url . "http://github.com/vic/color-theme-buffer-local") (:keywords "faces")) "melpa"])
  (loc-changes . [(20130723 1930) nil "Helps users and programs keep track of positions even after buffer changes." single ((:url . "http://github.com/rocky/emacs-loc-changes")) "melpa"])
  (loccur . [(20131022 219) nil "Performs an occur-like folding in current buffer." single ((:url . "https://github.com/fourier/loccur") (:keywords "matching")) "melpa"])
  (log4e . [(20130514 912) nil "provide logging framework for elisp" single ((:url . "https://github.com/aki2o/log4e") (:keywords "log")) "melpa"])
  (log4j-mode . [(20101016 822) nil "major mode for viewing log files" single ((:keywords "log" "log4j" "java")) "melpa"])
  (logalimacs . [(20131021 1129) ((popwin (0 6 2)) (popup (0 5 0)) (stem (20130120))) "Front-end to logaling-command for Ruby gems" single ((:url . "https://github.com/logaling/logalimacs") (:keywords "translation" "logaling-command")) "melpa"])
  (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" single ((:keywords "lisp" "tool")) "melpa"])
  (lolcode-mode . [(20111002 147) nil "Major mode for editing LOLCODE" single ((:url . "http://github.com/bodil/lolcode-mode") (:keywords "lolcode" "major" "mode")) "melpa"])
  (look-dired . [(20130511 1624) ((look-mode (1 0))) "Extensions to look-mode for dired buffers" single ((:url . "https://github.com/vapniks/look-dired") (:keywords "convenience")) "melpa"])
  (look-mode . [(20130824 1206) nil "quick file viewer for image and text file browsing" single nil "melpa"])
  (loop . [(20130309 805) nil "friendly imperative loop structures" single ((:keywords "loop" "while" "for each" "break" "continue")) "melpa"])
  (lorem-ipsum . [(20051013 1756) nil "Insert dummy pseudo Latin text." single nil "melpa"])
  (love-minor-mode . [(20130429 1459) ((lua-mode (20130419))) "Minor mode for working on L\303\226VE projects" single ((:url . "https://github.com/ejmr/love-minor-mode")) "melpa"])
  (lua-mode . [(20140525 251) nil "a major-mode for editing Lua scripts" single ((:url . "http://immerrr.github.com/lua-mode") (:keywords "languages" "processes" "tools")) "melpa"])
  (lui . [(20131201 620) ((tracking (0))) "Linewise User Interface" tar nil "melpa"])
  (lusty-explorer . [(20130407 1056) nil "Dynamic filesystem explorer and buffer switcher" single ((:keywords "convenience" "files" "matching")) "melpa"])
  (lxc . [(20140410 1322) nil "lxc integration with Emacs" single ((:url . "https://github.com/nicferrier/emacs-lxc") (:keywords "processes")) "melpa"])
  (m-buffer . [(20140519 1447) ((dash (2 5 0)) (emacs (24 3))) "Buffer Manipulation Functions" single nil "melpa"])
  (macro-math . [(20130328 904) nil "in-buffer mathematical operations" single ((:url . "http://nschum.de/src/emacs/macro-math/") (:keywords "convenience")) "melpa"])
  (macros+ . [(20131227 136) nil "Extensions to `macros.el'." single ((:url . "http://www.emacswiki.org/macros+.el") (:keywords "abbrev" "local")) "melpa"])
  (macrostep . [(20140529 1746) nil "interactive macro stepper for Emacs Lisp" single ((:url . "https://github.com/joddie/macrostep") (:keywords "lisp" "languages" "macro" "debugging")) "melpa"])
  (mag-menu . [(20130224 56) ((splitter (0 1 0))) "Intuitive keyboard-centric menu system" single ((:url . "https://github.com/chumpage/mag-menu") (:keywords "convenience")) "melpa"])
  (magit . [(20140522 1128) ((cl-lib (0 3)) (git-commit-mode (0 14 0)) (git-rebase-mode (0 14 0))) "control Git from Emacs" tar ((:keywords "vc" "tools")) "melpa"])
  (magit-annex . [(20140504 2) ((cl-lib (0 3)) (magit (1 2 0))) "Use git annex within magit" single ((:url . "https://github.com/kyleam/magit-annex") (:keywords "magit" "git-annex")) "melpa"])
  (magit-filenotify . [(20140409 559) ((magit (1 3 0))) "Refresh status buffer when git tree changes" single ((:keywords "tools")) "melpa"])
  (magit-find-file . [(20140516 428) ((magit (1 2 0))) "completing-read over all files in Git" single ((:url . "https://github.com/bradleywright/magit-find-file.el") (:keywords "git")) "melpa"])
  (magit-gerrit . [(20140511 2018) ((magit (1 2 0))) "Magit plugin for Gerrit Code Review" single ((:url . "https://github.com/terranpro/magit-gerrit")) "melpa"])
  (magit-gitflow . [(20140512 1437) ((magit (1 3 0))) "gitflow extension for magit" single ((:url . "https://github.com/jtatarik/magit-gitflow") (:keywords "vc" "tools")) "melpa"])
  (magit-log-edit . [(20140522 1137) ((cl-lib (0 3)) (magit (1 3 0))) "[SEMI-OBSOLETE] major mode for editing Git commit messages" single ((:keywords "vc" "tools")) "melpa"])
  (magit-push-remote . [(20140108 1300) ((magit (1 3 0))) "push remote support for Magit" single ((:url . "https://github.com/tarsius/magit-push-remote") (:keywords "convenience")) "melpa"])
  (magit-stgit . [(20140129 609) ((cl-lib (0 3)) (magit (1 3 0))) "StGit plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-svn . [(20140206 713) ((cl-lib (0 3)) (magit (1 3 0))) "git-svn plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-topgit . [(20140214 1108) ((cl-lib (0 3)) (magit (1 3 0))) "topgit plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-tramp . [(20140517 753) ((magit (1 2 0))) "git method for TRAMP" tar ((:url . "https://github.com/sigma/magit-tramp")) "melpa"])
  (main-line . [(20130404 1904) nil "modeline replacement forked from an early version of powerline.el" single ((:url . "https://github.com/jasonm23/emacs-mainline") (:keywords "statusline" "/" "modeline")) "melpa"])
  (make-color . [(20140409 519) nil "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" single ((:url . "https://github.com/alezost/make-color.el") (:keywords "color")) "melpa"])
  (make-it-so . [(20140415 545) ((helm (1 5 3)) (emacs (24))) "Transform files with Makefile recipes." tar ((:url . "https://github.com/abo-abo/make-it-so") (:keywords "make" "dired")) "melpa"])
  (makey . [(20131231 630) ((cl-lib (0 2))) "interactive commandline mode" single nil "melpa"])
  (malabar-mode . [(20140307 1420) ((fringe-helper (1 0 1))) "A better Java mode for Emacs" tar ((:url . "http://www.github.com/m0smith/malabar-mode") (:keywords "java" "maven" "language" "malabar")) "melpa"])
  (mallard-mode . [(20131203 2025) nil "Major mode for editing Mallard files" tar ((:url . "https://github.com/jhradilek/emacs-mallard-mode") (:keywords "xml" "mallard")) "melpa"])
  (mallard-snippets . [(20131023 1151) ((yasnippet (0 8 0)) (mallard-mode (0 1 1))) "Yasnippets for Mallard" tar ((:url . "https://github.com/jhradilek/emacs-mallard-snippets") (:keywords "snippets" "mallard")) "melpa"])
  (man-commands . [(20130627 1653) nil "Add interactive commands for every manpages installed in your computer." single ((:url . "http://github.com/nflath/man-commands")) "melpa"])
  (manage-minor-mode . [(20140310 900) ((emacs (24 3))) "Manage your minor-modes easily" single ((:url . "https://github.com/ShingoFukuyama/manage-minor-mode") (:keywords "minor-mode" "manage" "emacs")) "melpa"])
  (map-progress . [(20140310 1432) nil "mapping macros that report progress" single ((:url . "https://github.com/tarsius/map-progress/") (:keywords "convenience")) "melpa"])
  (map-regexp . [(20130522 1403) ((cl-lib (0 2))) "map over matches of a regular expression" single ((:url . "https://github.com/tarsius/map-regexp") (:keywords "convenience")) "melpa"])
  (mark-multiple . [(20121118 754) nil "Sorta lets you mark several regions at once." tar nil "melpa"])
  (mark-tools . [(20130614 325) nil "Some simple tools to access the mark-ring in Emacs" single ((:url . "https://github.com/stsquad/emacs-mark-tools")) "melpa"])
  (markdown-mode+ . [(20120829 510) ((markdown-mode (20111229))) "extra functions for markdown-mode" tar ((:url . "http://github.com/milkypostman/markdown-mode+.el") (:keywords "markdown" "latex" "osx" "rtf")) "melpa"])
  (markdown-mode . [(20131210 700) nil "Emacs Major mode for Markdown-formatted text files" single ((:url . "http://jblevins.org/projects/markdown-mode/") (:keywords "markdown" "github flavored markdown" "itex")) "melpa"])
  (markdown-toc . [(20140525 1011) ((markdown-mode (2 0)) (dash (2 5 0)) (s (1 7 0))) "A simple TOC generator for markdown file" single ((:url . "http://github.com/ardumont/markdown-toc") (:keywords "markdown" "toc" "tools")) "melpa"])
  (markup . [(20130207 1309) nil "Simple markup generation helpers." single ((:url . "http://github.com/leoc/markup.el") (:keywords "convenience" "markup" "html")) "melpa"])
  (markup-faces . [(20130117 246) nil "collection of faces for markup language modes" single ((:url . "https://github.com/sensorflo/markup-faces") (:keywords "wp" "faces")) "melpa"])
  (marmalade . [(20110602 1622) ((furl (0 0 2))) "Elisp interface for the Emacs Lisp package server." single ((:url . "http://code.google.com/p/marmalade")) "melpa"])
  (math-symbols . [(20130910 31) ((helm (1 0))) "Math Symbol Input methods and conversion tools" tar ((:url . "https://github.com/kawabata/math-symbols") (:keywords "math symbols" "tex" "latex")) "melpa"])
  (matlab-mode . [(20140307 2322) nil "No description available." tar nil "melpa"])
  (maude-mode . [(20140212 302) nil "Emacs mode for the programming language Maude" single ((:keywords "maude")) "melpa"])
  (maxframe . [(20120725 639) nil "maximize the emacs frame based on display size" single ((:keywords "display" "frame" "window" "maximize")) "melpa"])
  (mb-depth+ . [(20131227 137) nil "Indicate minibuffer-depth in prompt" single ((:url . "http://www.emacswiki.org/mb-depth+.el") (:keywords "convenience")) "melpa"])
  (mc-extras . [(20130909 27) ((multiple-cursors (1 2 1))) "Extra functions for multiple-cursors mode." tar ((:url . "https://github.com/knu/mc-extras.el") (:keywords "editing" "cursors")) "melpa"])
  (mediawiki . [(20130223 1141) nil "mediawiki frontend" single ((:url . "http://launchpad.net/mediawiki-el") (:keywords "mediawiki" "wikipedia" "network" "wiki")) "melpa"])
  (melpa-upstream-visit . [(20130720 333) ((s (1 6 0))) "A set of kludges to visit a melpa-hosted package's homepage" single ((:keywords "convenience")) "melpa"])
  (memoize . [(20130421 1234) nil "Memoization functions" single ((:url . "https://github.com/skeeto/emacs-memoize")) "melpa"])
  (mentor . [(20130519 1540) ((xml-rpc (1 6 9))) "Frontend for the rTorrent bittorrent client" tar ((:keywords "bittorrent" "rtorrent")) "melpa"])
  (menu-bar+ . [(20140504 2038) nil "Extensions to `menu-bar.el'." single ((:url . "http://www.emacswiki.org/menu-bar+.el") (:keywords "internal" "local" "convenience")) "melpa"])
  (merlin . [(20140328 908) nil "Mode for Merlin, an assistant for OCaml." single ((:url . "http://github.com/the-lambda-church/merlin") (:keywords "ocaml" "languages")) "melpa"])
  (message-x . [(20140505 1407) nil "No description available." single nil "melpa"])
  (metaweblog . [(20130707 431) ((xml-rpc (1 6 8))) "An emacs library to access metaweblog based weblogs" tar nil "melpa"])
  (mew . [(20140507 1944) nil "Messaging in the Emacs World" tar nil "melpa"])
  (mic-paren . [(20120716 1647) nil "advanced highlighting of matching parentheses" single ((:keywords "languages" "faces" "parenthesis" "matching")) "melpa"])
  (midje-mode . [(20131019 1357) ((cider (0 1 4)) (clojure-mode (1 0))) "Minor mode for running Midje tests in emacs" tar nil "melpa"])
  (midje-test-mode . [(20131208 914) ((clojure-mode (1 7)) (cider (0 3 0))) "Minor mode for midje" single ((:keywords "languages" "lisp" "test")) "melpa"])
  (migemo . [(20140305 156) nil "Japanese incremental search through dynamic pattern expansion" single ((:url . "https://github.com/emacs-jp/migemo")) "melpa"])
  (milkode . [(20140517 921) nil "Command line search and direct jump with Milkode" single ((:keywords "milkode" "search" "grep" "jump" "keyword")) "melpa"])
  (minesweeper . [(20140412 907) nil "play minesweeper in Emacs" single ((:url . "https://bitbucket.org/zck/minesweeper.el") (:keywords "game" "fun" "minesweeper" "inane" "diversion")) "melpa"])
  (minibuf-isearch . [(20071112 234) nil "incremental search on minibuffer history" tar ((:keywords "minibuffer" "history" "incremental search")) "melpa"])
  (minibuffer-complete-cycle . [(20130813 945) nil "Cycle through the *Completions* buffer" single ((:url . "https://github.com/knu/minibuffer-complete-cycle") (:keywords "completion")) "melpa"])
  (minibuffer-cua . [(20130906 434) nil "Make CUA mode's S-up/S-down work in minibuffer" single ((:url . "https://github.com/knu/minibuffer-cua.el") (:keywords "completion" "editing")) "melpa"])
  (miniedit . [(20100419 1045) nil "Enhanced editing for minibuffer fields." single nil "melpa"])
  (minimal-session-saver . [(20140508 1341) nil "Very lean session saver" single ((:url . "http://github.com/rolandwalker/minimal-session-saver") (:keywords "tools" "frames" "project")) "melpa"])
  (minimal-theme . [(20140409 1601) nil "A light/dark minimalistic Emacs 24 theme." tar ((:url . "http://github.com/ikame/minimal-theme") (:keywords "color" "theme" "minimal")) "melpa"])
  (minimap . [(20140201 1209) nil "Minimap sidebar for Emacs" single ((:keywords "minimap")) "melpa"])
  (minitest . [(20140513 701) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" single ((:url . "https://github.com/arthurnn/minitest-emacs")) "melpa"])
  (minor-mode-hack . [(20130212 1228) nil "Change priority of minor-mode keymaps" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/minor-mode-hack.el") (:keywords "lisp")) "melpa"])
  (mip-mode . [(20140522 1117) ((dash (2 5 0))) "virtual projects for emacs." single ((:keywords "workspaces" "workspace" "project" "projects" "mip-mode")) "melpa"])
  (misc-cmds . [(20140101 100) nil "Miscellaneous commands (interactive functions)." single ((:url . "http://www.emacswiki.org/misc-cmds.el") (:keywords "internal" "unix" "extensions" "maint" "local")) "melpa"])
  (misc-fns . [(20131227 139) nil "Miscellaneous non-interactive functions." single ((:url . "http://www.emacswiki.org/misc-fns.el") (:keywords "internal" "unix" "lisp" "extensions" "local")) "melpa"])
  (mmm-mako . [(20121019 2351) ((mmm-mode (0 4 8))) "MMM submode class for Mako Templates" single ((:url . "https://bitbucket.org/pjenvey/mmm-mako")) "melpa"])
  (mmm-mode . [(20140211 2104) nil "Allow Multiple Major Modes in a buffer" tar ((:url . "https://github.com/purcell/mmm-mode") (:keywords "convenience" "faces" "languages" "tools")) "melpa"])
  (mo-git-blame . [(20140409 320) nil "An interactive, iterative 'git blame' mode for Emacs" single ((:keywords "tools")) "melpa"])
  (mo-vi-ment-mode . [(20131028 2333) nil "Provide vi-like cursor movement that's easy on the fingers" single ((:keywords "convenience")) "melpa"])
  (mobdebug-mode . [(20140109 1946) ((lua-mode (20130419)) (emacs (24))) "Major mode for MobDebug" single ((:url . "https://github.com/deftsp/mobdebug-mode")) "melpa"])
  (mocker . [(20131006 934) ((eieio (1 3)) (el-x (0 2 4))) "mocking framework for emacs" single ((:keywords "lisp" "testing")) "melpa"])
  (mode-icons . [(20130602 548) nil "Show icons for modes" tar ((:url . "http://ryuslash.org/projects/mode-icons.html") (:keywords "multimedia")) "melpa"])
  (mode-line-debug . [(20140330 715) nil "show status of `debug-on-error' in the mode-line" single ((:url . "https://github.com/tarsius/mode-line-debug") (:keywords "convenience" "lisp")) "melpa"])
  (modeline-posn . [(20140121 553) nil "Set up `mode-line-position'." single ((:url . "http://www.emacswiki.org/modeline-posn.el") (:keywords "mode-line" "region" "column")) "melpa"])
  (modtime-skip-mode . [(20140128 1401) nil "Minor mode for disabling modtime and supersession checks on files." single ((:url . "http://www.github.com/jordonbiondo/modtime-skip-mode")) "melpa"])
  (moe-theme . [(20140527 821) nil "A colorful eye-candy theme. Moe, moe, kyun!" tar nil "melpa"])
  (molokai-theme . [(20130828 0) nil "molokai theme with Emacs theme engine" single ((:url . "https://github.com/alloy-d/color-theme-molokai")) "melpa"])
  (mongo . [(20120904 2005) nil "MongoDB driver for Emacs Lisp" tar ((:keywords "convenience")) "melpa"])
  (monky . [(20130513 513) nil "Control Hg from Emacs." tar nil "melpa"])
  (monochrome-theme . [(20140326 350) nil "A dark Emacs 24 theme for your focused hacking sessions" tar nil "melpa"])
  (monokai-theme . [(20140310 1330) nil "A fruity color theme for Emacs." single ((:url . "http://github.com/oneKelvinSmith/monokai-emacs")) "melpa"])
  (morlock . [(20140309 1759) nil "more font-lock keywords for elisp" single ((:url . "http://github.com/tarsius/morlock") (:keywords "convenience")) "melpa"])
  (mote-mode . [(20121014 2119) ((ruby-mode (1 1))) "Mote minor mode" single ((:url . "http://inkel.github.com/mote-mode/")) "melpa"])
  (motion-mode . [(20140426 2032) ((flymake-easy (0 7)) (flymake-cursor (1 0 2))) "major mode for RubyMotion enviroment" tar ((:url . "https://github.com/ainame/motion-mode")) "melpa"])
  (mouse+ . [(20140519 1830) nil "Extensions to `mouse.el'." single ((:url . "http://www.emacswiki.org/mouse+.el") (:keywords "mouse")) "melpa"])
  (mouse-slider-mode . [(20130609 826) nil "scale numbers dragged under the mouse" single ((:url . "https://github.com/skeeto/mouse-slider-mode")) "melpa"])
  (mouse3 . [(20140415 1708) nil "Customizable behavior for `mouse-3'." single ((:url . "http://www.emacswiki.org/mouse3.el") (:keywords "mouse" "menu" "keymap" "kill" "rectangle" "region")) "melpa"])
  (move-text . [(20140307 1644) nil "Move current line or region with M-up or M-down." single ((:keywords "edit")) "melpa"])
  (mu4e-maildirs-extension . [(20140314 231) nil "Show mu4e maildirs summary in mu4e-main-view" single ((:url . "http://github.com/agpchil/mu4e-maildirs-extension")) "melpa"])
  (multi . [(20131013 844) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" single ((:url . "http://github.com/kurisuwhyte/emacs-multi") (:keywords "multimethod" "generic" "predicate" "dispatch")) "melpa"])
  (multi-eshell . [(20120608 1835) nil "Create and manage multiple shells within Emacs" single ((:url . "http://cims.nyu.edu/~stucchio")) "melpa"])
  (multi-project . [(20140103 637) nil "Easily work with multiple projects." single ((:url . "https://bitbucket.org/ellisvelo/multi-project/overview") (:keywords "project" "management")) "melpa"])
  (multi-term . [(20140513 133) nil "Managing multiple terminal buffers in Emacs." single ((:url . "http://www.emacswiki.org/emacs/download/multi-term.el") (:keywords "term" "terminal" "multiple buffer")) "melpa"])
  (multi-web-mode . [(20130823 2054) nil "multiple major mode support for web editing" tar ((:url . "https://github.com/fgallina/multi-web-mode") (:keywords "convenience" "languages" "wp")) "melpa"])
  (multifiles . [(20130615 1433) nil "View and edit parts of multiple files in one buffer" single ((:keywords "multiple" "files")) "melpa"])
  (multiple-cursors . [(20140527 359) nil "Multiple cursors for Emacs." tar nil "melpa"])
  (mustache . [(20131117 1407) ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) "a mustache templating library in emacs lisp" tar nil "melpa"])
  (mustache-mode . [(20111003 1103) nil "A major mode for editing Mustache files." single nil "melpa"])
  (mustang-theme . [(20130920 939) nil "port of vim's mustang theme" single ((:url . "http://github.com/mswift42/mustang-theme")) "melpa"])
  (muttrc-mode . [(20090804 2252) nil "Major mode to edit muttrc under Emacs" single nil "melpa"])
  (mvn . [(20131227 2312) nil "helpers for compiling with maven" single ((:url . "https://github.com/apgwoz/mvn-el") (:keywords "compilation" "maven" "java")) "melpa"])
  (mwe-log-commands . [(20100703 541) nil "log keyboard commands to buffer" single ((:keywords "help")) "melpa"])
  (mykie . [(20140221 1925) nil "Command multiplexer: Register multiple functions to a keybind" tar ((:url . "https://github.com/yuutayamada/mykie-el") (:keywords "emacs" "configuration" "keybind")) "melpa"])
  (mysql2sqlite . [(20120514 731) nil "Convert mysql databases into sqlite databases." single nil "melpa"])
  (n3-mode . [(20130116 1429) nil "mode for Notation 3" single nil "melpa"])
  (naked . [(20131227 142) nil "Provide for naked key descriptions: no angle brackets." single ((:url . "http://www.emacswiki.org/naked.el") (:keywords "lisp" "key" "print" "format" "help")) "melpa"])
  (namespaces . [(20130326 1550) nil "An implementation of namespaces for Elisp, with an emphasis on immutabilty." single ((:url . "https://github.com/chrisbarrett/elisp-namespaces")) "melpa"])
  (nanowrimo . [(20131130 2140) nil "Track progress for nanowrimo" single ((:url . "https://bitbucket.org/gvol/nanowrimo-mode")) "melpa"])
  (naquadah-theme . [(20131210 1123) nil "A theme based on Tango color set" single nil "melpa"])
  (nav . [(20120507 7) nil "Emacs mode for filesystem navigation" tar nil "melpa"])
  (nav-flash . [(20140508 1341) nil "Briefly highlight the current line" single ((:url . "http://github.com/rolandwalker/nav-flash") (:keywords "extensions" "navigation" "interface")) "melpa"])
  (navi-mode . [(20140408 404) nil "major-mode for easy buffer-navigation" single ((:url . "https://github.com/tj64/outshine")) "melpa"])
  (navi2ch . [(20130618 514) nil "Navigator for 2ch for Emacsen" tar ((:keywords "network" "2ch")) "melpa"])
  (navorski . [(20140514 1649) ((dash (1 5 0)) (multi-term (0 8 14))) "Helping you live in the terminal, like Viktor did." single ((:keywords "terminal")) "melpa"])
  (ncl-mode . [(20130527 1545) nil "Major Mode for editing NCL scripts and other goodies" tar nil "melpa"])
  (nclip . [(20130617 1315) nil "Network (HTTP) Clipboard" tar ((:url . "http://www.github.com/maio/nclip.el") (:keywords "nclip" "clipboard" "network")) "melpa"])
  (nemerle . [(20130328 746) nil "major mode for editing nemerle programs" single ((:keywords "nemerle" "mode" "languages")) "melpa"])
  (never-comment . [(20140104 1407) nil "Never blocks are comment" single ((:url . "http://stackoverflow.com/a/4554658/89376")) "melpa"])
  (newlisp-mode . [(20140109 1038) nil "newLISP editing mode for Emacs" single ((:url . "https://github.com/kosh04/newlisp-mode") (:keywords "language" "lisp" "newlisp")) "melpa"])
  (nexus . [(20140114 505) nil "REST Client for Nexus Maven Repository servers" tar ((:keywords "comm")) "melpa"])
  (nginx-mode . [(20140321 2028) nil "major mode for editing nginx config files" single ((:keywords "nginx")) "melpa"])
  (niflheim-theme . [(20140523 1645) nil "A port of the Nifleim theme to Emacs" single ((:url . "https://github.com/niflheim-theme/emacs") (:keywords "themes")) "melpa"])
  (nimrod-mode . [(20110125 1504) nil "A major mode for the Nimrod programming language" single ((:keywords "nimrod")) "melpa"])
  (ninja-mode . [(20140123 829) nil "Major mode for editing .ninja files" single nil "melpa"])
  (nnir-est . [(20140301 602) nil "Gnus nnir interface for HyperEstraier" single ((:url . "https://github.com/kawabata/nnir-est") (:keywords "mail")) "melpa"])
  (noctilux-theme . [(20140406 2) nil "Dark theme inspired by LightTable" tar nil "melpa"])
  (nodejs-repl . [(20130520 842) nil "Run Node.js REPL" single nil "melpa"])
  (noflet . [(20140202 1451) nil "locally override functions" single ((:url . "https://github.com/nicferrier/emacs-noflet") (:keywords "lisp")) "melpa"])
  (nose . [(20140520 948) nil "Easy Python test running in Emacs" single ((:keywords "nose" "python" "testing")) "melpa"])
  (notmuch . [(20140528 550) nil "No description available." tar nil "melpa"])
  (notmuch-labeler . [(20131230 919) ((notmuch (0))) "Improve notmuch way of displaying labels" tar ((:url . "https://github.com/DamienCassou/notmuch-labeler") (:keywords "emacs" "package" "elisp" "notmuch" "emails")) "melpa"])
  (novice+ . [(20131227 143) nil "Extensions to `novice.el'." single ((:url . "http://www.emacswiki.org/novice+.el") (:keywords "internal" "help")) "melpa"])
  (nrepl-eval-sexp-fu . [(20140311 341) ((highlight (0 0 0)) (smartparens (0 0 0)) (thingatpt (0 0 0))) "Tiny functionality enhancements for evaluating sexps." single ((:keywords "lisp" "highlight" "convenience")) "melpa"])
  (nrepl-ritz . [(20130516 1039) ((nrepl (0 1 7)) (fringe-helper (0 1 1))) "nrepl extensions for ritz" single ((:url . "https://github.com/pallet/ritz") (:keywords "languages" "lisp" "nrepl")) "melpa"])
  (nsis-mode . [(20130723 1928) nil "NSIS-mode" tar ((:url . "http://github.com/mlf176f2/nsis-mode") (:keywords "nsis")) "melpa"])
  (number-font-lock-mode . [(20140327 1140) ((emacs (24))) "Syntax highlighting of numeric literals" single ((:url . "https://github.com/Fanael/number-font-lock-mode")) "melpa"])
  (nummm-mode . [(20131117 214) nil "Display the number of minor modes instead of their names" single ((:url . "http://github.com/agpchil/nummm-mode")) "melpa"])
  (nvm . [(20140121 540) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0))) "Manage Node versions within Emacs" single ((:url . "http://github.com/rejeep/nvm.el") (:keywords "node" "nvm")) "melpa"])
  (nyan-mode . [(20120710 2200) nil "Nyan Cat shows position in current buffer in mode-line." tar ((:url . "http://nyan-mode.buildsomethingamazing.com") (:keywords "nyan" "cat" "lulz" "pop tart cat" "build something amazing")) "melpa"])
  (nyan-prompt . [(20130721 311) nil "Nyan Cat on the eshell prompt." tar ((:url . "http://github.com/PuercoPop/nyan-prompt") (:keywords "nyan" "cat" "lulz" "eshell" "rainbow")) "melpa"])
  (o-blog . [(20130904 1426) nil "Org-blog exporter" tar nil "melpa"])
  (oauth . [(20130127 1751) nil "Oauth library." tar ((:keywords "comm")) "melpa"])
  (ob-browser . [(20130724 902) ((org (8))) "Translation of text blocks in org-mode." tar ((:url . "https://github.com/krisajenkins/ob-browser") (:keywords "org" "babel" "browser" "phantomjs")) "melpa"])
  (ob-mongo . [(20130718 732) ((org (8))) "Execute mongodb queries within org-mode blocks." single ((:url . "https://github.com/krisajenkins/ob-mongo") (:keywords "org" "babel" "mongo" "mongodb")) "melpa"])
  (ob-sml . [(20130829 1143) ((sml-mode (6 4))) "org-babel functions for template evaluation" single ((:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research")) "melpa"])
  (ob-translate . [(20130718 729) ((google-translate (0 4)) (org (8))) "Translation of text blocks in org-mode." single ((:url . "https://github.com/krisajenkins/ob-translate") (:keywords "org" "babel" "translate" "translation")) "melpa"])
  (object-registry . [(20130521 1213) ((cl-lib (0 2))) "OBSOLETE track data items by various instance slots" single ((:url . "https://github.com/emacsattic/object-registry") (:keywords "data" "oo")) "melpa"])
  (obsidian-theme . [(20140420 943) nil "port of the eclipse obsidian theme" single ((:url . "http://github.com/mswift42/obsidian-theme")) "melpa"])
  (occidental-theme . [(20130312 1258) nil "Custom theme for faces based on Adwaita" single ((:url . "http://github.com/olcai/occidental-theme")) "melpa"])
  (occur-x . [(20130610 643) nil "Extra functionality for occur" single ((:keywords "occur" "search" "convenience")) "melpa"])
  (octomacs . [(20130919 1915) nil "Octopress interface for Emacs" single ((:url . "http://technosorcery.net")) "melpa"])
  (offlineimap . [(20130331 741) nil "Run OfflineIMAP from Emacs" single ((:url . "http://julien.danjou.info/offlineimap-el.html")) "melpa"])
  (omniref . [(20140222 1226) nil "Omniref Ruby documentation search engine interface" single ((:url . "http://github.org/dotemacs/omniref.el") (:keywords "docs" "help" "tools")) "melpa"])
  (omnisharp . [(20140510 1223) ((json (1 2)) (dash (1 8 0)) (popup (0 5)) (auto-complete (1 4)) (flycheck (0 19)) (csharp-mode (0 8 6))) "Omnicompletion (intellisense) and more for C#" single ((:url . "https://github.com/sp3ctum/omnisharp-emacs") (:keywords "csharp" "c#" "ide" "auto-complete" "intellisense")) "melpa"])
  (on-screen . [(20140502 2010) ((cl-lib (0))) "guide your eyes while scrolling" single ((:url . "https://github.com/michael-heerdegen/on-screen.el") (:keywords "convenience")) "melpa"])
  (oneonone . [(20140211 2259) ((hexrgb (0))) "Frame configuration that uses one frame per window." single ((:url . "http://www.emacswiki.org/oneonone.el") (:keywords "local" "frames")) "melpa"])
  (open-junk-file . [(20130131 720) nil "Open a junk (memo) file to try-and-error" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/open-junk-file.el") (:keywords "convenience" "tools")) "melpa"])
  (openstack-cgit-browse-file . [(20130819 227) nil "Browse the current file in OpenStack cgit" single ((:url . "https://github.com/chmouel/openstack-cgit-browse-file") (:keywords "convenience" "vc" "git" "cgit" "gerrit" "openstack")) "melpa"])
  (openwith . [(20120531 1436) nil "Open files with external programs" single ((:url . "https://bitbucket.org/jpkotta/openwith") (:keywords "files" "processes")) "melpa"])
  (operate-on-number . [(20140522 430) nil "Operate on number at point with arithmetic functions" single ((:url . "https://github.com/knu/operate-on-number.el") (:keywords "editing")) "melpa"])
  (org-ac . [(20140302 413) ((auto-complete-pcmp (0 0 1)) (log4e (0 2 0)) (yaxception (0 1))) "Some auto-complete sources for org-mode" single ((:url . "https://github.com/aki2o/org-ac") (:keywords "org" "completion")) "melpa"])
  (org-agenda-property . [(20131007 1013) ((emacs (24 2))) "Display org properties in the agenda buffer." single ((:url . "http://github.com/Bruce-Connor/org-agenda-property") (:keywords "calendar")) "melpa"])
  (org-bullets . [(20131106 1108) nil "Show bullets in org-mode as UTF-8 characters" single ((:url . "https://github.com/sabof/org-bullets")) "melpa"])
  (org-context . [(20130903 1458) ((org (7))) "Contextual capture and agenda commands for Org-mode" single ((:url . "https://github.com/thisirs/org-context") (:keywords "org" "capture" "agenda" "convenience")) "melpa"])
  (org-cua-dwim . [(20120202 2134) nil "Org-mode and Cua mode compatibility layer" single ((:keywords "org-mode" "cua-mode")) "melpa"])
  (org-dotemacs . [(20130908 1756) ((org (7 9 3)) (cl-lib (1 0))) "Store your emacs config as an org file, and choose which bits to load." single ((:url . "https://github.com/vapniks/org-dotemacs") (:keywords "local")) "melpa"])
  (org-drill-table . [(20140117 137) ((s (1 7 0)) (dash (2 2 0)) (cl-lib (0 3)) (org-plus-contrib (8 2)) (emacs (24 1))) "Generate drill cards from org tables" single nil "melpa"])
  (org-ehtml . [(20140501 706) ((web-server (20140109 2200)) (emacs (24 3))) "Export Org-mode files as editable web pages" tar nil "melpa"])
  (org-elisp-help . [(20130423 1545) ((cl-lib (0 2)) (org (8 0))) "org links to emacs-lisp documentation" single ((:url . "https://github.com/tarsius/org-elisp-help") (:keywords "org" "remember" "lisp")) "melpa"])
  (org-fstree . [(20090723 819) nil "include a filesystem subtree into an org file" single ((:url . "http://www.burtzlaff.de/org-fstree/org-fstree.el") (:keywords "org-mode" "filesystem" "tree")) "melpa"])
  (org-gcal . [(20140424 617) ((request-deferred (0 2 0)) (alert (1 1)) (emacs (24)) (cl-lib (0 5)) (org (8 2 4))) "Org sync with Google Calendar" single ((:url . "https://github.com/myuhe/org-gcal.el") (:keywords "convenience")) "melpa"])
  (org-gnome . [(20140111 813) ((notify (2010 8 20)) (telepathy (0 1)) (gnome-calendar (0 1))) "Orgmode integration with the GNOME desktop" single ((:keywords "org" "gnome")) "melpa"])
  (org-grep . [(20140214 2022) nil "Kind of M-x rgrep adapted for Org mode." single ((:url . "https://github.com/pinard/org-grep")) "melpa"])
  (org-jekyll . [(20130508 239) ((org (8 0))) "Export jekyll-ready posts form org-mode entries" single ((:url . "http://juanreyero.com/open/org-jekyll/") (:keywords "hypermedia")) "melpa"])
  (org-jira . [(20130427 616) nil "Syncing between Jira and Org-mode." tar nil "melpa"])
  (org-journal . [(20140310 132) nil "a simple org-mode based journaling mode" single ((:url . "http://github.com/bastibe/emacs-journal")) "melpa"])
  (org-link-travis . [(20140405 1627) ((org (7))) "Insert/Export the link of Travis CI on org-mode" single ((:url . "https://github.com/aki2o/org-link-travis") (:keywords "org")) "melpa"])
  (org-linkany . [(20140314 1108) ((log4e (0 2 0)) (yaxception (0 1))) "Insert link using anything.el/helm.el on org-mode" single ((:url . "https://github.com/aki2o/org-linkany") (:keywords "org" "completion")) "melpa"])
  (org-mac-iCal . [(20140107 519) nil "Imports events from iCal.app to the Emacs diary" single ((:keywords "outlines" "calendar")) "melpa"])
  (org-mac-link . [(20140323 125) nil "Grab links and url from various mac" single ((:keywords "org" "mac" "hyperlink")) "melpa"])
  (org-magit . [(20140517 809) ((magit (1 2 0)) (org (6 1))) "basic support for magit links" single ((:keywords "git" "magit" "outlines")) "melpa"])
  (org-mobile-sync . [(20131118 1116) ((emacs (24 3 50)) (org (8 0))) "automatically sync org-mobile on changes" single ((:url . "https://github.com/steckerhalter/org-mobile-sync") (:keywords "org-mode" "org" "mobile" "sync" "todo")) "melpa"])
  (org-octopress . [(20140106 1640) ((org (8 0)) (orglue (0 1)) (ctable (0 1 1))) "Compose octopress articles using org-mode." tar ((:keywords "org" "jekyll" "octopress" "blog")) "melpa"])
  (org-outlook . [(20121212 1458) nil "Outlook org" tar ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook")) "melpa"])
  (org-page . [(20140330 2032) ((ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0))) "a static site generator based on org mode" tar nil "melpa"])
  (org-pandoc . [(20130729 1850) nil "Export from Org using Pandoc" tar nil "melpa"])
  (org-pomodoro . [(20131117 35) ((alert (0 5 10))) "Pomodoro implementation for org-mode." tar nil "melpa"])
  (org-present . [(20140525 901) ((org (7))) "Minimalist presentation minor-mode for Emacs org-mode." single ((:url . "https://github.com/rlister/org-present")) "melpa"])
  (org-protocol-jekyll . [(20130810 1450) nil "Jekyll's handler for org-protocol" single nil "melpa"])
  (org-readme . [(20130508 705) ((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0))) "Integrates Readme.org and Commentary/Change-logs." tar ((:url . "https://github.com/mlf176f2/org-readme") (:keywords "header2" "readme.org" "emacswiki" "git")) "melpa"])
  (org-redmine . [(20140117 10) ((anything (0))) "Redmine tools using Emacs OrgMode" single ((:url . "https://github.com/gongo/org-redmine") (:keywords "redmine")) "melpa"])
  (org-repo-todo . [(20140205 641) nil "Simple repository todo management with org-mode" single ((:url . "https://github.com/waymondo/org-repo-todo") (:keywords "convenience")) "melpa"])
  (org-screenshot . [(20140503 1234) ((org (7))) "screenshots integrated with org attachment dirs" single ((:url . "https://github.com/dfeich/org-screenshot") (:keywords "org")) "melpa"])
  (org-toodledo . [(20140331 606) nil "Toodledo integration for Emacs Org mode" tar ((:keywords "outlines" "data")) "melpa"])
  (org-trello . [(20140518 2308) ((db (0 0 6)) (s (1 7 0)) (esxml (0 3 0)) (elnode (0 9 9 7 6)) (request (0 2 0)) (dash (2 5 0))) "Minor mode to synchronize org-mode buffer and trello board" tar nil "melpa"])
  (org2blog . [(20140529 147) ((org (8 1)) (xml-rpc (1 6 8)) (metaweblog (0 1))) "Blog from Org mode to wordpress" tar nil "melpa"])
  (organic-green-theme . [(20140528 633) nil "Low-contrast green color theme." single nil "melpa"])
  (orgbox . [(20140528 1826) ((org (8 0)) (cl-lib (0 5))) "Mailbox-like task scheduling Org." single ((:url . "https://github.com/yasuhito/orgbox") (:keywords "org")) "melpa"])
  (orglink . [(20140518 1652) ((dash (1 3 2)) (org (8 0))) "use Org Mode links in other modes" single ((:url . "http://github.com/tarsius/orglink") (:keywords "hypertext")) "melpa"])
  (orglue . [(20130912 1842) ((org (8 1)) (epic (0 1)) (org-mac-link (1 2))) "more functionality to org-mode." tar ((:keywords "org")) "melpa"])
  (osx-browse . [(20140508 1341) ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) "Web browsing helpers for OS X" single ((:url . "http://github.com/rolandwalker/osx-browse") (:keywords "hypermedia" "external")) "melpa"])
  (osx-location . [(20130907 133) nil "Watch and respond to changes in geographical location on OS X" tar nil "melpa"])
  (osx-plist . [(20101130 448) nil "Apple plist file parser" single ((:keywords "convenience")) "melpa"])
  (osx-pseudo-daemon . [(20131026 1730) nil "Daemon mode that plays nice with OSX." single ((:url . "https://github.com/DarwinAwardWinner/osx-pseudo-daemon") (:keywords "convenience" "osx")) "melpa"])
  (otter-mode . [(20121202 903) nil "Major mode for source files of the Otter automated theorem prover" single ((:url . "https://github.com/scvalex/script-fu/blob/master/otter-mode.el")) "melpa"])
  (outline-magic . [(20130813 1333) nil "outline mode extensions for Emacs" single ((:keywords "outlines")) "melpa"])
  (outlined-elisp-mode . [(20131108 327) nil "outline-minor-mode settings for emacs lisp" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (outorg . [(20140409 1544) nil "Org-style comment editing" single ((:url . "https://github.com/tj64/outorg")) "melpa"])
  (outshine . [(20140422 100) nil "outline with outshine outshines outline" single ((:url . "https://github.com/tj64/outshine")) "melpa"])
  (ov . [(20140512 1751) ((emacs (24 3))) "Overlay library for Emacs Lisp" single ((:url . "https://github.com/ShingoFukuyama/ov.el") (:keywords "overlay")) "melpa"])
  (owdriver . [(20140527 1039) ((smartrep (0 0 3)) (log4e (0 2 0)) (yaxception (0 2 0))) "Quickly perform various actions on other windows" single ((:url . "https://github.com/aki2o/owdriver") (:keywords "convenience")) "melpa"])
  (ox-asciidoc . [(20140215 610) ((org (8 1))) "AsciiDoc Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-asciidoc") (:keywords "org" "asciidoc")) "melpa"])
  (ox-html5slide . [(20131227 2206) ((org (8 0))) "Export org-mode to HTML5 slide." single ((:url . "http://github.com/coldnew/org-html5slide") (:keywords "html" "presentation")) "melpa"])
  (ox-pukiwiki . [(20140215 609) ((org (8 1))) "Pukiwiki Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-pukiwiki") (:keywords "org" "pukiwiki")) "melpa"])
  (ox-reveal . [(20140409 929) ((org (8 0))) "reveal.js Presentation Back-End for Org Export Engine" single ((:keywords "outlines" "hypermedia" "slideshow" "presentation")) "melpa"])
  (ox-textile . [(20140215 607) ((org (8 1))) "Textile Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-textile") (:keywords "org" "textile")) "melpa"])
  (ox-tiddly . [(20131124 804) ((org (8))) "org TiddlyWiki exporter" single ((:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org")) "melpa"])
  (ox-twiki . [(20140120 2239) ((org (8))) "org Twiki and Foswiki export" single ((:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org")) "melpa"])
  (p4 . [(20140517 1038) nil "Simple Perforce-Emacs Integration" single ((:url . "https://github.com/gareth-rees/p4.el")) "melpa"])
  (pabbrev . [(20130923 1257) nil "Predictive abbreviation expansion" single nil "melpa"])
  (package+ . [(20140504 325) nil "Extensions for the package library." single ((:url . "TBA") (:keywords "extensions" "tools")) "melpa"])
  (package-build . [(20140517 453) ((cl-lib (0 2))) "Tools for assembling a package archive" tar ((:keywords "tools")) "melpa"])
  (package-filter . [(20140105 1426) nil "special handling for package.el" single ((:url . "https://github.com/milkypostman/package-filter")) "melpa"])
  (packed . [(20140311 1357) ((cl-lib (0 2)) (magit (1 1 1))) "Package manager agnostic Emacs Lisp package utilities" tar nil "melpa"])
  (page-break-lines . [(20140128 1017) nil "Display ugly ^L page breaks as tidy horizontal lines" single ((:url . "https://github.com/purcell/page-break-lines") (:keywords "convenience" "faces")) "melpa"])
  (pager . [(20100330 1131) nil "windows-scroll commands" single nil "melpa"])
  (pager-default-keybindings . [(20130719 1357) ((pager (1 0))) "Add the default keybindings suggested for pager.el" single ((:url . "http://github.com/nflath/pager-default-keybindings")) "melpa"])
  (palette . [(20131227 146) ((hexrgb (0))) "Color palette useful with RGB, HSV, and color names" single ((:url . "http://www.emacswiki.org/palette.el") (:keywords "color" "rgb" "hsv" "hexadecimal" "face" "frame")) "melpa"])
  (palimpsest . [(20130731 821) nil "Various deletion strategies when editing" single nil "melpa"])
  (pallet . [(20140430 1234) ((cask (0 6))) "A package management tool for Emacs, using Cask." tar nil "melpa"])
  (pandoc-mode . [(20140512 1207) nil "Minor mode for interacting with Pandoc" tar ((:keywords "text" "pandoc")) "melpa"])
  (pangu-spacing . [(20140427 803) nil "Minor-mode to add space between Chinese and English characters." single ((:url . "http://github.com/coldnew/pangu-spacing")) "melpa"])
  (paradox . [(20140515 553) ((emacs (24 1)) (tabulated-list (1 0)) (package (1 0)) (dash (2 6 0)) (cl-lib (1 0)) (json (1 3))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar ((:url . "http://github.com/Bruce-Connor/paradox") (:keywords "package" "packages" "mode-line")) "melpa"])
  (paredit . [(20140128 1248) nil "minor mode for editing parentheses" single ((:keywords "lisp")) "melpa"])
  (paredit-everywhere . [(20140524 404) ((paredit (22))) "Enable some paredit features in non-lisp buffers" single ((:keywords "languages" "convenience")) "melpa"])
  (paredit-menu . [(20130923 1254) nil "Adds a menu to paredit.el as memory aid" single ((:keywords "paredit")) "melpa"])
  (paren-face . [(20140309 1759) nil "a face for parentheses in lisp modes" single ((:url . "http://github.com/tarsius/paren-face")) "melpa"])
  (parenface . [(20140322 1823) nil "Provide a face for parens in lispy modes." tar nil "melpa"])
  (parse-csv . [(20140203 116) nil "Parse strings with CSV fields into s-expressions" single ((:url . "https://github.com/mrc/el-csv") (:keywords "csv")) "melpa"])
  (password-store . [(20140507 1555) ((dash (1 5 0)) (f (0 11 0)) (s (1 9 0))) "Password store (pass) support" single ((:keywords "pass")) "melpa"])
  (password-vault . [(20131105 1703) ((cl-lib (0 2)) (emacs (24))) "A Password manager for Emacs." single ((:url . "http://github.com/PuercoPop/password-vault.el") (:keywords "password" "productivity")) "melpa"])
  (paste-kde . [(20140108 1809) ((web (0 3 6))) "paste text to KDE's pastebin service" single ((:keywords "comm" "convenience" "tools")) "melpa"])
  (pastebin . [(20101125 1955) nil "A simple interface to the www.pastebin.com webservice" single nil "melpa"])
  (pastehub . [(20140311 535) nil "A client for the PasteHub cloud service" single ((:url . "https://github.com/kiyoka/pastehub")) "melpa"])
  (pastels-on-dark-theme . [(20120304 1022) nil "Pastels on Dark theme for Emacs 24" single ((:url . "http://gist.github.com/1906662") (:keywords "theme" "color")) "melpa"])
  (path-headerline-mode . [(20140423 632) nil "Displaying file path on headerline." single ((:url . "https://github.com/7696122/path-headerline-mode") (:keywords "headerline")) "melpa"])
  (pcache . [(20131201 1159) ((eieio (1 3))) "persistent caching for Emacs" single nil "melpa"])
  (pcmpl-args . [(20120911 2224) nil "Enhanced shell command completion" single ((:url . "https://github.com/JonWaltman/pcmpl-args.el") (:keywords "abbrev" "completion" "convenience" "processes" "terminals" "unix")) "melpa"])
  (pcmpl-git . [(20140218 1804) nil "pcomplete for git" tar ((:keywords "tools")) "melpa"])
  (pcomplete-extension . [(20140412 2155) ((emacs (24)) (cl-lib (0 5))) "additional completion for pcomplete" single ((:url . "https://github.com/thierryvolpiatto/pcomplete-extension")) "melpa"])
  (pcre2el . [(20140506 1121) ((cl-lib (0 3))) "parse, convert, and font-lock PCRE, Emacs and rx regexps" single ((:url . "https://github.com/joddie/pcre2el")) "melpa"])
  (pcsv . [(20131110 750) nil "Parser of csv" single ((:url . "https://github.com/mhayashi1120/Emacs-pcsv/raw/master/pcsv.el") (:keywords "data")) "melpa"])
  (peek-mode . [(20130620 1246) ((elnode (0 9 8 1))) "Serve buffers live over HTTP with elnode backend" tar ((:url . "https://github.com/erikriverson/peek-mode")) "melpa"])
  (peep-dired . [(20140515 1016) nil "Peep at files in another window from dired buffers" single ((:keywords "files" "convenience")) "melpa"])
  (peg . [(20130320 158) nil "Parsing Expression Grammars in Emacs Lisp" single nil "melpa"])
  (perl-completion . [(20090527 2336) nil "No description available." single nil "melpa"])
  (perlbrew . [(20130127 324) nil "A perlbrew wrapper for Emacs" single ((:keywords "emacs" "perl")) "melpa"])
  (persistent-soft . [(20140508 1341) ((pcache (0 2 3)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single ((:url . "http://github.com/rolandwalker/persistent-soft") (:keywords "data" "extensions")) "melpa"])
  (persp-mode . [(20140419 502) ((workgroups (0 2 0))) "\"perspectives\" + save/load + shared among frames - bugs." single ((:url . "https://github.com/Bad-ptr/persp-mode.el") (:keywords "perspectives" "session")) "melpa"])
  (persp-projectile . [(20140527 405) ((perspective (1 9)) (projectile (0 11 0)) (cl-lib (0 3))) "Perspective integration with Projectile" single ((:keywords "project" "convenience")) "melpa"])
  (perspective . [(20131004 1658) nil "switch between named \"perspectives\" of the editor" single ((:url . "http://github.com/nex3/perspective-el") (:keywords "workspace" "convenience" "frames")) "melpa"])
  (pg . [(20130731 1442) nil "Emacs Lisp interface to the PostgreSQL RDBMS" single ((:keywords "data" "comm" "database" "postgresql")) "melpa"])
  (pgdevenv . [(20130527 257) nil "Manage your PostgreSQL development envs" tar ((:keywords "emacs" "postgresql" "development" "environment" "shell" "debug" "gdb")) "melpa"])
  (ph . [(20130312 1137) ((emacs (24 3))) "A global minor mode for managing multiple projects." tar nil "melpa"])
  (phi-autopair . [(20140224 654) ((paredit (20))) "another simple-minded autopair implementation" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-rectangle . [(20140216 2248) nil "another rectangle-mark command (rewrite of rect-mark)" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-search . [(20140321 804) nil "another incremental search command, compatible with \"multiple-cursors\"" tar ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-search-mc . [(20131010 358) ((phi-search (2 0 0)) (multiple-cursors (1 2 1))) "multiple-cursors extension for phi-search" single ((:url . "https://github.com/knu/phi-search-mc.el") (:keywords "search" "cursors")) "melpa"])
  (phoenix-dark-mono-theme . [(20130306 1215) nil "Monochromatic version of the Phoenix theme" single ((:url . "http://github.com/j0ni/phoenix-dark-mono")) "melpa"])
  (phoenix-dark-pink-theme . [(20140528 2022) nil "Port of the Sublime Text 2 theme of the same name" single ((:url . "http://github.com/j0ni/phoenix-dark-pink")) "melpa"])
  (php+-mode . [(20121129 1252) nil "A better PHP mode with Zend Framework 1 support." tar nil "melpa"])
  (php-auto-yasnippets . [(20140515 2052) ((php-mode (1 11)) (yasnippet (0 8 0))) "Creates snippets for PHP functions" tar ((:url . "https://github.com/ejmr/php-auto-yasnippets")) "melpa"])
  (php-boris . [(20130527 121) nil "Run boris php REPL" single ((:keywords "php" "commint" "repl" "boris")) "melpa"])
  (php-boris-minor-mode . [(20140209 1035) ((php-boris (0 0 1)) (highlight (0))) "a minor mode to evaluate PHP code in the Boris repl" single ((:url . "https://github.com/steckerhalter/php-boris-minor-mode") (:keywords "php" "repl" "eval")) "melpa"])
  (php-eldoc . [(20140202 1141) nil "eldoc backend for php" tar ((:url . "https://github.com/sabof/php-eldoc")) "melpa"])
  (php-mode . [(20140523 1947) nil "Major mode for editing PHP code" single ((:url . "https://github.com/ejmr/php-mode")) "melpa"])
  (phpunit . [(20140505 352) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5))) "Launch PHP unit tests using phpunit" single ((:url . "https://github.com/nlamirault/phpunit.el") (:keywords "php" "tests" "phpunit")) "melpa"])
  (pianobar . [(20120128 1301) nil "thin wrapper for Pianobar, a Pandora Radio client" single ((:url . "http://github.com/agrif/pianobar.el")) "melpa"])
  (pig-mode . [(20140529 1109) nil "Major mode for Pig files" single nil "melpa"])
  (pig-snippets . [(20130912 2324) ((yasnippet (0 8 0))) "Snippets for pig-mode" tar nil "melpa"])
  (pillar . [(20140207 612) ((makey (0 3))) "Major mode for editing Pillar files" single ((:url . "http://github.com/DamienCassou/pillar-mode") (:keywords "markup" "major-mode")) "melpa"])
  (pinboard-api . [(20140324 448) nil "Rudimentary http://pinboard.in integration" single ((:url . "https://github.com/danieroux/pinboard-api-el") (:keywords "pinboard" "www")) "melpa"])
  (pinot . [(20140211 1226) nil "Emacs interface to pinot-search" tar nil "melpa"])
  (pivotal-tracker . [(20140213 506) nil "Interact with Pivotal Tracker through its API" single ((:url . "http://github.com/jxa/pivotal-tracker")) "melpa"])
  (pkg-info . [(20140405 50) ((epl (0 4))) "Information about packages" single ((:url . "https://github.com/lunaryorn/pkg-info.el") (:keywords "convenience")) "melpa"])
  (pkgbuild-mode . [(20140331 946) nil "Interface to the ArchLinux package manager" single nil "melpa"])
  (planet-theme . [(20140328 630) ((emacs (24))) "A dark theme inspired by Gmail's 'Planets' theme of yore" single ((:url . "https://github.com/cmack/emacs-planet-theme") (:keywords "themes")) "melpa"])
  (plantuml-mode . [(20131031 1632) ((auto-complete (1 4))) "Major mode for plantuml" single ((:url . "https://github.com/wildsoul/plantuml-mode") (:keywords "uml" "ascii")) "melpa"])
  (plenv . [(20130706 2316) nil "A plenv wrapper for Emacs" single ((:keywords "emacs" "perl")) "melpa"])
  (plsense . [(20140519 1058) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 2 0))) "provide interface for PlSense that is a development tool for Perl." single ((:url . "https://github.com/aki2o/emacs-plsense") (:keywords "perl" "completion")) "melpa"])
  (plsense-direx . [(20140520 1308) ((direx (0 1 -3)) (plsense (0 3 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perl Package Explorer" single ((:url . "https://github.com/aki2o/plsense-direx") (:keywords "perl" "convenience")) "melpa"])
  (point-stack . [(20140102 1223) nil "A forward/back stack for point" single nil "melpa"])
  (point-undo . [(20100504 829) nil "undo/redo position" single nil "melpa"])
  (pointback . [(20100210 752) nil "Restore window points when returning to buffers" single ((:keywords "convenience")) "melpa"])
  (polymode . [(20140524 208) ((emacs (24))) "Versatile multiple modes with extensive literate programming support" tar ((:url . "https://github.com/vitoshka/polymode") (:keywords "emacs")) "melpa"])
  (pomodoro . [(20140318 1049) nil "A timer for the Pomodoro Technique" single nil "melpa"])
  (pony-mode . [(20140528 609) nil "Minor mode for working with Django Projects" tar nil "melpa"])
  (pophint . [(20140523 1728) ((popup (0 5 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide navigation using pop-up tips, like Firefox's Vimperator Hint Mode" tar ((:url . "https://github.com/aki2o/emacs-pophint") (:keywords "popup")) "melpa"])
  (popup . [(20140207 1702) ((cl-lib (0 3))) "Visual Popup User Interface" single ((:keywords "lisp")) "melpa"])
  (popup-kill-ring . [(20131020 1154) ((popup (0 4)) (pos-tip (0 4))) "interactively insert item from kill-ring" single ((:url . "https://github.com/waymondo/popup-kill-ring") (:keywords "popup" "kill-ring" "pos-tip")) "melpa"])
  (popup-switcher . [(20140503 1201) ((popup (0 5 0))) "switch to other buffers and files via popup." single ((:url . "https://github.com/kostafey/popup-switcher") (:keywords "popup" "switch" "buffers" "functions")) "melpa"])
  (popwin . [(20140508 508) nil "Popup Window Manager." single ((:keywords "convenience")) "melpa"])
  (portage-navi . [(20140202 2156) ((concurrent (0 3 1)) (ctable (0 1 2))) "portage viewer" single ((:url . "https://github.com/kiwanami/emacs-portage-navi") (:keywords "tools" "gentoo")) "melpa"])
  (pos-tip . [(20121128 615) nil "Show tooltip at point" single ((:keywords "tooltip")) "melpa"])
  (pov-mode . [(20120825 716) nil "Major mode for editing POV-Ray scene files." tar nil "melpa"])
  (pow . [(20140420 106) ((emacs (24)) (cl-lib (0 5))) "pow (http://pow.cx/) manager for emacs" tar ((:url . "http://github.com/yukihr/emacs-pow") (:keywords "develop" "web" "pow")) "melpa"])
  (powerline . [(20140516 2128) ((cl-lib (0 2))) "Rewrite of Powerline" tar ((:url . "http://github.com/milkypostman/powerline/") (:keywords "mode-line")) "melpa"])
  (powerline-evil . [(20140517 1) ((evil (1 0 8)) (powerline (2 3))) "Utilities for better Evil support for Powerline" tar ((:url . "http://github.com/raugturi/powerline-evil/") (:keywords "evil" "mode-line" "powerline")) "melpa"])
  (powershell . [(20130824 1206) nil "run powershell as an inferior shell in emacs" single ((:url . "http://www.emacswiki.org/emacs/PowerShell#toc3") (:keywords "powershell" "shell" "ms-windows")) "melpa"])
  (powershell-mode . [(20100203 258) nil "Mode for editing Powershell scripts" single ((:keywords "powershell" "monad" "msh")) "melpa"])
  (pp+ . [(20131227 147) nil "Extensions to `pp.el'." single ((:url . "http://www.emacswiki.org/pp%2b.el") (:keywords "lisp")) "melpa"])
  (pp-c-l . [(20131227 147) nil "Display Control-l characters in a pretty way" single ((:url . "http://www.emacswiki.org/pp-c-l.el") (:keywords "display" "convenience" "faces")) "melpa"])
  (pretty-lambdada . [(20131227 148) nil "Show the word `lambda' as the Greek letter." single ((:url . "http://www.emacswiki.org/pretty-lambdada.el") (:keywords "convenience" "display")) "melpa"])
  (pretty-mode . [(20140217 1123) nil "Redisplay parts of the buffer as pretty symbols." single ((:url . "https://github.com/akatov/pretty-mode") (:keywords "pretty" "unicode" "symbols")) "melpa"])
  (pretty-symbols . [(20131125 26) nil "Draw tokens as Unicode glyphs." single ((:url . "http://github.com/drothlis/pretty-symbols") (:keywords "faces")) "melpa"])
  (proc-net . [(20130321 1712) nil "network process tools" single ((:url . "http://github.com/nicferrier/emacs-procnet") (:keywords "processes")) "melpa"])
  (processing-mode . [(20130912 1336) nil "Major mode for Processing 2.0" single ((:url . "https://github.com/ptrv/processing2-emacs") (:keywords "languages" "snippets")) "melpa"])
  (processing-snippets . [(20140426 728) ((yasnippet (0 8 0))) "Snippets for processing-mode" tar nil "melpa"])
  (prodigy . [(20140511 2328) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single ((:url . "http://github.com/rejeep/prodigy.el")) "melpa"])
  (prognth . [(20130920 1059) nil "Extend prog1 to arbitrary index" single ((:keywords "lisp")) "melpa"])
  (project-explorer . [(20140411 605) ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) "A project explorer sidebar" single ((:url . "https://github.com/sabof/project-explorer")) "melpa"])
  (project-local-variables . [(20080502 1652) nil "Set project-local variables from a file." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ProjectLocalVariables") (:keywords "project" "convenience")) "melpa"])
  (project-persist . [(20131030 1208) nil "A minor mode to allow loading and saving of project settings." tar nil "melpa"])
  (projectile . [(20140527 405) ((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single ((:url . "https://github.com/bbatsov/projectile") (:keywords "project" "convenience")) "melpa"])
  (projectile-rails . [(20140526 133) ((projectile (1 0 0 -3)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0))) "Minor mode for Rails projects based on projectile-mode" single ((:url . "https://github.com/asok/projectile-rails") (:keywords "rails" "projectile")) "melpa"])
  (projector . [(20131121 804) ((alert (1 1))) "Lightweight library for managing project/repository-aware shell and command buffers" single ((:url . "https://github.com/waymondo/projector")) "melpa"])
  (projekt . [(20140424 333) ((emacs (24))) "some kind of staging for CVS" single nil "melpa"])
  (projmake-mode . [(20140401 1811) nil "Project oriented automatic builder and error
highlighter, flymake for projects" tar nil "melpa"])
  (prosjekt . [(20140512 525) nil "a software project tool for emacs" tar ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (protobuf-mode . [(20091217 1755) nil "major mode for editing protocol buffers." single ((:keywords "google" "protobuf" "languages")) "melpa"])
  (psession . [(20140412 2157) ((emacs (24)) (cl-lib (0 5))) "Persistent save of elisp objects." single ((:url . "https://github.com/thierryvolpiatto/psession")) "melpa"])
  (psvn . [(20120401 1440) nil "Subversion interface for emacs" single nil "melpa"])
  (pt . [(20140529 713) nil "A front-end for pt, The Platinum Searcher." single ((:url . "https://github.com/bling/pt.el") (:keywords "pt" "ack" "ag" "grep" "search")) "melpa"])
  (pungi . [(20140313 343) ((jedi (20140310 2333))) "Integrates jedi with virtualenv and buildout python environments" single ((:keywords "convenience")) "melpa"])
  (puppet-mode . [(20140428 159) ((emacs (24 1)) (pkg-info (0 4))) "Major mode for Puppet manifests" single ((:url . "https://github.com/lunaryorn/puppet-mode") (:keywords "languages")) "melpa"])
  (puppetfile-mode . [(20131017 833) nil "Syntax highlighting for Puppetfiles" single nil "melpa"])
  (purty-mode . [(20131004 1559) nil "Safely pretty-print greek letters, mathematical symbols, or anything else." single nil "melpa"])
  (pushbullet . [(20140528 1108) ((grapnel (0 5 2)) (json (1 2)) (ht (2 0))) "Emacs client for the PushBullet Android app" single ((:url . "http://www.github.com/theanalyst/pushbullet.el") (:keywords "convenience")) "melpa"])
  (py-autopep8 . [(20140528 1138) nil "Use autopep8 to beautify a Python buffer" single ((:url . "http://paetzke.me/project/py-autopep8.el")) "melpa"])
  (py-gnitset . [(20140224 2010) nil "Run your Python tests any way you'd like" single ((:url . "https://www.github.com/quodlibetor/py-gnitset")) "melpa"])
  (py-import-check . [(20130802 411) nil "Finds the unused python imports using importchecker" single ((:url . "https://github.com/psibi/emacs-py-import-check") (:keywords "python" "import" "check")) "melpa"])
  (py-isort . [(20140528 1119) nil "Use isort to sort the imports in a Python buffer" single ((:url . "http://paetzke.me/project/py-isort.el")) "melpa"])
  (pydoc-info . [(20110301 34) nil "Better Python support for info-lookup-symbol." tar nil "melpa"])
  (pyenv-mode . [(20140315 1230) nil "Integrate pyenv with python-mode" single ((:url . "https://github.com/proofit404/pyenv-mode")) "melpa"])
  (pylint . [(20121112 435) nil "minor mode for running `pylint'" single ((:keywords "languages" "python")) "melpa"])
  (python-cell . [(20131029 1616) nil "Support for MATLAB-like cells in python mode" single ((:keywords "python" "matlab" "cell")) "melpa"])
  (python-django . [(20131214 1841) nil "A Jazzy package for managing Django projects" single ((:url . "https://github.com/fgallina/python-django.el") (:keywords "languages")) "melpa"])
  (python-environment . [(20140321 1116) ((deferred (0 3 1))) "virtualenv API for Emacs Lisp" tar ((:keywords "applications" "tools")) "melpa"])
  (python-info . [(20130916 620) nil "Python info manual for Emacs" tar nil "melpa"])
  (python-magic . [(20120505 1355) nil "outline mode extension for python mode" single ((:keywords "outlines" "languages")) "melpa"])
  (pyvenv . [(20140529 1515) nil "Python virtual environment interface" single ((:url . "http://github.com/jorgenschaefer/pyvenv")) "melpa"])
  (qiita . [(20140118 44) ((helm (1 5 9)) (markdown-mode (2 0))) "Qiita API Library for emacs" single ((:url . "https://github.com/gongo/qiita-el") (:keywords "qiita")) "melpa"])
  (qml-mode . [(20130417 744) nil "Major mode for editing QT Declarative (QML) code." single ((:url . "https://github.com/coldnew/qml-mode") (:keywords "qml" "qt" "qt declarative")) "melpa"])
  (quick-buffer-switch . [(20140324 1935) nil "Quick switch to file or dir buffers." single ((:keywords "emacs" "configuration")) "melpa"])
  (quickref . [(20130113 1500) ((dash (1 0 3)) (s (1 0 0))) "Display relevant notes-to-self in the echo area" single ((:url . "https://github.com/pd/quickref.el")) "melpa"])
  (quickrun . [(20140503 103) nil "Run commands quickly" single ((:url . "https://github.com/syohex/emacs-quickrun")) "melpa"])
  (r-autoyas . [(20140101 710) ((ess (0)) (yasnippet (0 8 0))) "Provides automatically created yasnippets for R function argument lists." tar ((:url . "https://github.com/mlf176f2/r-autoyas.el") (:keywords "r" "yasnippet")) "melpa"])
  (racket-mode . [(20140527 1420) nil "Major mode for Racket language." tar ((:url . "https://github.com/greghendershott/racket-mode")) "melpa"])
  (railgun . [(20121016 2257) nil "No description available." single nil "melpa"])
  (rails-log-mode . [(20140407 2125) nil "Major mode for viewing Rails log files" single ((:keywords "rails" "log")) "melpa"])
  (rainbow-blocks . [(20140306 1033) nil "Block syntax highlighting for lisp code" single ((:url . "https://github.com/istib/rainbow-blocks")) "melpa"])
  (rainbow-delimiters . [(20140329 934) nil "Highlight nested parens, brackets, braces a different color at each depth." single ((:url . "http://github.com/jlr/rainbow-delimiters/raw/master/rainbow-delimiters.el") (:keywords "faces" "convenience" "lisp" "matching" "tools" "rainbow" "rainbow parentheses" "rainbow parens")) "melpa"])
  (rainbow-identifiers . [(20140515 1015) ((emacs (24))) "Highlight identifiers according to their names" single ((:url . "https://github.com/Fanael/rainbow-identifiers")) "melpa"])
  (rase . [(20120928 1345) nil "Run At Sun Event daemon" single ((:url . "https://github.com/m00natic/rase/") (:keywords "solar" "sunrise" "sunset" "midday" "midnight")) "melpa"])
  (rbenv . [(20140318 424) nil "Emacs integration for rbenv" single ((:url . "https://github.com/senny/rbenv.el") (:keywords "ruby" "rbenv")) "melpa"])
  (rcirc-alert . [(20140110 929) nil "Configurable alert messages on top of RCIRC" tar ((:keywords "lisp" "rcirc" "irc" "alert" "awesome")) "melpa"])
  (rcirc-alertify . [(20140406 1819) ((alert (20140406 1353))) "Cross platform notifications for rcirc" single ((:keywords "comm" "convenience")) "melpa"])
  (rcirc-color . [(20140131 656) nil "color nicks" single ((:keywords "comm")) "melpa"])
  (rcirc-controls . [(20140305 100) nil "control sequences" single nil "melpa"])
  (rcirc-groups . [(20131223 404) nil "an emacs buffer in rcirc-groups major mode" single ((:url . "http://tapoueh.org/emacs/rcirc-groups.html") (:keywords "comm" "convenience")) "melpa"])
  (rcirc-notify . [(20130905 203) nil "libnotify popups" single ((:keywords "lisp" "rcirc" "irc" "notify" "growl")) "melpa"])
  (rdf-prefix . [(20140510 822) nil "Prefix lookup for RDF" single ((:keywords "convenience" "abbrev")) "melpa"])
  (rdp . [(20120928 1854) nil "Recursive Descent Parser library" single ((:url . "https://github.com/skeeto/rdp")) "melpa"])
  (react-snippets . [(20140120 1034) ((yasnippet (0 7 0))) "Yasnippets for React" tar nil "melpa"])
  (readline-complete . [(20140215 620) nil "offers completions in shell mode" single nil "melpa"])
  (realgud . [(20140512 220) ((load-relative (20130410)) (loc-changes (20130723)) (test-simple (20130710))) "A modular front-end for interacting with external debuggers" tar ((:url . "http://github.com/rocky/emacs-dbgr")) "melpa"])
  (rebox2 . [(20121113 500) nil "Handling of comment boxes in various styles." single ((:url . "https://github.com/lewang/rebox2")) "melpa"])
  (recentf-ext . [(20130130 2150) nil "Recentf extensions" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/recentf-ext.el") (:keywords "convenience" "files")) "melpa"])
  (recompile-on-save . [(20140317 1333) ((dash (1 1 0))) "Trigger recompilation on file save." single ((:url . "https://github.com/maio/recompile-on-save.el") (:keywords "convenience" "files" "processes" "tools")) "melpa"])
  (rect+ . [(20140117 608) nil "Extensions to rect.el" single ((:url . "https://github.com/mhayashi1120/Emacs-rectplus/raw/master/rect+.el") (:keywords "extensions" "data" "tools")) "melpa"])
  (rectangle-utils . [(20140422 519) ((emacs (24)) (cl-lib (0 5))) "Some useful rectangle functions." single ((:url . "https://github.com/thierryvolpiatto/rectangle-utils")) "melpa"])
  (recursive-narrow . [(20111019 1608) nil "narrow-to-region that operates recursively" single ((:url . "http://github.com/nflath/recursive-narrow")) "melpa"])
  (redo+ . [(20131117 1151) nil "Redo/undo system for Emacs" single ((:keywords "lisp" "extensions")) "melpa"])
  (redshank . [(20120510 1230) nil "No description available." tar nil "melpa"])
  (refheap . [(20140413 1642) ((json (1 2))) "A library for pasting to https://refheap.com" single ((:url . "https://github.com/Raynes/refheap.el")) "melpa"])
  (regex-dsl . [(20100124 228) nil "lisp syntax for regexps" single nil "melpa"])
  (regex-tool . [(20131104 1434) nil "A regular expression evaluation tool for programmers" single ((:url . "http://www.newartisans.com/") (:keywords "regex" "languages" "programming" "development")) "melpa"])
  (region-bindings-mode . [(20140407 1514) nil "Enable custom bindings when mark is active." single ((:url . "https://github.com/fgallina/region-bindings-mode") (:keywords "convenience")) "melpa"])
  (relative-buffers . [(20140522 2246) ((cl-lib (0 5)) (dash (2 6 0)) (s (1 9 0)) (f (0 16 2))) "Emacs buffers naming convention" single ((:url . "https://github.com/proofit404/relative-buffers")) "melpa"])
  (relative-line-numbers . [(20140504 1217) ((emacs (24))) "Display relative line numbers on the margin" single ((:url . "https://github.com/Fanael/relative-line-numbers")) "melpa"])
  (relax . [(20131029 1434) ((json (1 2))) "For browsing and interacting with CouchDB" single ((:url . "http://github.com/technomancy/relax.el") (:keywords "database" "http")) "melpa"])
  (repl-toggle . [(20140501 531) ((fullframe (0 0 5))) "Switch to/from repl buffer for current major-mode" single ((:keywords "repl" "buffers" "toggle")) "melpa"])
  (replace+ . [(20140416 1604) nil "Extensions to `replace.el'." single ((:url . "http://www.emacswiki.org/replace%2b.el") (:keywords "matching" "help" "internal" "tools" "local")) "melpa"])
  (replace-from-region . [(20140526 2223) nil "Replace commands whose query is from region" single ((:url . "http://www.emacswiki.org/emacs/download/replace-from-region.el") (:keywords "replace" "search" "region")) "melpa"])
  (req-package . [(20140516 942) ((use-package (1 0)) (dash (2 6 0))) "A use-package wrapper for package runtime dependencies management" single ((:url . "https://github.com/edvorg/req-package") (:keywords "dotemacs" "startup" "speed" "config" "package")) "melpa"])
  (request . [(20140316 417) nil "Compatible layer for URL request in Emacs" single nil "melpa"])
  (request-deferred . [(20130526 1015) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" single nil "melpa"])
  (requirejs-mode . [(20130215 1304) nil "Improved AMD module management" single ((:keywords "javascript" "amd" "requirejs")) "melpa"])
  (restclient . [(20140115 635) nil "An interactive HTTP client for Emacs" tar ((:keywords "http")) "melpa"])
  (reveal-in-finder . [(20140502 1745) nil "Reveal file associated with buffer in OS X Finder" single ((:url . "https://github.com/kaz-yos/elisp") (:keywords "os x" "finder")) "melpa"])
  (reverse-theme . [(20130402 312) nil "Reverse theme for Emacs" single ((:url . "https://github.com/syohex/emacs-reverse-theme")) "melpa"])
  (review-mode . [(20140329 2026) nil "major mode for ReVIEW" single ((:url . "https://github.com/kmuto/review-el")) "melpa"])
  (revive . [(20121022 411) nil "Resume Emacs" single nil "melpa"])
  (rfringe . [(20110405 1520) nil "display the relative location of the region, in the fringe." single ((:url . "http://www.emacswiki.org/emacs/rfringe.el") (:keywords "fringe" "bitmap")) "melpa"])
  (rhtml-mode . [(20130422 611) nil "major mode for editing RHTML files" tar nil "melpa"])
  (rinari . [(20140523 440) ((ruby-mode (1 0)) (inf-ruby (2 2 5)) (ruby-compilation (0 16)) (jump (2 0))) "Rinari Is Not A Rails IDE" single ((:url . "https://github.com/eschulte/rinari") (:keywords "ruby" "rails" "project" "convenience" "web")) "melpa"])
  (rings . [(20140102 1536) nil "Buffer rings. Like tabs, but better." single ((:url . "http://github.com/konr/rings") (:keywords "utilities" "productivity")) "melpa"])
  (rnc-mode . [(20121227 1502) nil "A major mode for editing RELAX NG Compact syntax." single nil "melpa"])
  (robe . [(20140401 1339) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar ((:url . "https://github.com/dgutov/robe") (:keywords "ruby" "convenience" "rails")) "melpa"])
  (roguel-ike . [(20140227 729) ((popup (0 5 0))) "A coffee-break roguelike" tar nil "melpa"])
  (rotate . [(20140123 116) nil "Rotate the layout of emacs" single ((:url . "https://github.com/daic-h/emacs-rotate") (:keywords "window" "layout")) "melpa"])
  (roy-mode . [(20121208 358) nil "Roy major mode" single ((:url . "https://github.com/folone/roy-mode") (:keywords "extensions")) "melpa"])
  (rpm-spec-mode . [(20140120 50) nil "RPM spec file editing commands for Emacs/XEmacs" single ((:keywords "unix" "languages")) "melpa"])
  (rsense . [(20100510 2105) nil "RSense client for Emacs" single ((:keywords "convenience")) "melpa"])
  (rspec-mode . [(20140417 708) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar ((:url . "http://github.com/pezra/rspec-mode") (:keywords "rspec" "ruby")) "melpa"])
  (rtags . [(20140518 1114) nil "No description available." tar nil "melpa"])
  (rubocop . [(20131101 1142) ((dash (1 0 0))) "An Emacs interface for RuboCop" single ((:url . "https://github.com/bbatsov/rubocop-emacs") (:keywords "project" "convenience")) "melpa"])
  (ruby-additional . [(20140422 1903) ((emacs (24 3)) (ruby-mode (1 2))) "ruby-mode extensions yet to be merged into Emacs" tar ((:url . "http://svn.ruby-lang.org/cgi-bin/viewvc.cgi/trunk/misc/") (:keywords "ruby" "languages")) "melpa"])
  (ruby-block . [(20131211 331) nil "highlight matching block" single ((:keywords "languages" "faces" "ruby")) "melpa"])
  (ruby-compilation . [(20140508 246) ((inf-ruby (2 2 1))) "run a ruby process in a compilation buffer" single ((:url . "https://github.com/eschulte/rinari") (:keywords "test" "convenience")) "melpa"])
  (ruby-dev . [(20130811 151) nil "Interactive developement environment for Ruby." tar nil "melpa"])
  (ruby-electric . [(20131217 33) nil "Minor mode for electrically editing ruby code" single ((:url . "https://github.com/knu/ruby-electric.el") (:keywords "languages" "ruby")) "melpa"])
  (ruby-end . [(20131016 37) nil "Automatic insertion of end blocks for Ruby" single ((:url . "http://github.com/rejeep/ruby-end") (:keywords "speed" "convenience" "ruby")) "melpa"])
  (ruby-hash-syntax . [(20131113 1032) nil "Toggle ruby hash syntax between classic and 1.9 styles" single ((:url . "https://github.com/purcell/ruby-hash-syntax") (:keywords "languages")) "melpa"])
  (ruby-interpolation . [(20131112 852) nil "Ruby string interpolation helpers" single ((:url . "http://github.com/leoc/ruby-interpolation.el")) "melpa"])
  (ruby-refactor . [(20140104 1354) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." single ((:url . "https://github.com/ajvargo/ruby-refactor") (:keywords "refactor" "ruby")) "melpa"])
  (ruby-test-mode . [(20140410 1036) ((ruby-mode (1 0))) "Minor mode for Behaviour and Test Driven" single ((:keywords "ruby" "unit" "test" "rspec")) "melpa"])
  (ruby-tools . [(20140113 45) nil "Collection of handy functions for ruby-mode." tar nil "melpa"])
  (runner . [(20140106 758) nil "Improved \"open with\" suggestions for dired" single ((:url . "https://github.com/thamer/runner") (:keywords "shell command" "dired" "file extension" "open with")) "melpa"])
  (rust-mode . [(20140512 2145) nil "A major emacs mode for editing Rust source code" single ((:url . "https://github.com/mozilla/rust") (:keywords "languages")) "melpa"])
  (rvm . [(20140505 2342) nil "Emacs integration for rvm" single ((:url . "http://www.emacswiki.org/emacs/RvmEl") (:keywords "ruby" "rvm")) "melpa"])
  (s . [(20131223 944) nil "The long lost Emacs string manipulation library." single ((:keywords "strings")) "melpa"])
  (s-buffer . [(20130605 1424) ((s (1 6 0)) (noflet (0 0 3))) "s operations for buffers" single ((:url . "http://github.com/nicferrier/emacs-s-buffer") (:keywords "lisp")) "melpa"])
  (sackspace . [(20130719 256) nil "A better backspace" single ((:url . "http://github.com/cofi/sackspace.el") (:keywords "delete" "convenience")) "melpa"])
  (sass-mode . [(20140418 1208) ((haml-mode (3 0 15))) "Major mode for editing Sass files" single ((:url . "http://github.com/nex3/haml/tree/master") (:keywords "markup" "language" "css")) "melpa"])
  (sauron . [(20130818 1134) nil "Track (erc/org/dbus/...) events and react to them." tar nil "melpa"])
  (save-load-path . [(20131228 1952) nil "save load-path and reuse it to test" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/save-load-path.el") (:keywords "lisp")) "melpa"])
  (save-sexp . [(20130106 642) nil "save variables in files using setter forms like `setq'" tar ((:url . "https://github.com/tarsius/save-sexp") (:keywords "convenience")) "melpa"])
  (save-visited-files . [(20131224 1528) nil "save opened files across sessions" single ((:url . "http://github.com/nflath/save-visited-files")) "melpa"])
  (savekill . [(20140418 234) nil "Save kill ring to disk" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/savekill.el") (:keywords "tools")) "melpa"])
  (sbt-mode . [(20140514 1255) ((scala-mode2 (0 22))) "Major mode for sbt >= 0.12 with scala >= 2.9" tar nil "melpa"])
  (scala-mode . [(20140310 735) nil "Major mode for editing Scala code." tar ((:keywords "scala" "languages" "oop")) "melpa"])
  (scala-mode2 . [(20140502 125) nil "Major mode for editing Scala >= 2.9" tar nil "melpa"])
  (scf-mode . [(20111202 707) nil "shorten file-names in compilation type buffers" single ((:url . "https://github.com/lewang/scf-mode") (:keywords "compilation")) "melpa"])
  (scheme-complete . [(20130220 403) nil "Smart tab completion for Scheme in Emacs" single nil "melpa"])
  (scheme-here . [(20131105 338) nil "cmuscheme extension for multiple inferior processes" single ((:url . "https://github.com/zhaov/scheme-here") (:keywords "scheme")) "melpa"])
  (scion . [(20130315 555) nil "Haskell Minor Mode for Interacting with the Scion Library" single ((:url . "https://code.google.com/p/scion-lib/")) "melpa"])
  (sclang-extensions . [(20131117 1439) ((auto-complete (1 4 0)) (s (1 3 1)) (dash (1 2 0)) (emacs (24 1))) "Extensions for the SuperCollider Emacs mode." tar ((:keywords "sclang" "supercollider" "languages" "tools")) "melpa"])
  (sclang-snippets . [(20130513 51) ((yasnippet (0 8 0))) "Snippets for the SuperCollider Emacs mode" tar ((:keywords "snippets" "version" "1.0.0")) "melpa"])
  (scpaste . [(20110617 1856) ((htmlfontify (0 21))) "Paste to the web via scp." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/SCPaste") (:keywords "convenience" "hypermedia")) "melpa"])
  (scratch . [(20120830 1028) nil "Mode-specific scratch buffers" tar ((:keywords "editing")) "melpa"])
  (scratch-ext . [(20140103 2116) nil "Extensions for *scratch*" single ((:url . "https://github.com/kyanagi/scratch-ext-el")) "melpa"])
  (scratch-log . [(20120130 1521) nil "Utility for *scratch* buffer." single nil "melpa"])
  (scratch-palette . [(20131108 329) nil "save scratch notes on each file" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (scratch-pop . [(20131108 330) nil "popup \"scratch\"es" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (screenshot . [(20120509 1105) nil "Take a screenshot in Emacs" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/screenshot.el") (:keywords "images" "hypermedia")) "melpa"])
  (scss-mode . [(20130105 1411) nil "Major mode for editing SCSS files" single ((:url . "https://github.com/antonj/scss-mode") (:keywords "scss" "css" "mode")) "melpa"])
  (seclusion-mode . [(20121118 1553) nil "Edit in seclusion. A Dark Room mode." single ((:url . "http://github.com/dleslie/seclusion-mode")) "melpa"])
  (second-sel . [(20131227 151) nil "Secondary selection commands" single ((:url . "http://www.emacswiki.org/second-sel.el") (:keywords "region" "selection" "yank" "paste" "edit")) "melpa"])
  (sensitive . [(20131015 635) ((emacs (24)) (sequences (0 1 0))) "A dead simple way to load sensitive information" single ((:keywords "convenience")) "melpa"])
  (sentence-highlight . [(20121026 1450) nil "highlight the current sentence" single ((:keywords "plain text" "writing" "highlight" "editing" "focus")) "melpa"])
  (sequences . [(20130908 1122) ((emacs (24))) "Ports of some Clojure sequence functions." single ((:keywords "convenience")) "melpa"])
  (sequential-command . [(20100504 855) nil "Many commands into one command" tar ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sequential-command.el") (:keywords "convenience" "lisp")) "melpa"])
  (servant . [(20140216 419) ((s (1 8 0)) (dash (2 2 0)) (f (0 11 0)) (ansi (0 3 0)) (commander (0 5 0)) (epl (0 2)) (shut-up (0 2 1)) (web-server (0 0 1))) "ELPA server written in Emacs Lisp" tar ((:url . "http://github.com/rejeep/servant.el") (:keywords "elpa" "server")) "melpa"])
  (serverspec . [(20140529 519) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (helm (1 6 1))) "Serverspec minor mode" tar ((:url . "http://101000lab.org")) "melpa"])
  (session . [(20120510 1700) nil "use variables, registers and buffer places across sessions" single ((:url . "http://emacs-session.sourceforge.net/") (:keywords "session" "session management" "desktop" "data" "tools")) "melpa"])
  (shadow . [(20110507 24) nil "That's not the file. That's shadow." single ((:keywords "shadow.vim" "files" "processes")) "melpa"])
  (shampoo . [(20131230 219) nil "A remote Smalltalk development mode" tar nil "melpa"])
  (shell-command . [(20090621 1332) nil "enables tab-completion for `shell-command'" single ((:keywords "shell")) "melpa"])
  (shell-current-directory . [(20140101 1554) nil "create new shell based on buffer directory" single ((:keywords "shell" "comint")) "melpa"])
  (shell-here . [(20120807 1913) nil "Open a shell relative to the working directory" single ((:keywords "unix" "tools" "processes")) "melpa"])
  (shell-history . [(20100504 850) nil "integration with shell history" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/shell-history.el") (:keywords "processes" "convenience")) "melpa"])
  (shell-pop . [(20140407 640) nil "helps you to use shell easily on Emacs. Only one key action to work." single ((:url . "http://github.com/kyagi/shell-pop-el") (:keywords "shell" "terminal" "tools")) "melpa"])
  (shell-switcher . [(20140217 638) nil "Provide fast switching between shell buffers" tar ((:url . "https://github.com/DamienCassou/shell-switcher") (:keywords "emacs" "package" "elisp" "shell" "eshell" "term" "switcher")) "melpa"])
  (shift-text . [(20130831 955) ((cl-lib (1 0)) (es-lib (0 3))) "Move the region in 4 directions, in a way similar to Eclipse's" single ((:url . "https://github.com/sabof/shift-text")) "melpa"])
  (shimbun . [(20120718 2038) nil "interfacing with web newspapers" tar ((:keywords "news")) "melpa"])
  (shm . [(20140528 511) nil "Structured Haskell Mode" tar ((:keywords "development" "haskell" "structured")) "melpa"])
  (shorten . [(20131201 620) nil "component-wise string shortener" single ((:url . "https://github.com/jorgenschaefer/circe/blob/master/lisp/shorten.el") (:keywords "extensions")) "melpa"])
  (show-css . [(20130605 1524) nil "Show the css of the html attribute the cursor is on" tar ((:url . "https://github.com/smmcg/showcss-mode") (:keywords "hypermedia")) "melpa"])
  (show-marks . [(20130805 749) ((fm (1 0))) "Navigate and visualize the mark-ring" single ((:url . "https://github.com/vapniks/mark") (:keywords "convenience")) "melpa"])
  (shut-up . [(20140520 537) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single ((:url . "http://github.com/rejeep/shut-up.el")) "melpa"])
  (sicp . [(20121014 1314) nil "No description available." tar nil "melpa"])
  (simp . [(20140425 1718) nil "Simple project definition, chiefly for file finding, and grepping" tar ((:url . "https://github.com/re5et/simp") (:keywords "project" "grep" "find")) "melpa"])
  (simple+ . [(20131227 154) ((strings (0))) "Extensions to standard library `simple.el'." single ((:url . "http://www.emacswiki.org/simple%2b.el") (:keywords "internal" "lisp" "extensions" "abbrev")) "melpa"])
  (simple-call-tree+ . [(20131009 1412) nil "Extensions to simple-call-tree" single ((:url . "http://www.emacswiki.org/emacs/download/simple-call-tree+.el") (:keywords "programming")) "melpa"])
  (simple-call-tree . [(20130330 940) nil "analyze source code based on font-lock text-properties" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?CallTree") (:keywords "programming")) "melpa"])
  (simple-httpd . [(20140519 848) ((cl-lib (0 3))) "pure elisp HTTP server" single ((:url . "https://github.com/skeeto/emacs-http-server")) "melpa"])
  (simple-rtm . [(20140105 438) nil "Interactive Emacs mode for Remember The Milk" tar ((:keywords "remember" "the" "milk" "productivity" "todo")) "melpa"])
  (simpleclip . [(20140508 1341) nil "Simplified access to the system clipboard" single ((:url . "http://github.com/rolandwalker/simpleclip") (:keywords "convenience")) "melpa"])
  (simplenote . [(20130416 1502) nil "Interact with simple-note.appspot.com" single ((:keywords "simplenote")) "melpa"])
  (simplezen . [(20130421 300) ((s (1 4 0)) (dash (1 1 0))) "A simple subset of zencoding-mode for Emacs." single nil "melpa"])
  (skeletor . [(20140513 1510) ((s (1 7 0)) (f (0 14 0)) (dash (2 2 0)) (cl-lib (0 3)) (emacs (24 1))) "Provides project skeletons for Emacs" tar nil "melpa"])
  (skewer-less . [(20131015 622) ((skewer-mode (1 5 3))) "Skewer support for live LESS stylesheet updates" single ((:keywords "languages" "tools")) "melpa"])
  (skewer-mode . [(20140430 839) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar nil "melpa"])
  (skewer-reload-stylesheets . [(20140121 544) ((skewer-mode (1 5 3))) "live-edit CSS stylesheets." tar nil "melpa"])
  (skype . [(20131001 2118) nil "skype UI for emacs users.." tar ((:keywords "skype" "chat")) "melpa"])
  (slamhound . [(20140506 1618) nil "Rip Clojure namespaces apart and rebuild them." single ((:url . "https://github.com/technomancy/slamhound") (:keywords "tools" "lisp")) "melpa"])
  (slideview . [(20130512 2142) nil "File slideshow" single ((:keywords "slideshow")) "melpa"])
  (slim-mode . [(20131202 2302) nil "Major mode for editing Slim files" single ((:url . "http://github.com/slim-template/emacs-slim") (:keywords "markup" "language")) "melpa"])
  (slime . [(20140525 1046) ((cl-lib (0 5))) "Superior Lisp Interaction Mode for Emacs" tar ((:url . "https://github.com/slime/slime") (:keywords "languages" "lisp" "slime")) "melpa"])
  (slime-annot . [(20131230 1908) ((slime (0))) "cl-annot support for SLIME" single ((:url . "https://github.com/arielnetworks/cl-annot")) "melpa"])
  (slime-company . [(20140226 228) ((slime (2 3 2)) (company (0 7))) "slime completion backend for company mode" single ((:keywords "convenience" "lisp" "abbrev")) "melpa"])
  (slime-ritz . [(20130218 1537) nil "slime extensions for ritz" single ((:url . "https://github.com/pallet/ritz") (:keywords "languages" "lisp" "slime")) "melpa"])
  (slime-volleyball . [(20130930 821) nil "A slime volleyball clone" tar ((:keywords "games")) "melpa"])
  (smart-compile . [(20130917 347) nil "an interface to `compile'" single ((:keywords "tools" "unix")) "melpa"])
  (smart-cursor-color . [(20140523 945) nil "Change cursor color dynamically" single ((:url . "https://github.com/7696122/smart-cursor-color/") (:keywords "cursor" "color" "face")) "melpa"])
  (smart-forward . [(20140430 13) ((expand-region (0 8 0))) "Semantic navigation" single ((:keywords "navigation")) "melpa"])
  (smart-mode-line . [(20140501 1233) ((emacs (24 3)) (dash (2 2 0))) "A color coded smart mode-line." single ((:url . "http://github.com/Bruce-Connor/smart-mode-line") (:keywords "mode-line" "faces" "theme" "themes")) "melpa"])
  (smart-newline . [(20131207 1940) nil "Provide smart newline for one keybind." single nil "melpa"])
  (smart-operator . [(20051013 1756) nil "Beautify the operators in codes" single nil "melpa"])
  (smart-tab . [(20130317 1157) nil "Intelligent tab completion and indentation." single ((:url . "http://github.com/genehack/smart-tab/tree/master") (:keywords "extensions")) "melpa"])
  (smart-tabs-mode . [(20140331 1629) nil "Intelligently indent with tabs, align with spaces!" single ((:url . "http://www.emacswiki.org/emacs/SmartTabs") (:keywords "languages")) "melpa"])
  (smart-window . [(20130214 1142) nil "vim-like window controlling plugin" single ((:url . "https://github.com/dryman/smart-window.el") (:keywords "window")) "melpa"])
  (smartparens . [(20140525 147) ((cl-lib (0 3)) (dash (2 6 0))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar nil "melpa"])
  (smartrep . [(20140404 1714) nil "Support sequential operation which omitted prefix keys." tar ((:url . "https://github.com/myuhe/smartrep.el") (:keywords "convenience")) "melpa"])
  (smartscan . [(20131230 739) nil "Jumps between other symbols found at point" single ((:keywords "extensions")) "melpa"])
  (smarty-mode . [(20100703 458) nil "major mode for editing smarty templates" single ((:url . "none yet") (:keywords "smarty" "php" "languages" "templates")) "melpa"])
  (smex . [(20140425 1314) ((emacs (24))) "M-x interface with Ido-style fuzzy matching." single ((:url . "http://github.com/nonsequitur/smex/") (:keywords "convenience" "usability")) "melpa"])
  (smooth-scroll . [(20130321 2114) nil "Minor mode for smooth scrolling and in-place scrolling." single ((:url . "http://www.emacswiki.org/emacs/download/smooth-scroll.el") (:keywords "convenience" "emulations" "frames")) "melpa"])
  (smooth-scrolling . [(20131219 2039) nil "Make emacs scroll smoothly" single ((:url . "http://github.com/aspiers/smooth-scrolling/") (:keywords "convenience")) "melpa"])
  (smotitah . [(20131127 152) nil "Modular emacs configuration framework" tar nil "melpa"])
  (snippet . [(20130210 1515) nil "Insert snippets of text into a buffer" single nil "melpa"])
  (soft-charcoal-theme . [(20140420 943) nil "Dark charcoal theme with soft colors" single ((:url . "http://github.com/mswift42/soft-charcoal-theme")) "melpa"])
  (soft-morning-theme . [(20140410 1134) nil "Emacs24 theme with a light background." single ((:url . "http://github.com/mswift42/soft-morning-theme")) "melpa"])
  (soft-stone-theme . [(20140108 456) ((emacs (24))) "Emacs 24 theme with a light background." single ((:url . "http://github.com/mswift42/soft-stone-theme")) "melpa"])
  (solarized-theme . [(20140520 354) ((dash (2 6 0))) "The Solarized color theme, ported to Emacs." tar nil "melpa"])
  (soothe-theme . [(20130805 0) ((emacs (24 1))) "a dark colorful theme for Emacs24." single ((:url . "https://github.com/jasonm23/emacs-soothe-theme")) "melpa"])
  (sos . [(20140320 1422) ((org (7))) "StackOverflow Search" single ((:url . "https://github.com/omouse/emacs-sos") (:keywords "tools" "search" "questions")) "melpa"])
  (soundcloud . [(20131210 1103) ((emms (20131016)) (json (1 2)) (deferred (0 3 1)) (string-utils (0 3 2))) "a SoundCloud client for Emacs" single ((:keywords "soundcloud" "music" "audio")) "melpa"])
  (sourcemap . [(20140308 133) ((cl-lib (0 5)) (emacs (24))) "Sourcemap parser" single ((:url . "https://github.com/syohex/emacs-sourcemap")) "melpa"])
  (sourcetalk . [(20130908 957) ((request (0 2 0))) "SourceTalk (http://sourcetalk.net) plugin for Emacs" single ((:url . "https://github.com/malroc/sourcetalk_emacs") (:keywords "sourcetalk" "code" "discussion")) "melpa"])
  (spacegray-theme . [(20131230 1127) ((emacs (24 1))) "A Hyperminimal UI Theme" single ((:url . "http://github.com/bruce/emacs-spacegray-theme") (:keywords "themes")) "melpa"])
  (spaces . [(20130610 49) nil "Create and switch between named window configurations." single ((:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience")) "melpa"])
  (sparkline . [(20130803 542) nil "Make sparkline images from a list of numbers" single ((:keywords "extensions")) "melpa"])
  (sparql-mode . [(20140404 204) nil "Edit and interactively evaluate SPARQL queries." tar ((:url . "https://github.com/ljos/sparql-mode")) "melpa"])
  (speck . [(20130519 1507) nil "minor mode for spell checking" single ((:keywords "spell" "checking")) "melpa"])
  (speechd-el . [(20130828 1209) nil "Client to speech synthesizers and Braille displays." tar nil "melpa"])
  (sphinx-doc . [(20140524 857) ((s (1 9 0)) (cl-lib (0 5))) "Sphinx friendly docstrings for Python functions" single ((:url . "https://github.com/naiquevin/sphinx-doc.el") (:keywords "sphinx" "python")) "melpa"])
  (sphinx-frontend . [(20131223 329) nil "Launch build process for rst documents via sphinx." single ((:url . "https://github.com/kostafey/sphinx-frontend") (:keywords "compile" "sphinx" "restructuredtext")) "melpa"])
  (splitter . [(20130705 50) nil "Manage window splits" single ((:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience")) "melpa"])
  (spotify . [(20130520 258) nil "Control the spotify application from emacs" single ((:url . "https://github.com/remvee/spotify-el") (:keywords "convenience")) "melpa"])
  (sprintly-mode . [(20121005 2234) ((furl (0 0 2))) "Major mode for dealing with sprint.ly" single ((:url . "https://github.com/sprintly/sprintly-mode")) "melpa"])
  (sql-indent . [(20090325 2254) nil "indentation of SQL statements" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?SqlIndent") (:keywords "languages")) "melpa"])
  (sqlite . [(20140106 2009) nil "use sqlite via elisp" single nil "melpa"])
  (sr-speedbar . [(20140505 415) nil "Same frame speedbar" single ((:url . "http://www.emacswiki.org/emacs/download/sr-speedbar.el") (:keywords "speedbar" "sr-speedbar.el")) "melpa"])
  (ssh . [(20120904 1342) nil "Support for remote logins using ssh." single ((:keywords "unix" "comm")) "melpa"])
  (ssh-config-mode . [(20120513 2233) nil "Mode for fontification of ~/.ssh/config" single ((:url . "http://www.mahalito.net/~harley/elisp/ssh-config-mode.el") (:keywords "ssh" "config" "emacs")) "melpa"])
  (stan-mode . [(20140429 1304) nil "Major mode for editing Stan files" tar ((:url . "http://github.com/stan-dev/stan-mode") (:keywords "languanges")) "melpa"])
  (stan-snippets . [(20140417 2358) ((yasnippet (0 8 0)) (stan-mode (2 1 1))) "Yasnippets for Stan" tar ((:url . "http://github.com/stan-dev/stan-mode") (:keywords "languanges")) "melpa"])
  (starter-kit . [(20130904 1547) ((paredit (22)) (idle-highlight-mode (1 1 1)) (find-file-in-project (3 0)) (smex (1 1 2)) (ido-ubiquitous (0 3)) (magit (0 8 1))) "Saner defaults and goodies." tar nil "melpa"])
  (starter-kit-bindings . [(20120101 1955) ((starter-kit (2 0 2))) "Saner defaults and goodies: bindings" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/StarterKit") (:keywords "convenience")) "melpa"])
  (starter-kit-eshell . [(20121001 1714) nil "Saner defaults and goodies: eshell tweaks" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/StarterKit") (:keywords "convenience")) "melpa"])
  (starter-kit-js . [(20111009 2054) ((starter-kit (2 0 1))) "Saner defaults and goodies for Javascript" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/StarterKit") (:keywords "convenience")) "melpa"])
  (starter-kit-lisp . [(20120504 1225) ((starter-kit (2 0 2)) (elisp-slime-nav (0 1))) "Saner defaults and goodies for lisp languages" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/StarterKit") (:keywords "convenience")) "melpa"])
  (starter-kit-perl . [(20120202 1132) nil "Some helpful Perl code" single nil "melpa"])
  (starter-kit-ruby . [(20120202 1132) ((inf-ruby (2 2 3)) (starter-kit (2 0 1))) "Saner defaults and goodies for Ruby" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/StarterKit") (:keywords "convenience")) "melpa"])
  (stekene-theme . [(20140524 821) ((emacs (24))) "The stekene dark and light color themes." tar nil "melpa"])
  (stem . [(20131102 409) nil "Routines for stemming" single ((:url . "https://github.com/yuutayamada/stem") (:keywords "stemming")) "melpa"])
  (stgit . [(20140213 348) nil "major mode for StGit interaction" single ((:url . "http://www.procode.org/stgit")) "melpa"])
  (sticky . [(20101130 252) nil "Sticky key for capital letters" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sticky.el") (:keywords "convenience")) "melpa"])
  (strie . [(20140109 612) nil "A simple trie data structure implementation" single nil "melpa"])
  (string-edit . [(20130815 2115) ((dash (1 2 0))) "Avoid escape nightmares by editing string in separate buffer" single nil "melpa"])
  (string-inflection . [(20140505 908) nil "underscore -> UPCASE -> CamelCase conversion of names" single ((:keywords "elisp")) "melpa"])
  (string-utils . [(20140508 1341) ((list-utils (0 4 2))) "String-manipulation utilities" single ((:url . "http://github.com/rolandwalker/string-utils") (:keywords "extensions")) "melpa"])
  (strings . [(20131227 158) nil "Miscellaneous string functions." single ((:url . "http://www.emacswiki.org/strings.el") (:keywords "internal" "strings" "text")) "melpa"])
  (stripe-buffer . [(20131010 1526) ((cl-lib (1 0))) "Use a different background for even and odd lines" single ((:url . "https://github.com/sabof/stripe-buffer")) "melpa"])
  (stumpwm-mode . [(20140130 1816) nil "special lisp mode for evaluating code into running stumpwm" single ((:keywords "comm" "lisp" "tools")) "melpa"])
  (stupid-indent-mode . [(20130816 1354) nil "Plain stupid indentation minor mode" single nil "melpa"])
  (stylus-mode . [(20140508 650) ((sws-mode (0))) "Major mode for editing .jade files" single ((:url . "https://github.com/brianc/jade-mode")) "melpa"])
  (subatomic-theme . [(20140228 13) nil "Low contrast (awesome) emacs color theme" single ((:url . "https://github.com/cryon/subatomic")) "melpa"])
  (subatomic256-theme . [(20130620 1910) nil "Fork of subatomic-theme for terminals." single ((:url . "https://github.com/cryon/subatomic256")) "melpa"])
  (sublime-themes . [(20140206 804) nil "A collection of themes based on Sublime Text" tar ((:keywords "faces")) "melpa"])
  (sublimity . [(20140322 44) nil "smooth-scrolling, minimap and distraction-free mode" tar ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (subshell-proc . [(20130122 1322) nil "Functions for working with comints" single ((:url . "https://github.com/andrewmains12/subshell-proc")) "melpa"])
  (sudden-death . [(20121218 549) nil "Totsuzen-no-Shi" single ((:url . "https://github.com/yewton/sudden-death.el")) "melpa"])
  (sudo-ext . [(20130130 2151) nil "sudo support" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sudo-ext.el") (:keywords "unix")) "melpa"])
  (summarye . [(20130328 1027) nil "list up matched strings from a buffer, and display them in summary buffer" single nil "melpa"])
  (sunny-day-theme . [(20140413 1425) nil "Emacs24 theme with a light background." single ((:url . "http://github.com/mswift42/sunny-day-theme")) "melpa"])
  (suomalainen-kalenteri . [(20140517 106) nil "Finnish national and Christian holidays for calendar" tar nil "melpa"])
  (supergenpass . [(20130328 2248) nil "SuperGenPass for Emacs" single ((:keywords "supergenpass")) "melpa"])
  (surround . [(20140204 2046) nil "emulate surround.vim from Vim" single ((:keywords "emulation" "vi" "evil mailing list: <implementations-list at lists.ourproject.org> subscribe: http://tinyurl.com/implementations-list newsgroup: nntp://news.gmane.org/gmane.emacs.vim-emulation archives: http://dir.gmane.org/gmane.emacs.vim-emulation")) "melpa"])
  (svg-mode-line-themes . [(20140210 940) ((xmlgen (0 4))) "SVG-based themes for mode-line" tar ((:url . "https://github.com/sabof/svg-mode-line-themes")) "melpa"])
  (swbuff . [(20041012 718) nil "Quick switch between Emacs buffers." single ((:keywords "extensions" "convenience")) "melpa"])
  (swbuff-x . [(20130607 1014) ((swbuff (19991231 1800))) "Modifications to David Ponce's swbuff" single ((:url . "http://www.emacswiki.org/elisp/swbuff-x.el") (:keywords "files" "convenience")) "melpa"])
  (switch-window . [(20130914 640) nil "A *visual* way to choose a window to switch to" single ((:url . "http://tapoueh.org/emacs/switch-window.html") (:keywords "window" "navigation")) "melpa"])
  (swoop . [(20140424 2214) ((ht (2 0)) (pcre2el (1 5)) (async (1 1)) (emacs (24))) "Peculiar buffer navigation for Emacs" tar ((:url . "https://github.com/ShingoFukuyama/swoop") (:keywords "swoop" "inner" "buffer" "search" "navigation")) "melpa"])
  (sws-mode . [(20120802 1052) nil "(S)ignificant (W)hite(S)pace mode" single ((:url . "https://github.com/brianc/jade-mode")) "melpa"])
  (synonyms . [(20131227 159) nil "Look up synonyms for a word or phrase in a thesaurus." single ((:url . "http://www.emacswiki.org/synonyms.el") (:keywords "text" "dictionary" "thesaurus" "spelling" "apropos" "help")) "melpa"])
  (syntactic-sugar . [(20140508 1341) nil "Effect-free forms such as if/then/else" single ((:url . "http://github.com/rolandwalker/syntactic-sugar") (:keywords "extensions")) "melpa"])
  (syslog-mode . [(20140217 1618) ((hide-lines (20130623))) "Major-mode for viewing log files" single ((:url . "https://github.com/vapniks/syslog-mode") (:keywords "unix")) "melpa"])
  (systemtap-mode . [(20121209 1510) nil "A mode for SystemTap" single ((:url . "https://github.com/ruediger/systemtap-mode") (:keywords "tools" "languages")) "melpa"])
  (tab-group . [(20140306 650) nil "Grouped tabs and their tabbar" single ((:url . "http://github.com/tarao/tab-group-el") (:keywords "convenience" "tabs")) "melpa"])
  (tabbar . [(20140316 600) nil "No description available." tar nil "melpa"])
  (tabbar-ruler . [(20130701 2153) ((tabbar (2 0 1))) "Pretty tabbar, autohide, use both tabbar/ruler" tar ((:url . "http://github.com/mlf176f2/tabbar-ruler.el") (:keywords "tabbar" "ruler mode" "menu" "tool bar.")) "melpa"])
  (tabulated-list . [(20120406 1351) nil "generic major mode for tabulated lists." single ((:keywords "extensions" "lisp")) "melpa"])
  (tagedit . [(20130816 510) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" single ((:keywords "convenience")) "melpa"])
  (take-off . [(20140528 110) ((emacs (24 3)) (web-server (0 1 0))) "Emacs remote web access" tar ((:url . "https://github.com/tburette/take-off")) "melpa"])
  (tango-2-theme . [(20120312 1325) nil "Tango 2 color theme for GNU Emacs 24" single nil "melpa"])
  (tango-plus-theme . [(20140425 1511) nil "A color theme based on the tango palette" single ((:url . "https://github.com/tmalsburg/tango-plus-theme")) "melpa"])
  (tangotango-theme . [(20140304 1504) nil "Tango Palette color theme for Emacs 24." single ((:url . "https://github.com/juba/color-theme-tangotango") (:keywords "tango" "palette" "color" "theme" "emacs")) "melpa"])
  (tbx2org . [(20140224 759) ((dash (2 5 0)) (s (1 8 0)) (cl-lib (0 4))) "Tinderbox to org-mode conversion" single ((:url . "https://github.com/istib/tbx2org") (:keywords "org-mode")) "melpa"])
  (tc . [(20140407 1221) nil "a Japanese input method with T-Code on Emacs" tar nil "melpa"])
  (tco . [(20140412 612) ((dash (1 2 0)) (emacs (24))) "tail-call optimisation for Emacs lisp" single nil "melpa"])
  (tdd-status-mode-line . [(20131123 916) nil "TDD status on the mode-line" single ((:url . "https://github.com/algernon/tdd-status-mode-line") (:keywords "faces" "tdd")) "melpa"])
  (tea-time . [(20120331 120) nil "Simple timer package, useful to make perfect tea." single ((:keywords "timer" "tea-time")) "melpa"])
  (telepathy . [(20131209 458) nil "Access Telepathy from Emacs" single ((:keywords "telepathy" "tools")) "melpa"])
  (term+ . [(20130612 652) nil "term-mode enhancement" tar ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (term+key-intercept . [(20140210 2350) ((term+ (0 1)) (key-intercept (0 1))) "term+ intercept key mapping" single ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (term+mux . [(20140210 2349) ((term+ (0 1)) (tab-group (0 1))) "term+ terminal multiplexer and session management" single ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (tern . [(20140528 1415) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single ((:url . "http://ternjs.net/")) "melpa"])
  (tern-auto-complete . [(20140528 1415) ((tern (0 0 1)) (auto-complete (1 4)) (cl-lib (0 5)) (emacs (24))) "Tern Completion by auto-complete.el" single nil "melpa"])
  (test-case-mode . [(20140123 1115) nil "unit test front-end" single ((:url . "http://nschum.de/src/emacs/test-case-mode/") (:keywords "tools")) "melpa"])
  (test-simple . [(20140326 1848) nil "Simple Unit Test Framework for Emacs Lisp" single ((:url . "http://github.com/rocky/emacs-test-simple") (:keywords "unit-test")) "melpa"])
  (tex-smart-umlauts . [(20131210 2346) nil "Smart umlaut conversion for TeX." single ((:url . "http://hub.darcs.net/lyro/tex-smart-umlauts") (:keywords "tex" "wp")) "melpa"])
  (textile-mode . [(20120721 1258) nil "Textile markup editing major mode" single nil "melpa"])
  (textmate . [(20110816 1446) nil "TextMate minor mode for Emacs" single ((:keywords "textmate" "osx" "mac")) "melpa"])
  (textmate-to-yas . [(20130509 854) nil "Import Textmate macros into yasnippet syntax" tar ((:url . "https://github.com/mlf176f2/textmate-to-yas.el/") (:keywords "yasnippet" "textmate")) "melpa"])
  (tfs . [(20120508 1820) nil "MS Team Foundation Server commands for Emacs." single ((:url . "http://cheeso.members.winisp.net/srcview.aspx?dir=emacs&file=tfs.el")) "melpa"])
  (theme-changer . [(20130725 1919) nil "Sunrise/Sunset Theme Changer for Emacs" single ((:url . "https://github.com/hadronzoo/theme-changer") (:keywords "color-theme" "deftheme" "solar" "sunrise" "sunset")) "melpa"])
  (thesaurus . [(20121125 1937) nil "replace a word with a synonym looked up in a web service." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/thesaurus.el") (:keywords "thesaurus" "synonym")) "melpa"])
  (thing-cmds . [(20131227 159) ((hide-comnt (0))) "Commands that use things, as defined by `thingatpt.el'." single ((:url . "http://www.emacswiki.org/thing-cmds.el") (:keywords "thingatpt" "thing" "region" "selection")) "melpa"])
  (thingatpt+ . [(20131227 200) nil "Extensions to `thingatpt.el'." single ((:url . "http://www.emacswiki.org/thingatpt%2b.el") (:keywords "extensions" "matching" "mouse")) "melpa"])
  (thingopt . [(20120717 826) nil "Thing at Point optional utilities" single ((:keywords "convenience")) "melpa"])
  (thread-dump . [(20130323 1025) nil "Java thread dump viewer" single ((:url . "http://github.com/nd/thread-dump.el")) "melpa"])
  (thrift . [(20140312 1348) nil "Major mode for Apache Thrift files" single ((:keywords "files")) "melpa"])
  (thumb-frm . [(20131227 201) ((frame-fns (0)) (frame-cmds (0))) "Commands for thumbnail frames." single ((:url . "http://www.emacswiki.org/thumb-frm.el") (:keywords "frame" "icon")) "melpa"])
  (thumb-through . [(20120118 2134) nil "Plain text reader of HTML documents" single ((:keywords "html")) "melpa"])
  (tidy . [(20111222 1756) nil "Interface to the HTML Tidy program" single ((:url . "http://www.emacswiki.org/elisp/tidy.el") (:keywords "languages")) "melpa"])
  (time-ext . [(20130130 2151) nil "more function for time/date" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/time-ext.el") (:keywords "lisp")) "melpa"])
  (timesheet . [(20140418 502) ((s (1)) (org (7)) (auctex (11 87 4))) "Timesheet management add-on for org-mode" tar ((:url . "https://github.com/tmarble/timesheet.el") (:keywords "org" "timesheet")) "melpa"])
  (tiny . [(20140103 305) nil "Quickly generate linear ranges in Emacs" single ((:url . "https://github.com/abo-abo/tiny")) "melpa"])
  (tmmofl . [(20121025 401) nil "Calls functions dependant on font lock highlighting at point" single ((:keywords "minor mode" "font lock" "toggling.")) "melpa"])
  (todochiku . [(20120202 2005) nil "A mode for interfacing with Growl, Snarl, and the like." single nil "melpa"])
  (todotxt . [(20131231 850) nil "A major mode for editing todo.txt files" single ((:url . "https://github.com/rpdillon/todotxt.el") (:keywords "todo.txt" "todotxt" "todotxt.el")) "melpa"])
  (toggle-test . [(20140303 342) nil "Toggle between source and test files in various programming languages" single ((:url . "https://github.com/rags/toggle-test") (:keywords "tdd" "test" "toggle" "productivity")) "melpa"])
  (tomatinho . [(20140120 1540) nil "Tomatinho" tar ((:keywords "time" "productivity" "pomodoro technique")) "melpa"])
  (toml . [(20130903 555) nil "TOML (Tom's Obvious, Minimal Language) parser" single ((:url . "https://github.com/gongo/emacs-toml") (:keywords "toml" "parser")) "melpa"])
  (toml-mode . [(20130302 748) nil "Mojor mode for editing TOML files" single ((:url . "https://github.com/dryman/toml-mode") (:keywords "data" "toml")) "melpa"])
  (tommyh-theme . [(20131004 1630) nil "A bright, bold-colored theme for emacs" single nil "melpa"])
  (tool-bar+ . [(20131227 203) nil "Extensions to standard library tool-bar.el" single ((:url . "http://www.emacswiki.org/tool-bar%2b.el") (:keywords "tool-bar" "convenience" "mouse" "button" "frame")) "melpa"])
  (top-mode . [(20130605 1739) nil "run \"top\" from emacs" single ((:keywords "extensions" "processes")) "melpa"])
  (tox . [(20140424 602) nil "Launch current python test with tox" single ((:url . "https://github.com/chmouel/tox.el") (:keywords "convenience" "tox" "python" "tests")) "melpa"])
  (toxi-theme . [(20130418 1239) ((emacs (24))) "A dark color theme by toxi" single ((:url . "http://hg.postspectacular.com/toxi-theme/")) "melpa"])
  (traad . [(20140515 203) ((deferred (0 3 2)) (popup (0 5 0)) (request (0 2 0))) "emacs interface to the traad refactoring server." single ((:url . "https://github.com/abingham/traad")) "melpa"])
  (traad-autocomplete . [(20140130 711) ((traad (0 1)) (auto-complete (1 4 0))) "auto-complete sources for traad" single ((:url . "https://github.com/abingham/traad")) "melpa"])
  (tracking . [(20131201 620) ((shorten (0 1))) "Buffer modification tracking" single ((:url . "https://github.com/jorgenschaefer/circe/wiki/Tracking")) "melpa"])
  (tracwiki-mode . [(20140108 853) ((xml-rpc (1 6 8))) "Emacs Major mode for working with Trac" single ((:keywords "trac" "wiki" "tickets")) "melpa"])
  (tree-mode . [(20121207 1538) nil "A mode to manage tree widgets" single ((:keywords "help" "convenience" "widget")) "melpa"])
  (trident-mode . [(20130726 1207) ((emacs (24)) (slime (20130526)) (skewer-mode (1 5 0)) (dash (1 0 3))) "Live Parenscript interaction" single ((:url . "https://github.com/johnmastro/trident-mode.el") (:keywords "languages" "lisp" "processes" "tools")) "melpa"])
  (tronesque-theme . [(20140407 657) nil "Color Theme based on Tron universe." single ((:url . "https://github.com/aurelienbottazini/tronesque")) "melpa"])
  (truthy . [(20140508 1341) ((list-utils (0 4 2))) "Test the content of a value" single ((:url . "http://github.com/rolandwalker/truthy") (:keywords "extensions")) "melpa"])
  (tss . [(20140421 903) ((auto-complete (1 4 0)) (json-mode (1 1 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a interface for auto-complete.el/flymake.el on typescript-mode." tar ((:url . "https://github.com/aki2o/emacs-tss") (:keywords "typescript" "completion")) "melpa"])
  (tt-mode . [(20130804 410) nil "Emacs major mode for editing Template Toolkit files." single nil "melpa"])
  (ttrss . [(20130409 1049) ((emacs (23 1))) "Tiny Tiny RSS elisp bindings" single ((:url . "https://github.com/pedros/ttrss.el") (:keywords "news" "local")) "melpa"])
  (tuareg . [(20140523 212) ((caml (3 12 0 1))) "OCaml mode for Emacs." tar ((:url . "http://forge.ocamlcore.org/projects/tuareg/") (:keywords "ocaml" "languages")) "melpa"])
  (tumble . [(20130327 1007) ((http-post-simple (0))) "an Tumblr mode for Emacs" single ((:keywords "tumblr")) "melpa"])
  (tumblesocks . [(20140215 1247) ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) "An Emacs tumblr client." tar nil "melpa"])
  (tup-mode . [(20140410 914) nil "Major mode for editing files for Tup" single ((:url . "https://github.com/ejmr/tup-mode")) "melpa"])
  (turnip . [(20140406 1124) ((dash (2 6 0)) (s (1 9 0))) "Interacting with tmux from Emacs" single ((:keywords "terminals" "tools")) "melpa"])
  (twig-mode . [(20130220 1050) nil "A major mode for twig" single nil "melpa"])
  (twilight-anti-bright-theme . [(20120713 316) nil "A soothing Emacs 24 light-on-dark theme" single ((:url . "https://github.com/jimeh/twilight-anti-bright-theme.el") (:keywords "themes")) "melpa"])
  (twilight-bright-theme . [(20130605 143) nil "A Emacs 24 faces port of the TextMate theme" single ((:url . "https://github.com/jimeh/twilight-bright-theme.el") (:keywords "themes")) "melpa"])
  (twilight-theme . [(20120412 603) nil "Twilight theme for GNU Emacs 24 (deftheme)" single nil "melpa"])
  (twittering-mode . [(20140420 1005) nil "Major mode for Twitter" single ((:url . "http://twmode.sf.net/") (:keywords "twitter" "web")) "melpa"])
  (typed-clojure-mode . [(20140223 649) ((clojure-mode (2 1 1)) (cider (0 5 0))) "Typed Clojure minor mode for Emacs" single ((:url . "https://github.com/typedclojure/typed-clojure-mode")) "melpa"])
  (typing . [(20121026 2118) nil "The Typing Of Emacs" single ((:url . "http://www.emacswiki.org/emacs/TypingOfEmacs") (:keywords "games")) "melpa"])
  (typo . [(20130323 340) nil "Minor mode for typographic editing" single ((:url . "https://github.com/jorgenschaefer/typoel") (:keywords "convenience" "wp")) "melpa"])
  (ucs-cmds . [(20131227 204) nil "Macro to create commands that insert Unicode chars." single ((:url . "http://www.emacswiki.org/ucs-cmds.el") (:keywords "unicode" "characters" "encoding" "commands" "ucs-names")) "melpa"])
  (ucs-utils . [(20140508 1455) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar ((:url . "http://github.com/rolandwalker/ucs-utils") (:keywords "i18n" "extensions")) "melpa"])
  (ujelly-theme . [(20140504 1852) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single ((:url . "http://github.com/marktran/color-theme-ujelly")) "melpa"])
  (ukrainian-holidays . [(20130720 649) nil "Ukrainian holidays for Emacs calendar." single ((:url . "https://github.com/abo-abo/ukrainian-holidays")) "melpa"])
  (unbound . [(20140307 928) nil "Find convenient unbound keystrokes" single ((:keywords "keyboard")) "melpa"])
  (uncrustify-mode . [(20130707 659) nil "Minor mode to automatically uncrustify." single ((:keywords "uncrustify")) "melpa"])
  (underwater-theme . [(20131117 1602) nil "A gentle, deep blue color theme" single ((:keywords "faces")) "melpa"])
  (undo-tree . [(20140509 522) nil "Treat undo history as a tree" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "convenience" "files" "undo" "redo" "history" "tree")) "melpa"])
  (undohist . [(20140321 758) ((cl-lib (1 0))) "Persistent undo history for GNU Emacs" single ((:keywords "convenience")) "melpa"])
  (unfill . [(20131103 213) nil "The inverse of fill-paragraph and fill-region" single ((:keywords "utilities")) "melpa"])
  (unicode-enbox . [(20140508 1341) ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Surround a string with box-drawing characters" single ((:url . "http://github.com/rolandwalker/unicode-enbox") (:keywords "extensions" "interface")) "melpa"])
  (unicode-fonts . [(20140508 1341) ((font-utils (0 7 0)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Configure Unicode fonts" single ((:url . "http://github.com/rolandwalker/unicode-fonts") (:keywords "i18n" "faces" "frames" "wp" "interface")) "melpa"])
  (unicode-progress-reporter . [(20140508 1341) ((emacs (24 1 0)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Progress-reporter with fancy characters" single ((:url . "http://github.com/rolandwalker/unicode-progress-reporter") (:keywords "interface")) "melpa"])
  (unicode-whitespace . [(20140508 1341) ((ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "teach whitespace-mode about fancy characters" single ((:url . "http://github.com/rolandwalker/unicode-whitespace") (:keywords "faces" "wp" "interface")) "melpa"])
  (unidecode . [(20140317 2118) ((cl-lib (0 4))) "Convert Unicode text into safe ASCII strings" tar nil "melpa"])
  (unipoint . [(20140113 1424) nil "a simple way to insert unicode characters by TeX name" single ((:url . "https://github.com/apgwoz/unipoint")) "melpa"])
  (unison-mode . [(20140127 1024) nil "Syntax highlighting for unison file synchronization program" single ((:url . "https://github.com/impaktor/unison-mode") (:keywords "symchronization" "unison")) "melpa"])
  (url-shortener . [(20131218 353) nil "shorten long url and expand tinyurl" single ((:url . "https://github.com/yuyang0/url-shortener")) "melpa"])
  (urlenc . [(20140116 656) nil "URL encoding/decoding utility for Emacs." single ((:url . "https://github.com/buzztaiki/urlenc-el") (:keywords "url")) "melpa"])
  (usage-memo . [(20110722 1551) nil "integration of Emacs help system and memo" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/usage-memo.el") (:keywords "convenience" "languages" "lisp" "help" "tools" "docs")) "melpa"])
  (use-package . [(20140517 445) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" single ((:url . "https://github.com/jwiegley/use-package") (:keywords "dotemacs" "startup" "speed" "config" "package")) "melpa"])
  (utop . [(20140308 1141) ((emacs (24))) "Universal toplevel for OCaml" single ((:url . "https://github.com/diml/utop") (:keywords "ocaml" "languages")) "melpa"])
  (uuid . [(20120910 151) nil "UUID's for EmacsLisp" single ((:keywords "lisp")) "melpa"])
  (uzumaki . [(20140522 1747) ((cl-lib (0 5))) "A simple buffer cycler" single ((:url . "http://github.com/geyslan/uzumaki") (:keywords "buffer" "convenience")) "melpa"])
  (vagrant . [(20140509 1806) nil "Manage a vagrant box from emacs" single ((:url . "https://github.com/ottbot/vagrant.el") (:keywords "vagrant" "chef")) "melpa"])
  (vagrant-tramp . [(20140506 1306) nil "Vagrant method for TRAMP" tar ((:url . "https://github.com/dougm/vagrant-tramp") (:keywords "vagrant")) "melpa"])
  (vbasense . [(20140221 1553) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a environment like Visual Basic Editor." tar ((:url . "https://github.com/aki2o/emacs-vbasense") (:keywords "vba" "completion")) "melpa"])
  (vc-check-status . [(20140519 1604) nil "Warn you when quitting emacs and leaving repo dirty." tar ((:url . "https://github.com/thisirs/vc-check-status") (:keywords "vc" "convenience")) "melpa"])
  (vc-darcs . [(20140523 1601) nil "a VC backend for darcs" single ((:keywords "vc")) "melpa"])
  (vc-osc . [(20120910 211) nil "non-resident support for osc version-control" single nil "melpa"])
  (vcl-mode . [(20121129 1314) nil "Syntax highlighting for Varnish Command Language" single nil "melpa"])
  (vcomp . [(20121231 248) nil "compare version strings" single ((:url . "https://github.com/tarsius/vcomp") (:keywords "versions")) "melpa"])
  (vector-utils . [(20140508 1341) nil "Vector-manipulation utility functions" single ((:url . "http://github.com/rolandwalker/vector-utils") (:keywords "extensions")) "melpa"])
  (vertica . [(20131217 711) ((sql (3 0))) "Vertica SQL mode extension" single ((:keywords "sql" "vertica")) "melpa"])
  (viewer . [(20130314 2337) nil "View-mode extension" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/viewer.el") (:keywords "view" "extensions")) "melpa"])
  (vim-region . [(20140329 924) ((expand-region (20140127))) "Select region as vim" single ((:url . "https://github.com/ongaeshi/emacs-vim-region")) "melpa"])
  (vimgolf . [(20120228 550) nil "VimGolf interface for the One True Editor" single ((:keywords "games" "vimgolf" "vim")) "melpa"])
  (vimrc-mode . [(20130228 1244) nil "Major mode for vimrc files" single ((:url . "https://github.com/mcandre/vimrc-mode") (:keywords "vimrc" ".vim")) "melpa"])
  (virtualenv . [(20140220 1501) nil "Virtualenv for Python" single ((:keywords "python" "virtualenv")) "melpa"])
  (virtualenvwrapper . [(20140315 216) ((dash (1 5 0)) (s (1 6 1))) "a featureful virtualenv tool for Emacs" single ((:url . "http://github.com/porterjamesj/virtualenvwrapper.el") (:keywords "python" "virtualenv" "virtualenvwrapper")) "melpa"])
  (visible-mark . [(20140415 1258) nil "Make marks visible." single ((:url . "https://gitlab.com/iankelling/visible-mark") (:keywords "marking" "color" "faces")) "melpa"])
  (visual-regexp . [(20140311 724) ((cl-lib (0 2))) "A regexp/replace command for Emacs with interactive visual feedback" single ((:url . "https://github.com/benma/visual-regexp.el/") (:keywords "regexp" "replace" "visual" "feedback")) "melpa"])
  (visual-regexp-steroids . [(20140419 1702) ((visual-regexp (0 6))) "Extends visual-regexp to support other regexp engines" tar ((:url . "https://github.com/benma/visual-regexp-steroids.el/") (:keywords "external" "foreign" "regexp" "replace" "python" "visual" "feedback")) "melpa"])
  (vkill . [(20091203 1022) nil "view and kill Unix processes from within Emacs" single nil "melpa"])
  (vlf . [(20140223 818) nil "View Large Files" tar ((:url . "https://github.com/m00natic/vlfi") (:keywords "large files" "utilities")) "melpa"])
  (vline . [(20120108 1245) nil "show vertical line (column highlighting) mode." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/vline.el") (:keywords "faces" "editing" "emulating")) "melpa"])
  (volatile-highlights . [(20130321 641) nil "Minor mode for visual feedback on some operations." single ((:url . "http://www.emacswiki.org/emacs/download/volatile-highlights.el") (:keywords "emulations" "convenience" "wp")) "melpa"])
  (volume . [(20121025 1538) nil "tweak your sound card volume from Emacs" single ((:url . "http://www.brockman.se/software/volume-el/")) "melpa"])
  (w32-browser . [(20131227 208) nil "Run Windows application associated with a file." single ((:url . "http://www.emacswiki.org/w32-browser.el") (:keywords "mouse" "dired" "w32" "explorer")) "melpa"])
  (w32browser-dlgopen . [(20131227 209) nil "Use w32browser with standard Windows Open File box." single ((:url . "http://www.emacswiki.org/w32browser-dlgopen.el") (:keywords "files" "extensions" "convenience" "dialog")) "melpa"])
  (w3m . [(20140420 2007) nil "an Emacs interface to w3m" tar ((:keywords "w3m" "www" "hypermedia")) "melpa"])
  (wacspace . [(20140125 2221) ((dash (1 2 0)) (cl-lib (0 2))) "The WACky WorkSPACE manager for emACS" tar nil "melpa"])
  (wakatime-mode . [(20140309 630) nil "Automatic time tracking extension based on WakaTime" single ((:keywords "calendar" "comm")) "melpa"])
  (wand . [(20140413 2236) ((dash (2 5 0))) "Magic wand for Emacs - Selecting and executing" tar ((:url . "https://github.com/cmpitg/wand") (:keywords "extensions" "tools")) "melpa"])
  (watch-buffer . [(20120331 1344) nil "run a shell command when saving a buffer" single ((:url . "https://github.com/mjsteger/watch-buffer") (:keywords "automation" "convenience")) "melpa"])
  (wc-mode . [(20120531 1344) nil "show wc-like information in status bar" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "length" "characters" "words" "lines" "mode line")) "melpa"])
  (wcheck-mode . [(20140517 912) nil "General interface for text checkers" tar nil "melpa"])
  (weather-metno . [(20140422 1038) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar nil "melpa"])
  (web . [(20140208 559) nil "useful HTTP client" single ((:url . "http://github.com/nicferrier/emacs-web") (:keywords "lisp" "http" "hypermedia")) "melpa"])
  (web-beautify . [(20131118 226) nil "Format HTML, CSS and JavaScript/JSON by js-beautify" single ((:url . "https://github.com/yasuyk/web-beautify")) "melpa"])
  (web-mode . [(20140528 1125) nil "major mode for editing html templates" tar ((:url . "http://web-mode.org") (:keywords "html" "template" "php" "javascript" "js" "css" "web" "django" "jsp" "asp" "erb" "twig" "jinja" "blade" "dust" "closure" "freemarker" "mustache" "velocity" "cheetah" "smarty")) "melpa"])
  (web-server . [(20140506 2003) ((emacs (24 4))) "Emacs Web Server" tar ((:url . "https://github.com/eschulte/emacs-web-server") (:keywords "http" "server" "network")) "melpa"])
  (weblogger . [(20110926 918) ((xml-rpc (1 6 8))) "Weblog maintenance via XML-RPC APIs" single ((:url . "http://launchpad.net/weblogger-el") (:keywords "weblog" "blogger" "cms" "movable" "type" "openweblog" "blog")) "melpa"])
  (websocket . [(20140104 1438) nil "Emacs WebSocket client and server" single ((:keywords "communication" "websocket" "server")) "melpa"])
  (wedge-ws . [(20130930 647) nil "Wedge whitespace between columns in text" single ((:keywords "formatting" "indentation")) "melpa"])
  (weechat . [(20140219 526) ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) "Chat via WeeChat's relay protocol in Emacs" tar nil "melpa"])
  (wgrep . [(20140420 446) nil "Writable grep buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (wgrep-ack . [(20121201 530) ((wgrep (2 1 1))) "Writable ack-and-a-half buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ack.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (wgrep-ag . [(20131209 659) ((wgrep (2 1 5))) "Writable ag buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ag.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (wgrep-helm . [(20140528 1418) ((wgrep (2 1 1))) "Writable helm-grep-mode buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-helm.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (wgrep-pt . [(20140510 1531) ((wgrep (2 1 5))) "Writable pt buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-pt.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (whitespace-cleanup-mode . [(20131205 1117) nil "Intelligently call whitespace-cleanup on save" single ((:url . "https://github.com/purcell/whitespace-cleanup-mode") (:keywords "convenience")) "melpa"])
  (whole-line-or-region . [(20110901 130) nil "operate on current line if region undefined" single ((:keywords "kill" "yank" "cut" "copy" "paste" "whole" "lines")) "melpa"])
  (wid-edit+ . [(20131227 210) nil "Extensions to standard library `wid-edit.el'." single ((:url . "http://www.emacswiki.org/wid-edit%2b.el") (:keywords "widget" "color")) "melpa"])
  (wide-column . [(20120814 112) nil "Calls functions dependant on column position." single ((:keywords "minor mode" "cursor colour" "column width")) "melpa"])
  (wide-n . [(20131227 210) nil "Cycle among buffer restrictions" single ((:url . "http://www.emacswiki.org/wide-n.el") (:keywords "narrow" "restriction" "widen")) "melpa"])
  (widget-mvc . [(20130430 757) nil "MVC framework for the emacs widgets" single ((:keywords "lisp" "widget")) "melpa"])
  (wiki . [(20120807 1458) nil "hypertext authoring the WikiWay" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?WikiMode") (:keywords "hypermedia")) "melpa"])
  (wiki-nav . [(20140512 702) ((button-lock (1 0 0)) (nav-flash (1 0 0))) "Simple file navigation using [[WikiStrings]]" single ((:url . "http://github.com/rolandwalker/button-lock") (:keywords "mouse" "button" "hypermedia" "navigation")) "melpa"])
  (wimpy-del . [(20131227 211) nil "Require confirmation for large region deletion." single ((:url . "http://www.emacswiki.org/wimpy-del.el") (:keywords "region" "cut" "kill" "copy")) "melpa"])
  (win-switch . [(20130202 937) nil "fast, dynamic bindings for window-switching/resizing" single ((:url . "http://www.stat.cmu.edu/~genovese/emacs/win-switch/") (:keywords "window" "switch" "key bindings" "ergonomic" "efficient")) "melpa"])
  (windata . [(20080412 1455) nil "convert window configuration to list" single ((:keywords "convenience" "frames")) "melpa"])
  (window+ . [(20140216 1650) nil "Extensions to `window.el'." single ((:url . "http://www.emacswiki.org/window%2b.el") (:keywords "internal" "window")) "melpa"])
  (window-end-visible . [(20140508 1341) nil "Find the last visible point in a window" single ((:url . "http://github.com/rolandwalker/window-end-visible") (:keywords "extensions")) "melpa"])
  (window-jump . [(20140311 2215) nil "Move left/right/up/down through your windows." single ((:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience")) "melpa"])
  (window-layout . [(20130805 1854) nil "window layout manager" single ((:keywords "window" "layout")) "melpa"])
  (window-number . [(20140124 302) nil "Select windows by numbers." single ((:url . "http://www.emacswiki.org/emacs/download/window-number.el")) "melpa"])
  (window-numbering . [(20130902 930) nil "Numbered window shortcuts" single ((:url . "http://nschum.de/src/emacs/window-numbering-mode/") (:keywords "faces" "matching")) "melpa"])
  (windsize . [(20110728 1336) nil "Simple, intuitive window resizing" single ((:url . "http://github.com/grammati/windsize") (:keywords "window" "resizing" "convenience")) "melpa"])
  (winpoint . [(20131023 1013) nil "Remember buffer positions per-window, not per buffer" single ((:url . "https://github.com/jorgenschaefer/winpoint") (:keywords "convenience")) "melpa"])
  (wisp-mode . [(20140502 1401) nil "Tools for wisp: the Whitespace-to-Lisp preprocessor" single ((:keywords "languages" "lisp")) "melpa"])
  (wispjs-mode . [(20140103 1432) ((clojure-mode (0))) "Major mode for Wisp code." single ((:url . "https://github.com/krisajenkins/wispjs-mode")) "melpa"])
  (with-namespace . [(20130407 1122) ((dash (1 1 0)) (loop (1 1))) "interoperable elisp namespaces" single ((:keywords "namespaces")) "melpa"])
  (wolfram-mode . [(20140118 757) ((emacs (24 3))) "Mathematica editing and inferior mode." single ((:url . "https://github.com/kawabata/wolfram-mode/") (:keywords "languages" "processes" "tools")) "melpa"])
  (wonderland . [(20130912 1819) ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) "declarative configuration for Emacsen" single ((:url . "http://github.com/kurisuwhyte/emacs-wonderland") (:keywords "configuration" "profile" "wonderland")) "melpa"])
  (wordsmith-mode . [(20140203 427) nil "Syntax analysis and NLP text-processing in Emacs (OSX-only)" single nil "melpa"])
  (worf . [(20140424 2339) ((helm (1 5 3)) (ace-jump-mode (2 0))) "A warrior does not press so many keys! (in org-mode)" single ((:url . "https://github.com/abo-abo/worf") (:keywords "lisp")) "melpa"])
  (workgroups . [(20110726 941) nil "workgroups for windows (for Emacs)" single ((:keywords "session" "management" "window-configuration" "persistence")) "melpa"])
  (workgroups2 . [(20140311 1354) ((cl-lib (0 4))) "New workspaces for Emacs" tar ((:url . "https://github.com/pashinin/workgroups2") (:keywords "session" "management" "window-configuration" "persistence")) "melpa"])
  (world-time-mode . [(20140204 750) nil "show whole days of world-time diffs" single ((:keywords "tools" "calendar")) "melpa"])
  (wrap-region . [(20140116 2320) ((dash (1 0 3))) "Wrap text with punctation or tag" single ((:url . "http://github.com/rejeep/wrap-region") (:keywords "speed" "convenience")) "melpa"])
  (writegood-mode . [(20140213 848) nil "Polish up poor writing on the fly" single ((:url . "http://github.com/bnbeckwith/writegood-mode") (:keywords "writing" "weasel-words" "grammar")) "melpa"])
  (writeroom-mode . [(20140326 2059) nil "Minor mode for distraction-free writing" tar ((:keywords "text")) "melpa"])
  (wwtime . [(20120629 1350) nil "Insert a time of day with appropriate world-wide localization" single ((:keywords "time")) "melpa"])
  (x-dict . [(20091203 1023) nil "emacs interface for several online dictionaries" single nil "melpa"])
  (xcscope . [(20140510 1437) nil "cscope interface for (X)Emacs" single ((:url . "https://github.com/dkogan/xcscope.el") (:keywords "languages" "c")) "melpa"])
  (xkcd . [(20140505 511) ((json (1 3))) "View xkcd from Emacs" single ((:url . "https://github.com/vibhavp/emacs-xkcd") (:keywords "xkcd" "webcomic")) "melpa"])
  (xml-rpc . [(20130423 1356) nil "An elisp implementation of clientside XML-RPC" single ((:url . "http://launchpad.net/xml-rpc-el") (:keywords "xml" "rpc" "network")) "melpa"])
  (xmlgen . [(20130219 219) nil "A DSL for generating XML." single nil "melpa"])
  (xmlunicode . [(20140121 623) nil "Unicode support for XML" tar ((:keywords "utf-8" "unicode" "xml" "characters")) "melpa"])
  (xquery-mode . [(20140121 943) nil "A simple mode for editing xquery programs" tar nil "melpa"])
  (xterm-color . [(20130904 1826) nil "ANSI & XTERM 256 color support" single nil "melpa"])
  (xterm-frobs . [(20091211 1555) nil "manipulate xterm when running emacs in tty mode" single nil "melpa"])
  (yabin . [(20140205 1951) nil "Yet Another Bignum package (A thin wrapper of calc.el)." single ((:keywords "data")) "melpa"])
  (yagist . [(20140321 1512) ((json (1 2 0))) "Yet Another Emacs integration for gist.github.com" single ((:url . "https://github.com/mhayashi1120/yagist.el/raw/master/yagist.el") (:keywords "gist" "git" "github" "paste" "pastie" "pastebin")) "melpa"])
  (yalinum . [(20130217 243) nil "yet another display line numbers." single ((:keywords "convenience" "tools")) "melpa"])
  (yaml-mode . [(20130310 2101) nil "Major mode for editing YAML files" single ((:keywords "data" "yaml")) "melpa"])
  (yaoddmuse . [(20140306 1458) nil "Yet another oddmuse for Emacs" single ((:url . "http://www.emacswiki.org/emacs/download/yaoddmuse.el") (:keywords "yaoddmuse" "oddmuse")) "melpa"])
  (yard-mode . [(20130402 1727) nil "Minor mode for Ruby YARD comments" single ((:url . "https://github.com/pd/yard-mode.el")) "melpa"])
  (yari . [(20140206 611) nil "Yet Another RI interface for Emacs" single ((:keywords "tools")) "melpa"])
  (yascroll . [(20140313 808) ((cl-lib (0 3))) "Yet Another Scroll Bar Mode" single ((:keywords "convenience")) "melpa"])
  (yasnippet . [(20140514 1649) nil "Yet another snippet extension for Emacs." tar ((:url . "http://github.com/capitaomorte/yasnippet") (:keywords "convenience" "emulation")) "melpa"])
  (yaxception . [(20140327 409) nil "Provide framework about exception like Java for Elisp" single ((:url . "https://github.com/aki2o/yaxception") (:keywords "exception" "error" "signal")) "melpa"])
  (zeal-at-point . [(20131210 503) nil "Search the word at point with Zeal" single ((:url . "https://github.com/jinzhu/zeal-at-point")) "melpa"])
  (zeitgeist . [(20131228 1009) nil "No description available." single nil "melpa"])
  (zen-and-art-theme . [(20120622 737) nil "zen and art color theme for GNU Emacs 24" single nil "melpa"])
  (zenburn-theme . [(20140523 1304) nil "A low contrast color theme for Emacs." single ((:url . "http://github.com/bbatsov/zenburn-emacs")) "melpa"])
  (zencoding-mode . [(20140213 22) nil "Unfold CSS-selector-like expressions to markup" single ((:url . "https://github.com/rooney/zencoding") (:keywords "convenience")) "melpa"])
  (zlc . [(20130427 43) nil "Provides zsh like completion system to Emacs" single ((:keywords "matching" "convenience")) "melpa"])
  (znc . [(20130811 2058) ((cl-lib (0 2)) (erc (5 3))) "ZNC + ERC" single ((:url . "https://github.com/sshirokov/ZNC.el")) "melpa"])
  (zonokai-theme . [(20140526 2034) nil "blue based theme for emacs" single ((:url . "http://github.com/ZehCnaS34/zonokai.git")) "melpa"])
  (zoom-frm . [(20140101 56) ((frame-fns (0)) (frame-cmds (0))) "Commands to zoom frame font size." single ((:url . "http://www.emacswiki.org/zoom-frm.el") (:keywords "frames" "extensions" "convenience")) "melpa"])
  (zop-to-char . [(20140416 1015) ((cl-lib (0 5))) "A replacement of zap-to-char." single ((:url . "https://github.com/thierryvolpiatto/zop-to-char")) "melpa"])
  (zossima . [(20121123 1635) ((inf-ruby (2 2 3))) "Ruby from Emacs" tar ((:url . "https://github.com/technomancy/zossima") (:keywords "ruby" "convenience")) "melpa"])
  (zotelo . [(20140216 1138) nil "Manage Zotero collections from emacs" single ((:url . "https://github.com/vitoshka/zotelo") (:keywords "zotero" "emacs" "reftex" "bibtex" "mozrepl" "bibliography manager")) "melpa"])
  (zotxt . [(20140420 1034) nil "Tools to integrate emacs with Zotero via the zotxt plugin." tar nil "melpa"])
  (ztree . [(20140409 726) nil "Several text-tree applications" tar nil "melpa"])
  (ac-R . [(0 2) nil "Autocompletion routines for R" single "marmalade"])
  (ac-python . [(20110519) ((auto-complete (1 4))) "Simple Python Completion Source for Auto-Complete" single "marmalade"])
  (alpha . [(1 0) nil "increase frame transparency" single "marmalade"])
  (anything-R . [(0 1 2010) nil "anything-sources and some utilities for GNU R." single "marmalade"])
  (anything-complete . [(1 86) ((anything (1 287)) (anything-obsolete (0 1))) "completion with anything" single "marmalade"])
  (anything-config . [(0 4 1) nil "Predefined configurations for `anything.el'" single "marmalade"])
  (anything-el-swank-fuzzy . [(0 1 2009) ((anything (1 287)) (anything-complete (1 86))) "anything-sources for el-swank-fuzzy.el" single "marmalade"])
  (anything-extension . [(0 2) nil "Extension functions for anything.el" single "marmalade"])
  (anything-git . [(1 1 1) nil "Show git files in anything" single "marmalade"])
  (anything-git-goto . [(0 1 0) nil "Quick listing of:" single "marmalade"])
  (anything-ipython . [(0 1 2009) ((ipython (2927)) (anything (1 287))) "Ipython anything" single "marmalade"])
  (anything-match-plugin . [(1 27) nil "Humane match plug-in for anything" single "marmalade"])
  (anything-obsolete . [(0 1) nil "obsolete functions of anything" single "marmalade"])
  (anything-show-completion . [(20091119) nil "Show selection in buffer for anything completion" single "marmalade"])
  (assemblage-theme . [(20130715 621) nil "a dark theme for Emacs 24" single "marmalade"])
  (auto-complete-etags . [(0 2) ((auto-complete (1 3))) "Auto-complete etags" single "marmalade"])
  (auto-complete-octave . [(0 1) nil "Auto-complete for Octave" single "marmalade"])
  (auto-complete-verilog . [(0 0) nil "Verukig" single "marmalade"])
  (auto-highlight-symbol . [(1 55) nil "Automatic highlighting current symbol minor mode" single "marmalade"])
  (babcore . [(0 0 5) nil "Core Emacs configuration. This should be the minimum in every emacs config." single "marmalade"])
  (bang . [(0 1 0) nil "A modern list library for Emacs" single "marmalade"])
  (bar-cursor . [(1 1) nil "package used to switch block cursor to a bar" single "marmalade"])
  (bigint . [(1 0 0) nil "A simple bigint package for emacs" single "marmalade"])
  (cdlatex . [(4 0) nil "Fast input methods for LaTeX environments and math" single "marmalade"])
  (center-text . [(0 8) nil "Center the text in a fixed-width column" single "marmalade"])
  (citrus-mode . [(0 0 2) nil "Major mode for editing Citrus files" single "marmalade"])
  (cl-format . [(1 1) nil "CL format routine." tar "marmalade"])
  (clj-mode . [(0 9) nil "basic Major mode (clj) for Clojure code" single "marmalade"])
  (cljdoc . [(0 1 0) nil "eldoc mode for clojure" single "marmalade"])
  (clojure-here . [(0 11) nil "Clojure process in a buffer" single "marmalade"])
  (clojure-project . [(1 0) ((project-mode (1 0))) "Extends project-mode for Clojure projects" single "marmalade"])
  (clojure-project-mode . [(1 0) ((project-mode (1 0))) "Extends project-mode for Clojure projects" single "marmalade"])
  (clojurescript-mode . [(0 5) nil "Major mode for ClojureScript code" single "marmalade"])
  (closure-template-html-mode . [(0 1) nil "highlighting for google closure templates" single "marmalade"])
  (cmake-project . [(0 7) nil "Integrates CMake build process with Emacs" single "marmalade"])
  (cmuclojure . [(0 2) nil "Clojure process in a buffer" single "marmalade"])
  (color-file-completion . [(1 0 1) nil "add colors to file completion" single "marmalade"])
  (color-theme-active . [(0 0 1) ((color-theme (6 6 1))) "Active theme inspired by jEdit theme of the same name" single "marmalade"])
  (color-theme-actress . [(0 2 2) ((color-theme (6 6 1))) "A dark color theme for GNU Emacs." single "marmalade"])
  (color-theme-cobalt . [(0 0 2) ((color-theme (6 6 1))) "Cobalt Color Theme for Emacs" single "marmalade"])
  (color-theme-complexity . [(0 1 1) ((color-theme (6 6 0))) "A black and green color theme for Emacs." single "marmalade"])
  (color-theme-dg . [(0 1 0) ((color-theme (6 6 0))) "A black and green color theme for Emacs." single "marmalade"])
  (color-theme-dpaste . [(0 0 1) ((color-theme (6 6 1))) "Dpaste color theme for GNU Emacs." single "marmalade"])
  (color-theme-eclipse . [(0 0 2) ((color-theme (6 6 1))) "Eclipse color theme for GNU Emacs." single "marmalade"])
  (color-theme-emacs-revert-theme . [(0 1) nil "Color-theme revert to emacs colors" single "marmalade"])
  (color-theme-github . [(0 0 3) ((color-theme (6 6 1))) "Github color theme for GNU Emacs." single "marmalade"])
  (color-theme-gruber-darker . [(1) ((color-theme (6 6 1))) "Gruber Darker color theme for Emacs by Jason Blevins" single "marmalade"])
  (color-theme-heroku . [(1 0 0) nil "Heroku color theme" single "marmalade"])
  (color-theme-ir-black . [(1 0 1) ((color-theme (6 6 1))) "pastel color theme" single "marmalade"])
  (color-theme-library . [(0 0 10) ((color-theme (6 6 1))) "The real color theme functions" single "marmalade"])
  (color-theme-molokai . [(0 1) nil "Molokai color theme by Lloyd" single "marmalade"])
  (color-theme-monokai . [(0 0 5) ((color-theme (6 5 5))) "Monokai Color Theme for Emacs." single "marmalade"])
  (color-theme-railscasts . [(0 0 2) ((color-theme (6 6 1))) "Railscasts color theme for GNU Emacs." single "marmalade"])
  (color-theme-tango . [(0 0 2) ((color-theme (6 6 1))) "Tango palette color theme for GNU Emacs." single "marmalade"])
  (color-theme-tangotango . [(0 0 2) ((color-theme (6 6 1))) "Tango Palette color theme for Emacs." single "marmalade"])
  (color-theme-twilight . [(0 1) nil "Twilight Colour Theme for Emacs." single "marmalade"])
  (color-theme-vim-insert-mode . [(0 1) nil "Color theme VIM insert mode" single "marmalade"])
  (color-theme-wombat . [(0 0 1) ((color-theme (6 6 1))) "The wombat color theme for Emacs." single "marmalade"])
  (color-theme-x . [(1 3) nil "convert color themes to X11 resource settings" single "marmalade"])
  (colour-region . [(0 4) nil "Toggle regions of the buffer with different text snippets" single "marmalade"])
  (combinators . [(0 0 1) nil "" single "marmalade"])
  (comint-better-defaults . [(1 0) nil "better defaults for comint-derived modes" single "marmalade"])
  (command-frequency . [(1 1) nil "Track command frequencies" single "marmalade"])
  (command-stats . [(0 1) nil "Track frequency of commands executed in emacs" single "marmalade"])
  (command-t . [(0 0 1) ((find-file-in-project (3 2)) (popwin (0 4))) "Finds file in project using fuzzy search." single "marmalade"])
  (company-cmake . [(0 1) ((company (0 6 8))) "company-mode completion back-end for CMake" single "marmalade"])
  (config-block . [(0 0 1) nil "config-block is utility for individual settings (e.g. .emacs)." single "marmalade"])
  (control-lock . [(1 1 2) nil "Like caps-lock, but for your control key.  Give your pinky a rest!" single "marmalade"])
  (cppcheck . [(1 0) nil "run cppcheck putting hits in a grep buffer" single "marmalade"])
  (csv-mode . [(1 50) nil "major mode for editing comma-separated value files" single "marmalade"])
  (ctypes . [(1 2) nil "Enhanced Font lock support for custom defined types." single "marmalade"])
  (cubicle-mode . [(0 1) nil "Cubicle major mode for emacs" single "marmalade"])
  (cups . [(0 1) nil "CUPS features for Emacs" single "marmalade"])
  (current-story . [(0 1 0) nil "Track and insert current Pivotal Tracker" single "marmalade"])
  (cygwin-mount . [(2001) nil "Teach EMACS about cygwin styles and mount points." single "marmalade"])
  (debian-changelog-mode . [(1 96) nil "major mode for Debian changelog files." single "marmalade"])
  (deep-thought-theme . [(0 1 1) nil "Emacs 24 theme with the Answer to The Ultimate Question" single "marmalade"])
  (descbinds-anything . [(1 5) ((anything (1 287))) "Yet Another `describe-bindings' with `anything'." single "marmalade"])
  (desktop . [(0 1) nil "save partial status of Emacs when killed" single "marmalade"])
  (diatheke . [(1 0) nil "A minor mode using the diatheke command-line Bible tool" single "marmalade"])
  (discord . [(0 5) nil "Discordian dates for calendar" single "marmalade"])
  (dix . [(0 1 0) nil "minor mode for editing Apertium XML dictionary files" single "marmalade"])
  (doctags . [(0 1) nil "Generation of tags documentation in Doxygen syntax" single "marmalade"])
  (dotassoc . [(0 0 1) nil "dot access embedded alists" single "marmalade"])
  (dummy-package . [(0 0 3) ((timeclock (2 6 1))) "a fake package for the marmalade test suite" single "marmalade"])
  (durendal . [(0 2) ((clojure-mode (1 7)) (slime (20100404)) (paredit (22))) "A bucket of tricks for Clojure and Slime." single "marmalade"])
  (ecb-snapshot . [(20120830) nil "Emacs Code Browser CVS snapshot" tar "marmalade"])
  (eh-basic . [(0 0 2) ((starter-kit (2 0 2)) (browse-kill-ring (1 3 1))) "tuamshu's emacs basic configure" tar "marmalade"])
  (eh-common . [(0 0 1) nil "Tumashu's  emacs functions" single "marmalade"])
  (eh-functions . [(0 0 1) ((starter-kit (2 0 2))) "tuamshu's emacs functions" tar "marmalade"])
  (eh-gnus . [(0 0 6) nil "tuamshu's gnus configure" tar "marmalade"])
  (eh-keybindings . [(0 0 1) ((eh-functions (0 0 1)) (starter-kit-bindings (2 0 2))) "tuamshu's emacs keybindings" tar "marmalade"])
  (eieio . [(1 4) nil "Enhanced Implementation of Emacs Interpreted Objects" single "marmalade"])
  (el-init . [(20130416) nil "Loader for configuration files" tar "marmalade"])
  (elisp-cache . [(1 15) nil "Faster emacs startup through byte-compiling." single "marmalade"])
  (elpa-mirror . [(1 1 2) nil "ELPA mirror from locally installed packages is easy" tar "marmalade"])
  (elpakit . [(1 0 7) ((anaphora (0 0 6)) (dash (1 0 3))) "package archive builder" single "marmalade"])
  (emacs-droid . [(0 0 0) nil "Android application development tools for Emacs" single "marmalade"])
  (emacsd-tile . [(0 1) nil "tiling windows for emacs" single "marmalade"])
  (emstar . [(1 4) nil "Casual game, like a brainy Pac-Man" tar "marmalade"])
  (erc-nick-notify . [(0 2 1) nil "Notify popup for ERC" single "marmalade"])
  (ert . [(0) nil "Emacs Lisp Regression Testing" single "marmalade"])
  (ert-x . [(0) ((ert (0))) "Staging area for experimental extensions to ERT" single "marmalade"])
  (eshell-fringe-status . [(1 0 0) nil "Show last status in fringe" single "marmalade"])
  (eshell-manual . [(1348477812) nil "An updated manual for Eshell." tar "marmalade"])
  (esk . [(0 1) nil "Emacs Search Kit - An easy way to find files and/or strings in a project" tar "marmalade"])
  (etags-select . [(1 13) nil "Select from multiple tags" single "marmalade"])
  (evernote-mode . [(0 41) nil "Evernote client for Emacs" tar "marmalade"])
  (everything . [(0 1 5) nil "Bridge to MS Windows desktop-search engine Everything" single "marmalade"])
  (exercism . [(0 0 1) nil "An Emacs mode for submitting current file to exercism.io" single "marmalade"])
  (expectations-mode . [(0 0 4) ((nrepl (0 1 5)) (clojure-mode (1 11))) "Minor mode for expectations tests" single "marmalade"])
  (fancy-mode . [(0 1) nil "Major mode for programming with the Fancy language." single "marmalade"])
  (fic-ext-mode . [(0 1) nil "Show FIXME/TODO/BUG(...) in special face only in comments and strings" single "marmalade"])
  (find-file-in-git-repo . [(0 1 2) nil "Utility to find files in a git repo" single "marmalade"])
  (flycheck-tcl . [(0 4) ((flycheck (0 17))) "A flycheck checker for Tcl using ActiveState's tclchecker" single "marmalade"])
  (flymake . [(0 4 16) nil "a universal on-the-fly syntax checker" single "marmalade"])
  (flymake-checkers . [(0 3) nil "Flymake reloaded with useful checkers" single "marmalade"])
  (flymake-csslint . [(1 1 0) ((flymake (0 3))) "making flymake work with CSSLint" tar "marmalade"])
  (flymake-d . [(0 1) nil "A flymake handler for d-mode files" single "marmalade"])
  (flymake-less . [(0 3) ((less-css-mode (0 15))) "Flymake handler for LESS stylesheets (lesscss.org)" single "marmalade"])
  (fm . [(20130612 1) nil "follow mode for compilation/output buffers" single "marmalade"])
  (foo . [(3 0 20) ((haml-mode (3 0 20))) "Sass major mode" single "marmalade"])
  (fsvn . [(0 9 13) nil "Another frontend of subversion." tar "marmalade"])
  (gccsense . [(0 2) nil "GCCSense client for Emacs" single "marmalade"])
  (gecf . [(0 1 0) nil "G\366ktu's Emacs configuration framework." single "marmalade"])
  (generate-autoloads . [(0 0 10) nil "A package to help you lazy-load everything" single "marmalade"])
  (gimme . [(2 1) nil "The XMMS2 interface we all love! Check out http://gimmeplayer.org for more info." tar "marmalade"])
  (git-commit . [(0 1) nil "Major mode for editing git commit messages" single "marmalade"])
  (github-theme . [(0 0 3) nil "Github color theme for GNU Emacs 24" single "marmalade"])
  (gnusnotes . [(0 91) nil "Adding per-message notes in gnus summary buffer" single "marmalade"])
  (gopher . [(0 0 2) nil "easily access and navigate Gopher servers" single "marmalade"])
  (gratuitous-dark-theme . [(1 3) nil "A theme originally by 'cofi' from #emacs, Freenode. It is a combination of Monokai and several other themes. The modeline has been modelled after AwesomeWM because it looks cool." single "marmalade"])
  (grep-o-matic . [(1 0 6) nil "auto grep word under cursor" single "marmalade"])
  (groovy-mode . [(201203310931) nil "Groovy mode derived mode" single "marmalade"])
  (grr . [(1 0 0) nil "Simple Growl notifications for Emacs and Mac OS X" single "marmalade"])
  (gtags . [(3 3) nil "gtags facility for Emacs" single "marmalade"])
  (guess-offset . [(0 1 1) nil "Automatically determine c-basic-offset" single "marmalade"])
  (guile-scheme . [(0 1) nil "Guile Scheme editing mode" single "marmalade"])
  (helm-delicious . [(1 3) nil "helm extensions for delicious bookmarks" single "marmalade"])
  (hideshowvis . [(0 3) nil "Add markers to the fringe for regions foldable by hideshow.el" single "marmalade"])
  (highline . [(7 2 2) nil "minor mode to highlight current line in buffer" single "marmalade"])
  (hippie-expand-haskell . [(0 0 1) nil "Hippie expand try function using ghc's completion function." single "marmalade"])
  (hjkl-mode . [(0 1) ((key-chord (0 5))) "import some vim's key bindings" tar "marmalade"])
  (hook-utils . [(1 0) nil "Add a few utility functions for manipulating hooks" single "marmalade"])
  (htmlfontify . [(0 21) nil "htmlise a buffer/source tree with optional hyperlinks" single "marmalade"])
  (httpd . [(1 0 1) nil "HTTP/1.0 web server for emacs" single "marmalade"])
  (huskie . [(0 0 2) ((anaphora (0 0 6))) "chainsaw powered logging" single "marmalade"])
  (idle-highlight . [(1 0) nil "highlight the word the point is on" single "marmalade"])
  (ido-better-flex . [(0 2) nil "A better flex (fuzzy) algorithm for Ido." single "marmalade"])
  (ido-yes-or-no . [(1 1) ((ido (0))) "Use Ido to answer yes-or-no questions" single "marmalade"])
  (imgur . [(0 1) ((anything (1 287))) "imgur client for Emacs" single "marmalade"])
  (inf-groovy . [(2 0) nil "minor-mode that adds some Grails project management to a grails project" single "marmalade"])
  (inform-mode . [(1 6 2) nil "Major mode for Inform 6 interactive fiction code" single "marmalade"])
  (initchart . [(0 1 1) ((cl-lib (0 3))) "Emacs' init process performance visualization" single "marmalade"])
  (ipython . [(2927) nil "Adds support for IPython to python-mode.el" single "marmalade"])
  (isea . [(0 0 2) ((elpakit (0 0 18))) "interactive server eval at mode, a comint for a daemonized emacs" single "marmalade"])
  (issue-tracker . [(0 0 1) nil "Poor man's issue tracker" tar "marmalade"])
  (jam-mode . [(0 3) nil "Font-lock support for Jam files" single "marmalade"])
  (jasmin . [(1 2) nil "major editing mode for Jasmin Java bytecode assembler files" single "marmalade"])
  (java-file-create . [(1 0) nil "automatically insert contents of empty java files" single "marmalade"])
  (javap . [(8) nil "Javap major mode" single "marmalade"])
  (javarun . [(0 1 1) nil "Minor mode for quick development of Java programs" single "marmalade"])
  (jb-misc-macros . [(0 4) ((macro-utils (1 0))) "Miscellaneous macros" single "marmalade"])
  (jcuken-fix . [(1 0) nil "Map Modifier-CyrillicLetter to the underlying Modifier-LatinLetter." single "marmalade"])
  (journal . [(1 2 1) nil "a simple org-mode based journaling mode" single "marmalade"])
  (json . [(1 2) nil "JavaScript Object Notation parser / generator" single "marmalade"])
  (jujube-theme . [(0 1) nil "Pastel theme loosely based on jellybeans" single "marmalade"])
  (key-choices . [(0 201) ((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1))) "Key Choices -- Also Viper has different colors in different modes" single "marmalade"])
  (keywiz . [(1 4) nil "Emacs key sequence quiz" single "marmalade"])
  (lang-refactor . [(0 1 1) nil "Simple refactorings, primarily for Perl" single "marmalade"])
  (late-night-theme . [(0 0) nil "Late Night theme for Emacs 24" single "marmalade"])
  (latest-clojars . [(0 3) nil "Clojure dependency resolver" single "marmalade"])
  (layout-restore . [(0 4) nil "keep window configuration as layout and restore it simply." single "marmalade"])
  (legalese . [(20120706) nil "Add legalese to your program files" single "marmalade"])
  (let-recur . [(0 0 5) nil "Simplified implementation of recur" single "marmalade"])
  (linear-undo . [(5 2) nil "Intuitive undo/redo." single "marmalade"])
  (lineno . [(0 1) nil "Alternate mode to display line numbers." single "marmalade"])
  (linum-off . [(0 1) nil "Provides an interface for turning line-numbering off" single "marmalade"])
  (lisp-editing . [(0 0 5) nil "lisp editing tools" single "marmalade"])
  (lisp-infection . [(0 0 10) nil "Commands to *enhance* S-exp editing" single "marmalade"])
  (lyskom . [(20131008) nil "LysKOM elisp client." single "marmalade"])
  (mac-key-mode . [(2010 1 3) nil "provide mac-style key bindings on Carbon Emacs" single "marmalade"])
  (macro-utils . [(1 0) nil "Utilities for writing macros." single "marmalade"])
  (mactag . [(0 0 1) nil "Mode for automatically handle multiple tags files with Mactag rubygem" single "marmalade"])
  (magit-gh-pulls . [(0 3) ((gh (0 4 3)) (magit (1 1 0))) "GitHub pull requests extension for Magit" single "marmalade"])
  (magit-simple-keys . [(1 0 0) ((magit (1 0 0))) "simple keybindings for Magit" single "marmalade"])
  (magithub . [(0 2) ((magit (0 8)) (json (1 2))) "Magit extensions for using GitHub" single "marmalade"])
  (maildir . [(0 0 23) ((kv (0 0 17)) (dash (2 3 0)) (s (1 9 0)) (noflet (0 0 8))) "Simple maildir based MUA." tar "marmalade"])
  (makefile-runner . [(1 1 2) nil "Searches for Makefile and fetches targets" single "marmalade"])
  (margo . [(2012 9 18) ((web (0 1 8)) (json (1 2))) "Client for MarGo, providing Go utilities" single "marmalade"])
  (mark . [(0 3) ((fm (1 0))) "Navigate and visualize the mark-ring" single "marmalade"])
  (mark-more-like-this . [(1 0) nil "Mark additional regions in buffer matching current region." single "marmalade"])
  (marmalade-service . [(2 0 9) ((dash (1 1 0)) (s (1 6 0)) (elnode (0 9 9 6 10))) "The Marmalade package store service." tar "marmalade"])
  (marmalade-test . [(0 0 1) nil "A test tarball package." tar "marmalade"])
  (master-mode . [(0 1) nil "Become an Emacs master" single "marmalade"])
  (mc-jump . [(1 0 0) nil "like \"jump-char\", but \"multiple-cursors\" friendly" single "marmalade"])
  (mldonkey . [(0 0 4) nil "Multi-networks peer-to-peer client." tar "marmalade"])
  (mode-compile . [(2 29) nil "Smart command for compiling files" single "marmalade"])
  (moinmoin-mode . [(1 0) ((screen-lines (0 55))) "a major mode to edit MoinMoin wiki pages" single "marmalade"])
  (mongo-elnode . [(0 5 0) ((mongo (0 5)) (elnode (0 9 9))) "elnode adapter for mongo-el" single "marmalade"])
  (my-packages . [(0 1 0) nil "Package Initialization." single "marmalade"])
  (namakemono . [(0 0 1) nil "utility function set for namakemono" single "marmalade"])
  (navigate . [(0 1 5) nil "Seamlessly navigate between Emacs and tmux" single "marmalade"])
  (no-easy-keys . [(1 0 2) nil "Learn the proper Emacs movement keys" single "marmalade"])
  (nose-mode . [(0 1) ((nose (0 1 1))) "Minor mode for running nose tests." tar "marmalade"])
  (notify . [(2010 8 20) nil "notification front-end" single "marmalade"])
  (nrepl . [(0 2 0) ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 1 0)) (pkg-info (0 1))) "Client for Clojure nREPL" single "marmalade"])
  (nrepl-decompile . [(0 0 1) ((nrepl (0 1 7)) (javap-mode (9))) "decompilation extension for nrepl.el" single "marmalade"])
  (nrepl-discover . [(0 0 1) nil "Client to load commands from nrepl server" single "marmalade"])
  (ntcmd . [(1 0) nil "major mode for editing cmd scripts" single "marmalade"])
  (nurumacs . [(3 5 4) nil "smooth-scrolling and minimap, like sublime editor" single "marmalade"])
  (nzenburn-theme . [(20130513) nil "A low contrast color theme for Emacs." single "marmalade"])
  (occur-default-current-word . [(1 0) nil "Have M-x occur default to the word at point" single "marmalade"])
  (oddmuse . [(20090222) nil "edit pages on an Oddmuse wiki" single "marmalade"])
  (org-blog . [(1 18 1 1) nil "create and publish a blog with org-mode" single "marmalade"])
  (org-email . [(1 0) nil "use org for an email database" single "marmalade"])
  (org-mime . [(20120112) nil "org html export for text/html MIME emails" single "marmalade"])
  (org-presie . [(0 0 5) ((framesize (0 0 1)) (eimp (1 4 0)) (org (7 8 9))) "simple presentation with an org file" single "marmalade"])
  (org-table-comment . [(0 2) nil "Org table comment modes." single "marmalade"])
  (org2nikola . [(0 0 8) nil "export html and meta data used by static blog like nikola from org file" tar "marmalade"])
  (otp . [(1 0) nil "a one-time password creator" single "marmalade"])
  (oz . [(16513) nil "Major mode for editing Oz programs" tar "marmalade"])
  (package . [(1 0 1) ((tabulated-list (1 0))) "Simple package system for Emacs" single "marmalade"])
  (package-store . [(0 3) nil "a package cache" single "marmalade"])
  (palimpsest-mode . [(0 8) nil "Various deletion strategies when editing" single "marmalade"])
  (parenface-plus . [(1 1) nil "Provide a face for parens in lispy modes." tar "marmalade"])
  (parenface-reversion . [(1 2) nil "Provide a face for parens in lisp modes." single "marmalade"])
  (parenface2 . [(1 1) nil "Provide a face for parens in lisp modes." single "marmalade"])
  (parscope . [(0 1 0) nil "Minor mode for showing the current scope in Lisp-like languages." single "marmalade"])
  (pbcopy . [(0 1 0) nil "OS X clipboard integration for Emacs" single "marmalade"])
  (pc-mode . [(0 1) nil "major mode for editing PC code," single "marmalade"])
  (pde . [(0 2 16) nil "Perl Development Environment" tar "marmalade"])
  (peep-open . [(0 0 2) nil "PeepOpen plugin for emacs." single "marmalade"])
  (pep8 . [(1 2) nil "run the python pep8 checker putting hits in a grep buffer" single "marmalade"])
  (perl-myvar . [(1 23) nil "Declare lexicaly scoped vars as my()." single "marmalade"])
  (perlcritic . [(1 10) nil "minor mode for Perl::Critic integration" single "marmalade"])
  (phantomjs . [(0 0 11) nil "Control phantomjs from Emacs			" tar "marmalade"])
  (php-completion . [(0 3) nil "complete everything PHP with Anything.el" single "marmalade"])
  (php-extras . [(2 2 0 20140405) ((php-mode (1 5 0))) "Extra features for `php-mode'" tar "marmalade"])
  (pickup . [(0 0 3) nil "pickup file." single "marmalade"])
  (pinboard . [(0 0 1) nil "get stuff from pinboard" single "marmalade"])
  (pkg-info-dummy-package . [(3 4 2 1) nil "pkg-info: Dummy package for unit tests" single "marmalade"])
  (po-elscreen . [(1 4 6) nil "Screen for Emacsen(this is not original. original is http://www.morishima.net/~naoto/elscreen-en/?lang=en)" single "marmalade"])
  (pod-mode . [(20121117 2120) nil "Major mode for editing .pod-files." tar "marmalade"])
  (pretty-mode-plus . [(1 2) nil "Redisplay parts of the buffer as pretty symbols." tar "marmalade"])
  (project . [(1 0) nil "Keep track of the current project" single "marmalade"])
  (prolog . [(1 22) nil "major mode for editing and running Prolog (and Mercury) code" single "marmalade"])
  (proxy-mode . [(0 9) nil "Provides proxy minor mode." single "marmalade"])
  (ps-ccrypt . [(1 10) nil "reading/writing/loading encrypted files" tar "marmalade"])
  (psgml . [(1 4 1) nil "Lennart Staflin's Psgml package, with Elisp syntax and sgml-validate fixed for Emacsen >=24." tar "marmalade"])
  (purple-haze-theme . [(20130930 36) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single "marmalade"])
  (pycomplete . [(1 0) nil "Complete symbols at point using Pymacs." single "marmalade"])
  (pyde . [(0 6) ((pymacs (0 25)) (auto-complete (1 4)) (yasnippet (0 8)) (fuzzy (0 1)) (pyvirtualenv (1 0))) "Python Development Environment" single "marmalade"])
  (pyflakes . [(1 0) nil "run the python pyflakes checker putting hits in a grep buffer" single "marmalade"])
  (pymacs . [(0 25) nil "Interface between Emacs Lisp and Python" single "marmalade"])
  (pysmell . [(0 7 2) nil "Complete python code using heuristic static analysis" single "marmalade"])
  (pytest . [(0 2 1) nil "Easy Python test running in Emacs" single "marmalade"])
  (python . [(20120402) nil "Python's flying circus support for Emacs" single "marmalade"])
  (python-mode . [(6 1 3) nil "An Emacs mode for editing Python code" tar "marmalade"])
  (python-pep8 . [(1 1) nil "minor mode for running `pep8'" single "marmalade"])
  (python-pylint . [(1 1) nil "minor mode for running `pylint'" single "marmalade"])
  (pyvirtualenv . [(1 1) nil "Python Pyvirtualenv support" single "marmalade"])
  (qsimpleq-theme . [(0 1 3) nil "Based on solarized color theme for Emacs." single "marmalade"])
  (quack . [(0 42) nil "enhanced support for editing and running Scheme code" single "marmalade"])
  (r5rs . [(1 0) nil "Browse documentation from the R5RS Revised5 Report" single "marmalade"])
  (rcirc-robots . [(0 0 7) ((kv (0 0 8)) (anaphora (0 0 5))) "robots based on rcirc irc" single "marmalade"])
  (rcirc-ssh . [(0 0 7) ((kv (0 0 3))) "do irc over ssh sessions" single "marmalade"])
  (rcirc-ucomplete . [(1 0 1) nil "Unambiguous non-cycling completion for rcirc" single "marmalade"])
  (rect-mark . [(1 4) nil "Mark a rectangle of text with highlighting." single "marmalade"])
  (region-list-edit . [(20100530 808) nil "Add/delete a region into/from a region list, such as ((4 . 7) (11 . 15) (17 . 17) (20 . 25))." single "marmalade"])
  (remember-theme . [(20140122 1500) nil "Remembers the last theme in use and re-loads for the next session." single "marmalade"])
  (repository-root . [(1 0 4) nil "deduce the repository root directory for a given file" single "marmalade"])
  (ruby-mode . [(1 1) nil "ruby-mode package" tar "marmalade"])
  (rubyinterpol . [(0 1) nil "Ruby-like String Interpolation for format" single "marmalade"])
  (rw-hunspell . [(0 2) nil "special functions for Hunspell in ispell.el" single "marmalade"])
  (rw-ispell . [(0 1) nil "additional functions for ispell.el" single "marmalade"])
  (rw-language-and-country-codes . [(0 1) nil "Language & Country Codes" single "marmalade"])
  (save-packages . [(0 20121012) nil "save and restore installed packages" single "marmalade"])
  (sawfish . [(1 32) nil "Sawfish mode." single "marmalade"])
  (scratch-persist . [(1 1) nil "persist the scratch buffer across sessions" single "marmalade"])
  (screen-lines . [(0 55) nil "a minor mode for screen-line-based point motion" single "marmalade"])
  (scrolloff . [(1 0) nil "This mode ofers vim-like scrolloff function" single "marmalade"])
  (sea-before-storm-theme . [(0 3) nil "Sea Before Storm color theme for Emacs 24" single "marmalade"])
  (sequence . [(0 0 1) nil "makes sequences of numbers" single "marmalade"])
  (session-manager . [(0 5) nil "Support for the Gnome Session Manager" single "marmalade"])
  (setup-cygwin . [(21 0) nil "Set up Emacs for using Cygwin" single "marmalade"])
  (shoes-off . [(0 1 8) ((kv (0 0 5)) (anaphora (0 0 4))) "irc bouncer" single "marmalade"])
  (simple-mode-line . [(0 3) nil "Simplified Mode Line for Emacs 24" single "marmalade"])
  (skinny . [(0 0 6) ((elnode (0 9 9 6 1)) (creole (0 8 17))) "a blog engine with elnode" single "marmalade"])
  (slime-clj . [(0 1 6) nil "slime extensions for swank-clj" single "marmalade"])
  (slime-fuzzy . [(20100404) ((slime (20100404))) "Fuzzy symbol completion for Slime" single "marmalade"])
  (slime-js . [(0 0 1) ((slime-repl (20100404)) (slime (20100404))) "Slime extension for swank-js." single "marmalade"])
  (slime-repl . [(20100404) ((slime (20100404))) "Read-Eval-Print Loop written in Emacs Lisp" single "marmalade"])
  (slime-scratch . [(1 0 0) ((slime (20100404))) "Imitate Emacs' *scratch* buffer" single "marmalade"])
  (slough . [(0 1) ((nrepl (0 1 7)) (smartparens (1 4 3))) "package for slough - this is for a secret TW thing" single "marmalade"])
  (smart-whitespace-comment-fixup . [(1 0) nil "Enables advice around yanking/killing lines that auto-indents and formats properly" single "marmalade"])
  (smarter-compile . [(2012 4 9) nil "a smarter wrapper for `compile'" single "marmalade"])
  (sml-modeline . [(0 5) nil "Show position in a scrollbar like way in mode-line" single "marmalade"])
  (smtpmail-multi . [(0 6) nil "Use different smtp servers for sending mail" single "marmalade"])
  (sokoban . [(1 23) nil "Play the Sokoban game in emacs" single "marmalade"])
  (steady-theme . [(0 1 0) nil "A steady theme for Emacs" single "marmalade"])
  (sublime . [(0 0 7) ((coffee-mode (0 3 0)) (find-file-in-project (3 0)) (haml-mode (3 0 14)) (ido-ubiquitous (1 0)) (less-css-mode (0 6)) (magit (1 1 1)) (markdown-mode (1 8 1)) (monokai-theme (0 0 6)) (paredit (22)) (sass-mode (3 0 14)) (smex (1 1 2)) (yaml-mode (0 0 7)) (yasnippet (0 6 1))) "REQUIRES EMACS 24 - Sublime Text 2 Emulation for Emacs" tar "marmalade"])
  (sumatra-forward . [(2008 10 8) nil "Provides Sumatra Forward search" single "marmalade"])
  (swank-cdt . [(1 0 1) nil "swank-cdt helper functions" single "marmalade"])
  (swarmhacker . [(0 0 1) nil "simple swarm chat" single "marmalade"])
  (symbols-mode . [(0 3) nil "List symbols of object files" single "marmalade"])
  (tabkey2 . [(1 40) nil "Use second tab key pressed for what you want" single "marmalade"])
  (tango-2 . [(1 0 0) nil "Tango 2 color theme for GNU Emacs 24" single "marmalade"])
  (tbemail . [(0 2) nil "Provide syntax highlighting for email editing via" single "marmalade"])
  (text-language . [(0 20121008) nil "tracking, setting, guessing language of text" single "marmalade"])
  (timestamper . [(0 1 0) nil "A minor mode for easy timelogging" single "marmalade"])
  (tintin-mode . [(1 0 0) nil "Mayor mode for editing tintin++ scripts" single "marmalade"])
  (tron-theme . [(12) nil "A theme loosely based on Tron: Legacy colors" single "marmalade"])
  (troncle . [(0 1 2) ((cider (0 5 0))) "Emacs convenience functions for tracing clojure code" single "marmalade"])
  (tsql . [(1 0) nil "customizes sql.el for T-SQL" single "marmalade"])
  (ttl-mode . [(0 1) nil "mode for Turtle(RDF)" single "marmalade"])
  (typescript . [(0 1 1) nil "Major mode for editing typescript" single "marmalade"])
  (typing-practice . [(0 1) nil "Typing practice" single "marmalade"])
  (typopunct . [(1 0) nil "Automatic typographical punctuation marks" single "marmalade"])
  (uci-mode . [(1 0 0) nil "Major mode for UCI configuration files" single "marmalade"])
  (vcard . [(0 1) nil "vcard parsing and display routines" single "marmalade"])
  (vimpulse . [(0 5) nil "emulates Vim's most useful features" single "marmalade"])
  (viper-in-more-modes . [(0 1 3) nil "vi-like keybindings for various Emacs modes" single "marmalade"])
  (visible-color-code . [(0 0 1) nil "color code strings in current buffer, this elisp show you one as real color." single "marmalade"])
  (weather . [(2012 3 27 2) nil "Get weather reports via worldweatheronline.com" single "marmalade"])
  (wget . [(1 94) nil "Emacs-wget is an interface program of GNU wget on Emacs." tar "marmalade"])
  (wikidoc . [(0 8 1) nil "use elisp doc strings to make other documentation" single "marmalade"])
  (window-margin . [(0 1) nil "automatic margins for visual-line-mode wrapping" single "marmalade"])
  (winpoint-ignore-dired . [(1 1) ((winpoint (1 0))) "Have winpoint ignore dired-mode buffers" single "marmalade"])
  (wisp . [(0 1 4) nil "Tools for wisp: the Whitespace-to-Lisp preprocessor" single "marmalade"])
  (workspaces . [(0 1) nil "Workspaces for Emacsen" single "marmalade"])
  (ws-trim . [(1 4) nil "Tools and minor mode to trim whitespace on text lines" single "marmalade"])
  (wxwidgets-help . [(0 0 3) nil "Look up wxWidgets API by using local html manual." tar "marmalade"])
  (xlicense . [(1 1) nil "Insert pre-defined license text" tar "marmalade"])
  (xml-gen . [(0 4) nil "A DSL for generating XML." single "marmalade"])
  (yas-jit . [(0 8 3) nil "Loads Yasnippets on demand (makes start up faster)" single "marmalade"])
  (yasnippet-bundle . [(0 6 1) nil "Yet another snippet extension (Auto compiled bundle)" single "marmalade"])
  (zen-mode . [(20120627) nil "remove/restore Emacs distractions quickly" tar "marmalade"])
  (zjl-hl . [(20121028 1901) ((highlight (21 0)) (region-list-edit (20100530 808))) "Highlight variable and function call and others in c/emacs, make life easy." single "marmalade"])
  (zone-matrix . [(0 0 1) nil "Matrix themed Zone mode" tar "marmalade"])
  (xpm . [(1 0 1) nil "edit XPM images" tar ((:keywords "multimedia" "xpm") (:url . "http://elpa.gnu.org/packages/xpm.html")) "gnu"])
  (xclip . [(1 3) nil "use xclip to copy&paste" single ((:url . "http://elpa.gnu.org/packages/xclip.html") (:keywords "convenience" "tools")) "gnu"])
  (wpuzzle . [(1 1) nil "find as many word in a given time" single ((:url . "http://elpa.gnu.org/packages/wpuzzle.html") (:keywords)) "gnu"])
  (wisi . [(1 0 4) ((cl-lib (0 4)) (emacs (24 2))) "Utilities for implementing an indentation/navigation engine using a generalized LALR parser" tar ((:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) "gnu"])
  (windresize . [(0 1) nil "Resize windows interactively" single ((:url . "http://elpa.gnu.org/packages/windresize.html") (:keywords "window")) "gnu"])
  (w3 . [(4 0 49) nil "Fully customizable, largely undocumented web browser for Emacs" tar ((:keywords "faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia") (:url . "http://elpa.gnu.org/packages/w3.html")) "gnu"])
  (uni-confusables . [(0 1) nil "Unicode confusables table" tar ((:url . "http://elpa.gnu.org/packages/uni-confusables.html")) "gnu"])
  (trie . [(0 2 6) ((tNFA (0 1 1)) (heap (0 3))) "Trie data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures trie" "ternary search tree" "tree" "completion" "regexp")) "gnu"])
  (temp-buffer-browse . [(1 2) nil "temp buffer browse mode" single ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html") (:keywords "convenience")) "gnu"])
  (tNFA . [(0 1 1) ((queue (0 1))) "Tagged non-deterministic finite-state automata" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures tnfa" "nfa" "dfa" "finite state automata" "automata" "regexp")) "gnu"])
  (svg-clock . [(0 5) nil "Analog clock using Scalable Vector Graphics" single ((:url . "http://elpa.gnu.org/packages/svg-clock.html") (:keywords "demo" "svg" "clock")) "gnu"])
  (sml-mode . [(6 4) nil "Major mode for editing (Standard) ML" single ((:url . "http://elpa.gnu.org/packages/sml-mode.html") (:keywords "sml")) "gnu"])
  (sisu-mode . [(3 0 3) nil "Major mode for SiSU markup text" single ((:url . "http://elpa.gnu.org/packages/sisu-mode.html") (:keywords "text" "processes" "tools")) "gnu"])
  (shen-mode . [(0 1) nil "A major mode for editing shen source code" tar ((:keywords "languages" "shen") (:url . "http://elpa.gnu.org/packages/shen-mode.html")) "gnu"])
  (rudel . [(0 3) nil "A collaborative editing framework for Emacs" tar ((:keywords "rudel" "collaboration") (:url . "http://rudel.sourceforge.net/")) "gnu"])
  (register-list . [(0 1) nil "Interactively list/edit registers" single ((:url . "http://elpa.gnu.org/packages/register-list.html") (:keywords "register")) "gnu"])
  (rainbow-mode . [(0 9) nil "Colorize color names in buffers" single ((:url . "http://elpa.gnu.org/packages/rainbow-mode.html") (:keywords "faces")) "gnu"])
  (queue . [(0 1 1) nil "Queue data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "data structures" "queue")) "gnu"])
  (quarter-plane . [(0 1) nil "Minor mode for quarter-plane style editing" single ((:url . "http://elpa.gnu.org/packages/quarter-plane.html") (:keywords "convenience" "wp")) "gnu"])
  (poker . [(0 1) nil "Texas hold'em poker" single ((:url . "http://elpa.gnu.org/packages/poker.html") (:keywords "games")) "gnu"])
  (osc . [(0 1) nil "Open Sound Control protocol library" single ((:url . "http://elpa.gnu.org/packages/osc.html") (:keywords "comm" "processes" "multimedia")) "gnu"])
  (org . [(20140526) nil "Outline-based notes management and organizer" tar nil "gnu"])
  (omn-mode . [(1 0) nil "Support for OWL Manchester Notation" single ((:url . "http://elpa.gnu.org/packages/omn-mode.html") (:keywords)) "gnu"])
  (oauth2 . [(0 10) nil "OAuth 2.0 Authorization Protocol" single ((:url . "http://elpa.gnu.org/packages/oauth2.html") (:keywords "comm")) "gnu"])
  (num3-mode . [(1 2) nil "highlight groups of digits in long numbers" single ((:url . "http://elpa.gnu.org/packages/num3-mode.html") (:keywords "faces" "minor-mode")) "gnu"])
  (notes-mode . [(1 30) nil "Indexing system for on-line note-taking" tar ((:url . "http://elpa.gnu.org/packages/notes-mode.html")) "gnu"])
  (nlinum . [(1 3) nil "Show line numbers in the margin" single ((:url . "http://elpa.gnu.org/packages/nlinum.html") (:keywords "convenience")) "gnu"])
  (nhexl-mode . [(0 1) nil "Minor mode to edit files via hex-dump format" single ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html") (:keywords "data")) "gnu"])
  (muse . [(3 20) nil "Authoring and publishing tool for Emacs" tar ((:keywords "hypermedia") (:url . "http://mwolson.org/projects/EmacsMuse.html")) "gnu"])
  (memory-usage . [(0 2) nil "Analyze the memory usage of Emacs in various ways" single ((:url . "http://elpa.gnu.org/packages/memory-usage.html") (:keywords "maint")) "gnu"])
  (markchars . [(0 2 0) nil "Mark chars fitting certain characteristics" single ((:url . "http://elpa.gnu.org/packages/markchars.html") (:keywords)) "gnu"])
  (load-dir . [(0 0 3) nil "Load all Emacs Lisp files in a given directory" single ((:url . "http://elpa.gnu.org/packages/load-dir.html") (:keywords "lisp" "files" "convenience")) "gnu"])
  (lmc . [(1 3) nil "Little Man Computer in Elisp" single ((:url . "http://elpa.gnu.org/packages/lmc.html") (:keywords)) "gnu"])
  (lex . [(1 1) nil "Lexical analyser construction" tar ((:url . "http://elpa.gnu.org/packages/lex.html")) "gnu"])
  (jumpc . [(3 0) nil "jump to previous insertion points" single ((:url . "http://elpa.gnu.org/packages/jumpc.html") (:keywords)) "gnu"])
  (jgraph-mode . [(1 0) nil "Major mode for Jgraph files" single ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html") (:keywords "tex" "wp")) "gnu"])
  (ioccur . [(2 4) nil "Incremental occur" single ((:url . "http://elpa.gnu.org/packages/ioccur.html") (:keywords)) "gnu"])
  (heap . [(0 3) nil "Heap (a.k.a. priority queue) data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "data structures" "heap" "priority queue")) "gnu"])
  (gnugo . [(2 3 1) ((ascii-art-to-unicode (1 5)) (xpm (1 0 1)) (cl-lib (0 5))) "play GNU Go in a buffer" tar ((:keywords "games" "processes") (:url . "http://elpa.gnu.org/packages/gnugo.html")) "gnu"])
  (flylisp . [(0 2) nil "Color unbalanced parentheses and parentheses inconsistent with indentation" single ((:url . "http://elpa.gnu.org/packages/flylisp.html") (:keywords)) "gnu"])
  (f90-interface-browser . [(1 1) nil "Parse and browse f90 interfaces" single ((:url . "http://github.com/wence-/f90-iface/") (:keywords)) "gnu"])
  (epoch-view . [(0 0 1) nil "Minor mode to visualize epoch timestamps" single ((:url . "http://elpa.gnu.org/packages/epoch-view.html") (:keywords "data" "timestamp" "epoch" "unix")) "gnu"])
  (enwc . [(1 0) nil "The Emacs Network Client" tar ((:keywords "enwc" "network" "wicd" "manager" "nm") (:url . "http://elpa.gnu.org/packages/enwc.html")) "gnu"])
  (ediprolog . [(1 0) nil "Emacs Does Interactive Prolog" single ((:url . "http://elpa.gnu.org/packages/ediprolog.html") (:keywords "languages" "processes")) "gnu"])
  (docbook . [(0 1) nil "Info-like viewer for DocBook" single ((:url . "http://elpa.gnu.org/packages/docbook.html") (:keywords "docs" "help")) "gnu"])
  (djvu . [(0 5) nil "Edit and view Djvu files via djvused" single ((:url . "http://elpa.gnu.org/packages/djvu.html") (:keywords "files" "wp")) "gnu"])
  (dismal . [(1 5) ((cl-lib (0))) "Dis Mode Ain't Lotus: Spreadsheet program Emacs" tar ((:url . "http://elpa.gnu.org/packages/dismal.html")) "gnu"])
  (dict-tree . [(0 12 8) ((trie (0 2 5)) (tNFA (0 1 1)) (heap (0 3))) "Dictionary data structure" single ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords "extensions" "matching" "data structures trie" "tree" "dictionary" "completion" "regexp")) "gnu"])
  (debbugs . [(0 6) nil "SOAP library to access debbugs servers" tar ((:keywords "comm" "hypermedia") (:url . "http://elpa.gnu.org/packages/debbugs.html")) "gnu"])
  (cl-lib . [(0 5) nil "Properly prefixed CL functions and macros" single ((:url . "http://elpa.gnu.org/packages/cl-lib.html") (:keywords)) "gnu"])
  (chess . [(2 0 0) ((cl-lib (0 5))) "Play chess in GNU Emacs" tar ((:keywords "games") (:url . "http://elpa.gnu.org/packages/chess.html")) "gnu"])
  (auctex . [(11 87 5) nil "Integrated environment for *TeX*" tar ((:url . "http://www.gnu.org/software/auctex/")) "gnu"])
  (ascii-art-to-unicode . [(1 8) nil "a small artist adjunct" single ((:url . "http://elpa.gnu.org/packages/ascii-art-to-unicode.html") (:keywords "ascii" "unicode" "box-drawing")) "gnu"])
  (all . [(1 0) nil "Edit all lines matching a given regexp" single ((:url . "http://elpa.gnu.org/packages/all.html") (:keywords "matching")) "gnu"])
  (adjust-parens . [(3 0) nil "Indent and dedent Lisp code, automatically adjust close parens" tar ((:url . "http://elpa.gnu.org/packages/adjust-parens.html")) "gnu"])
  (adaptive-wrap . [(0 5) nil "Smart line-wrapping with wrap-prefix" single ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html") (:keywords)) "gnu"])
  (ada-mode . [(5 1 4) ((wisi (1 0 4)) (cl-lib (0 4)) (emacs (24 2))) "major-mode for editing Ada sources" tar ((:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) "gnu"])
  (ack . [(1 3) nil "Interface to ack-like source code search tools" tar ((:keywords "tools" "processes" "convenience") (:url . "https://github.com/leoliu/ack-el")) "gnu"])
 )
