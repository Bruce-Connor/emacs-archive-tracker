'(
  (4clojure [cl-struct-package-desc 4clojure (20131014 1507) "Open and evaluate 4clojure.com questions" ((json (1 2)) (request (0 2 0))) single "melpa" nil nil nil])
  (ac-c-headers [cl-struct-package-desc ac-c-headers (20131015 2339) "auto-complete source for C headers" nil single "melpa" nil nil nil])
  (ac-emmet [cl-struct-package-desc ac-emmet (20131015 858) "auto-complete sources for emmet-mode's snippets" ((emmet-mode (1 0 2)) (auto-complete (1 4))) single "melpa" nil nil nil])
  (ac-etags [cl-struct-package-desc ac-etags (20131127 311) "etags/ctags completion source for auto-complete" ((auto-complete (1 4))) single "melpa" nil nil nil])
  (ac-ispell [cl-struct-package-desc ac-ispell (20140214 751) "ispell completion source for auto-complete" ((auto-complete (1 4))) single "melpa" nil nil nil])
  (ac-octave [cl-struct-package-desc ac-octave (20140226 2051) "An auto-complete source for Octave" ((auto-complete (1 4 0))) single "melpa" nil nil nil])
  (achievements [cl-struct-package-desc achievements (20131111 2351) "Achievements for emacs usage." ((keyfreq (0 0 3))) tar "melpa" nil nil nil])
  (afternoon-theme [cl-struct-package-desc afternoon-theme (20140104 1059) "Dark color theme with a deep blue background" ((emacs (24 1))) single "melpa" nil nil nil])
  (alect-themes [cl-struct-package-desc alect-themes (20140304 1327) "Configurable color themes (light, dark and black) for Emacs 24" nil tar "melpa" nil nil nil])
  (ant [cl-struct-package-desc ant (20131227 2307) "helpers for compiling with ant" nil single "melpa" nil nil nil])
  (anx-api [cl-struct-package-desc anx-api (20140208 714) "Interact with the AppNexus API from Emacs." nil single "melpa" nil nil nil])
  (anyins [cl-struct-package-desc anyins (20131229 241) "Insert content at multiple places from shell command or kill-ring" nil single "melpa" nil nil nil])
  (anything-prosjekt [cl-struct-package-desc anything-prosjekt (20140129 4) "Anything integration for prosjekt." ((prosjekt (0 3)) (anything (0))) single "melpa" nil nil nil])
  (apples-mode [cl-struct-package-desc apples-mode (20110120 2018) "Major mode for editing and executing AppleScript code" nil tar "melpa" nil nil nil])
  (apropos-fn+var [cl-struct-package-desc apropos-fn+var (20131226 1803) "Apropos for functions and variables" nil single "melpa" nil nil nil])
  (arduino-mode [cl-struct-package-desc arduino-mode (20140108 1602) "Major mode for the Arduino language" nil single "melpa" nil nil nil])
  (asn1-mode [cl-struct-package-desc asn1-mode (20131218 420) "ASN.1/GDMO mode for GNU Emacs" ((emacs (24 3))) single "melpa" nil nil nil])
  (auctex-lua [cl-struct-package-desc auctex-lua (20130818 1120) "Lua editing support for AUCTeX" nil single "melpa" nil nil nil])
  (aurel [cl-struct-package-desc aurel (20140308 713) "Search, get info and download AUR packages" nil single "melpa" nil nil nil])
  (auto-complete-auctex [cl-struct-package-desc auto-complete-auctex (20140223 958) "auto-completion for auctex" ((yasnippet (0 6 1)) (auto-complete (1 4))) single "melpa" nil nil nil])
  (auto-complete-c-headers [cl-struct-package-desc auto-complete-c-headers (20131215 506) "An auto-complete source for C/C++ header files" ((auto-complete (1 4))) single "melpa" nil nil nil])
  (auto-complete-chunk [cl-struct-package-desc auto-complete-chunk (20140225 146) "Auto-completion for dot.separated.words." ((auto-complete (1 4))) single "melpa" nil nil nil])
  (auto-complete-nxml [cl-struct-package-desc auto-complete-nxml (20140220 2058) "do completion by auto-complete.el on nXML-mode" ((auto-complete (1 4))) single "melpa" nil nil nil])
  (auto-complete-pcmp [cl-struct-package-desc auto-complete-pcmp (20140226 2251) "Provide auto-complete sources using pcomplete results" ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (auto-complete-rst [cl-struct-package-desc auto-complete-rst (20140225 144) "Auto-complete extension for ReST and Sphinx" ((auto-complete (1 4))) tar "melpa" nil nil nil])
  (auto-yasnippet [cl-struct-package-desc auto-yasnippet (20131230 1421) "Quickly create disposable yasnippets" ((yasnippet (0 8 0))) single "melpa" nil nil nil])
  (autofit-frame [cl-struct-package-desc autofit-frame (20131226 1804) "Automatically resize one-window frames to fit" ((fit-frame (0))) single "melpa" nil nil nil])
  (automargin [cl-struct-package-desc automargin (20131112 14) "add margins to windows not-splitted, and center them" nil single "melpa" nil nil nil])
  (babel [cl-struct-package-desc babel (20131231 725) "interface to web translation services such as Babelfish" nil single "melpa" nil nil nil])
  (bbdb- [cl-struct-package-desc bbdb- (20140221 1554) "provide interface for more easily search/choice than BBDB." ((bbdb (20140123 1541)) (log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (bibslurp [cl-struct-package-desc bibslurp (20130904 1053) "retrieve BibTeX entries from NASA ADS" ((s (1 6 0)) (dash (1 5 0))) single "melpa" nil nil nil])
  (bpe [cl-struct-package-desc bpe (20131227 2120) "Blog from Org mode to Blogger" nil single "melpa" nil nil nil])
  (bracketed-paste [cl-struct-package-desc bracketed-paste (20140222 1801) "bracketed paste mode support within emacs -nw" ((emacs (24 3))) single "melpa" nil nil nil])
  (brainfuck-mode [cl-struct-package-desc brainfuck-mode (20140220 1855) "Brainfuck mode for Emacs" ((langdoc (20130601 1450))) single "melpa" nil nil nil])
  (buffer-buttons [cl-struct-package-desc buffer-buttons (20131127 946) "Define, save, and load code-safe buttons in files for emacs" nil single "melpa" nil nil nil])
  (busybee-theme [cl-struct-package-desc busybee-theme (20130920 942) "port of vim's mustang theme" nil single "melpa" nil nil nil])
  (calmer-forest-theme [cl-struct-package-desc calmer-forest-theme (20130925 2210) "Darkish theme with green/orange tint" nil single "melpa" nil nil nil])
  (cask [cl-struct-package-desc cask (20140206 749) "Cask: Emacs dependency management made easy" ((s (1 8 0)) (dash (2 2 0)) (f (0 10 0)) (epl (0 0 1))) tar "melpa" nil nil nil])
  (cdnjs [cl-struct-package-desc cdnjs (20140217 1312) "A front end for http://cdnjs.com" ((cl-lib (0 3)) (dash (2 5 0)) (deferred (0 3 2)) (f (0 16 0)) (pkg-info (0 4))) single "melpa" nil nil nil])
  (cedit [cl-struct-package-desc cedit (20131224 1929) "paredit-like commands for c-like languages" nil single "melpa" nil nil nil])
  (centimacro [cl-struct-package-desc centimacro (20140306 627) "Assign multiple macros as global key bindings" nil single "melpa" nil nil nil])
  (cfengine-code-style [cl-struct-package-desc cfengine-code-style (20131209 411) "C code style for CFEngine project." nil single "melpa" nil nil nil])
  (cg [cl-struct-package-desc cg (20140306 620) "major mode for editing Constraint Grammar files" nil single "melpa" nil nil nil])
  (cherry-blossom-theme [cl-struct-package-desc cherry-blossom-theme (20140126 1025) "a soothing color theme for Emacs24." ((emacs (24 0))) single "melpa" nil nil nil])
  (chruby [cl-struct-package-desc chruby (20140223 1028) "Emacs integration for chruby" nil single "melpa" nil nil nil])
  (cider-decompile [cl-struct-package-desc cider-decompile (20131116 1002) "decompilation extension for cider" ((cider (0 3 0)) (javap-mode (9))) single "melpa" nil nil nil])
  (cider-tracing [cl-struct-package-desc cider-tracing (20131018 738) "Tracing extension for CIDER" ((cider (0 3 0)) (clojure-mode (2 1 0))) single "melpa" nil nil nil])
  (clevercss [cl-struct-package-desc clevercss (20131228 1755) "A major mode for editing CleverCSS files" nil single "melpa" nil nil nil])
  (clojure-cheatsheet [cl-struct-package-desc clojure-cheatsheet (20140207 529) "The Clojure Cheatsheet for Emacs" ((helm (1 5 3)) (cider (0 1 8))) single "melpa" nil nil nil])
  (cmds-menu [cl-struct-package-desc cmds-menu (20131226 1816) "`Recent Commands' submenu for the menu-bar `Tools' menu." nil single "melpa" nil nil nil])
  (color-identifiers-mode [cl-struct-package-desc color-identifiers-mode (20140226 1326) "Color identifiers based on their names" ((dash (2 5 0)) (dash-functional (1 0 0)) (emacs (24))) single "melpa" nil nil nil])
  (colorsarenice-theme [cl-struct-package-desc colorsarenice-theme (20140223 948) "A color theme." ((emacs (24))) tar "melpa" nil nil nil])
  (command-log-mode [cl-struct-package-desc command-log-mode (20120329 629) "log keyboard commands to buffer" nil single "melpa" nil nil nil])
  (company-cider [cl-struct-package-desc company-cider (20140201 1017) "company-mode completion back-end for Cider" ((company (0 6 13)) (cider (0 6 0))) single "melpa" nil nil nil])
  (company-go [cl-struct-package-desc company-go (20140221 607) "company-mode backend for Go (using gocode)" ((company (0 6 12))) single "melpa" nil nil nil])
  (company-jedi [cl-struct-package-desc company-jedi (20140208 421) "Jedi backend for company-mode" ((company (0 6 12))) tar "melpa" nil nil nil])
  (company-tern [cl-struct-package-desc company-tern (20140121 2247) "Tern backend for company-mode" ((company (0 6 12)) (tern (0 0 1))) single "melpa" nil nil nil])
  (conkeror-minor-mode [cl-struct-package-desc conkeror-minor-mode (20131218 334) "Mode for editing conkeror javascript files." nil single "melpa" nil nil nil])
  (connection [cl-struct-package-desc connection (20131005 526) "TCP-based client connection" nil single "melpa" nil nil nil])
  (control-mode [cl-struct-package-desc control-mode (20140218 607) "A \"control\" mode, similar to vim's \"normal\" mode" nil single "melpa" nil nil nil])
  (css-eldoc [cl-struct-package-desc css-eldoc (20140128 2337) "an eldoc-mode plugin for CSS source code" nil tar "melpa" nil nil nil])
  (cssh [cl-struct-package-desc cssh (20120823 1241) "clusterssh implementation for emacs" nil single "melpa" nil nil nil])
  (ctl-mode [cl-struct-package-desc ctl-mode (20131229 2316) "Major mode for editing GrADS script files" nil single "melpa" nil nil nil])
  (ctxmenu [cl-struct-package-desc ctxmenu (20140303 1342) "Provide a context menu like right-click." ((popup (20140205 103)) (log4e (0 2 0)) (yaxception (0 1))) tar "melpa" nil nil nil])
  (cucumber-goto-step [cl-struct-package-desc cucumber-goto-step (20131209 2119) "Jump to cucumber step definition" ((pcre2el (1 5))) single "melpa" nil nil nil])
  (cursor-test [cl-struct-package-desc cursor-test (20131207 932) "testing library for cursor position in emacs." ((emacs (24))) single "melpa" nil nil nil])
  (cypher-mode [cl-struct-package-desc cypher-mode (20140221 422) "major mode for editing cypher scripts" nil single "melpa" nil nil nil])
  (cython-mode [cl-struct-package-desc cython-mode (20131229 406) "Major mode for editing Cython files" nil single "melpa" nil nil nil])
  (darkburn-theme [cl-struct-package-desc darkburn-theme (20140309 1555) "A not-so-low contrast color theme for Emacs." nil single "melpa" nil nil nil])
  (dayone [cl-struct-package-desc dayone (20131117 255) "Utility script for Day One" ((uuid (0 0 3)) (mustache (0 22)) (ht (1 5))) tar "melpa" nil nil nil])
  (debpaste [cl-struct-package-desc debpaste (20140208 2) "Interface for getting/posting/deleting pastes from paste.debian.net" ((xml-rpc (1 6 7))) single "melpa" nil nil nil])
  (debug-print [cl-struct-package-desc debug-print (20140125 1619) "A nice printf debugging environment by the way Gauche do" ((emacs (24))) single "melpa" nil nil nil])
  (decl [cl-struct-package-desc decl (20140221 1548) "Enables you to organize your code in a declarative manner" ((dash (2 5 0)) (emacs (24 3)) (cl-lib (0 3))) single "melpa" nil nil nil])
  (dedukti-mode [cl-struct-package-desc dedukti-mode (20140210 2330) "Major mode for Dedukti files" nil single "melpa" nil nil nil])
  (demangle-mode [cl-struct-package-desc demangle-mode (20140225 1712) "Automatically demangle C++ symbols" ((emacs (24)) (cl-lib (0 1))) single "melpa" nil nil nil])
  (dictionary [cl-struct-package-desc dictionary (20131005 526) "Client for rfc2229 dictionary servers" ((connection (1 10)) (link (1 10))) single "melpa" nil nil nil])
  (dim-autoload [cl-struct-package-desc dim-autoload (20140309 1759) "dim complete autoload cookie lines" nil single "melpa" nil nil nil])
  (dired-avfs [cl-struct-package-desc dired-avfs (20140220 1247) "AVFS support for dired" ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) single "melpa" nil nil nil])
  (dired-filter [cl-struct-package-desc dired-filter (20140310 528) "Ibuffer-like filtering for dired" ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) single "melpa" nil nil nil])
  (dired-hacks-utils [cl-struct-package-desc dired-hacks-utils (20140305 356) "Utilities and helpers for dired-hacks collection" ((dash (2 5 0))) single "melpa" nil nil nil])
  (dired-imenu [cl-struct-package-desc dired-imenu (20140109 810) "imenu binding for dired mode" nil single "melpa" nil nil nil])
  (dired-open [cl-struct-package-desc dired-open (20140301 442) "Open files from dired using using custom actions" ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) single "melpa" nil nil nil])
  (dired-rainbow [cl-struct-package-desc dired-rainbow (20140222 1042) "Extended file highlighting according to its type" ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) single "melpa" nil nil nil])
  (dired-sort-menu+ [cl-struct-package-desc dired-sort-menu+ (20131226 1833) "Extensions to `dired-sort-menu.el'" ((dired-sort-menu (0))) single "melpa" nil nil nil])
  (dired-sort-menu [cl-struct-package-desc dired-sort-menu (20130824 1207) "provide menu/dialogue for dired sort options" nil single "melpa" nil nil nil])
  (dired-subtree [cl-struct-package-desc dired-subtree (20140308 733) "Insert subdirectories in a tree-like fashion" ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) single "melpa" nil nil nil])
  (dired-toggle [cl-struct-package-desc dired-toggle (20131023 110) "provide a simple way to toggle dired buffer for current directory" nil single "melpa" nil nil nil])
  (dired-toggle-sudo [cl-struct-package-desc dired-toggle-sudo (20131022 626) "Browse directory with sudo privileges." nil single "melpa" nil nil nil])
  (dirtree [cl-struct-package-desc dirtree (20140129 832) "Directory tree views" ((tree-mode (1 1 1 1)) (windata (0))) single "melpa" nil nil nil])
  (dirtree-prosjekt [cl-struct-package-desc dirtree-prosjekt (20140129 104) "dirtree integration for prosjekt." ((prosjekt (0 3)) (dirtree (0 1))) single "melpa" nil nil nil])
  (discover [cl-struct-package-desc discover (20140103 1339) "discover more of Emacs" ((makey (0 3))) single "melpa" nil nil nil])
  (discover-js2-refactor [cl-struct-package-desc discover-js2-refactor (20140129 752) "Adds discover context menu for js2-refactor" ((js2-refactor (20131221 501)) (discover (20140103 1339))) single "melpa" nil nil nil])
  (display-theme [cl-struct-package-desc display-theme (20140115 756) "display current theme(s) at mode-line" ((emacs (24))) single "melpa" nil nil nil])
  (django-mode [cl-struct-package-desc django-mode (20140207 1050) "Major mode for Django web framework." nil tar "melpa" nil nil nil])
  (django-snippets [cl-struct-package-desc django-snippets (20131229 811) "Yasnippets for django" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (dkdo [cl-struct-package-desc dkdo (20131110 319) "Do List major mode based on org-mode." ((dkmisc (0 50)) (emacs (24 1))) tar "melpa" nil nil nil])
  (dklrt [cl-struct-package-desc dklrt (20131110 541) "Ledger Recurring Transactions." ((dkmisc (0 50)) (ledger-mode (20130908 1357)) (emacs (24 1))) tar "melpa" nil nil nil])
  (dkmisc [cl-struct-package-desc dkmisc (20131110 315) "Miscellaneous functions required by dk* packages." ((emacs (24 1))) tar "melpa" nil nil nil])
  (dockerfile-mode [cl-struct-package-desc dockerfile-mode (20140212 739) "Major mode for editing Docker's Dockerfiles" nil single "melpa" nil nil nil])
  (dokuwiki-mode [cl-struct-package-desc dokuwiki-mode (20140130 936) "Major mode for DokuWiki document" nil single "melpa" nil nil nil])
  (doremi [cl-struct-package-desc doremi (20131226 1835) "Do Re Mi: Incremental change using arrow keys or mouse wheel." nil single "melpa" nil nil nil])
  (doremi-cmd [cl-struct-package-desc doremi-cmd (20131226 1833) "Miscellaneous Do Re Mi commands" ((doremi (0))) single "melpa" nil nil nil])
  (doremi-frm [cl-struct-package-desc doremi-frm (20131226 1834) "Incrementally adjust face attributes and frame parameters." ((doremi (0)) (faces+ (0)) (frame-fns (0)) (hexrgb (0))) single "melpa" nil nil nil])
  (doremi-mac [cl-struct-package-desc doremi-mac (20131226 1835) "A macro for defining Do Re Mi commands." nil single "melpa" nil nil nil])
  (dos [cl-struct-package-desc dos (20130711 409) "Major mode for editing Dos scripts" nil single "melpa" nil nil nil])
  (download-region [cl-struct-package-desc download-region (20140224 653) "Simple in-buffer download manager" ((cl-lib (0 3))) single "melpa" nil nil nil])
  (dummyparens [cl-struct-package-desc dummyparens (20140214 2305) "parenthesis auto-pairing and wrapping" nil single "melpa" nil nil nil])
  (dvorak-mode [cl-struct-package-desc dvorak-mode (20140302 2240) "Switch to dvorak layout easily" nil single "melpa" nil nil nil])
  (easy-kill [cl-struct-package-desc easy-kill (20140207 2026) "kill things easily" ((emacs (24))) single "melpa" nil nil nil])
  (ede-compdb [cl-struct-package-desc ede-compdb (20140306 2006) "Support for compilation database projects in EDE" ((ede (1 2)) (semantic (2 2)) (cl-lib (0 4))) single "melpa" nil nil nil])
  (efire [cl-struct-package-desc efire (20130811 1649) "Use campfire from Emacs" ((circe (1 2))) single "melpa" nil nil nil])
  (el-spice [cl-struct-package-desc el-spice (20140113 816) "Extra spice for emacs lisp programming" ((thingatpt+ (0))) tar "melpa" nil nil nil])
  (el-sprunge [cl-struct-package-desc el-sprunge (20140106 1739) "Command line paste server with Emacs highlighting" ((web-server (20140105 2246)) (htmlize (20130207 1202)) (emacs (24 3))) tar "melpa" nil nil nil])
  (el-spy [cl-struct-package-desc el-spy (20131226 1208) "Mocking framework for Emacs lisp. It also support spy, proxy." nil single "melpa" nil nil nil])
  (elhome [cl-struct-package-desc elhome (20131202 1108) "A framework for a \"home\" Emacs configuration" ((initsplit (20120630))) tar "melpa" nil nil nil])
  (elisp-sandbox [cl-struct-package-desc elisp-sandbox (20131116 1042) "Evaluate EmacsLisp expressions in a sandbox" nil single "melpa" nil nil nil])
  (elixir-yasnippets [cl-struct-package-desc elixir-yasnippets (20130908 1930) "Yasnippets for Elixir" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (elm-mode [cl-struct-package-desc elm-mode (20140114 2016) "Major mode for Elm" nil tar "melpa" nil nil nil])
  (elscreen-mew [cl-struct-package-desc elscreen-mew (20131201 36) "ElScreen Add-On for Mew" ((elscreen (20120413 1107))) single "melpa" nil nil nil])
  (elwm [cl-struct-package-desc elwm (20140217 528) "Minimalistic window manager for emacs" ((dash (1 1 0))) single "melpa" nil nil nil])
  (elx [cl-struct-package-desc elx (20131209 922) "extract information from Emacs Lisp libraries" ((emacs (24 3 50))) single "melpa" nil nil nil])
  (emacsql [cl-struct-package-desc emacsql (20140212 1341) "high-level SQL database front-end" ((emacs (24 3)) (cl-lib (0 3)) (finalize (1 0 0))) tar "melpa" nil nil nil])
  (emms-info-mediainfo [cl-struct-package-desc emms-info-mediainfo (20131223 500) "Info-method for EMMS using medianfo" ((emms (0))) single "melpa" nil nil nil])
  (emms-soundcloud [cl-struct-package-desc emms-soundcloud (20131221 345) "EMMS source for Soundcloud audio sharing platform" ((emms (20131016)) (json (1 2))) single "melpa" nil nil nil])
  (emoji-display [cl-struct-package-desc emoji-display (20140117 213) "emoji displaying module" nil single "melpa" nil nil nil])
  (ensime [cl-struct-package-desc ensime (20131030 1503) "ENhanced Scala Interaction Mode for Emacs" ((s (1 3 0)) (dash (1 0 3)) (popup (0 5 0)) (auto-complete (1 4 0)) (scala-mode2 (0 21))) tar "melpa" nil nil nil])
  (epresent [cl-struct-package-desc epresent (20140212 931) "Simple presentation mode for Emacs Org-mode" nil single "melpa" nil nil nil])
  (erc-crypt [cl-struct-package-desc erc-crypt (20131109 546) "Symmetric Encryption for ERC" nil single "melpa" nil nil nil])
  (erc-view-log [cl-struct-package-desc erc-view-log (20140227 1239) "Major mode for viewing ERC logs" nil single "melpa" nil nil nil])
  (erc-youtube [cl-struct-package-desc erc-youtube (20140225 1556) "Show received youtube urls in the ERC buffer" ((erc (5 3))) single "melpa" nil nil nil])
  (ert-async [cl-struct-package-desc ert-async (20140112 314) "Async support for ERT" nil single "melpa" nil nil nil])
  (ert-modeline [cl-struct-package-desc ert-modeline (20140115 215) "displays ert test results in the modeline." ((s (1 3 1)) (dash (1 2 0)) (emacs (24 1)) (projectile (0 9 1))) single "melpa" nil nil nil])
  (es-mode [cl-struct-package-desc es-mode (20140225 1243) "A major mode for Elasticsearch curl/http scripts" nil single "melpa" nil nil nil])
  (esqlite [cl-struct-package-desc esqlite (20140310 308) "Manipulate sqlite file from Emacs" ((pcsv (1 3 3))) single "melpa" nil nil nil])
  (esqlite-helm [cl-struct-package-desc esqlite-helm (20140121 623) "Define helm source for sqlite database" ((esqlite (0 2 0)) (helm (20131207 845))) single "melpa" nil nil nil])
  (eval-sexp-fu [cl-struct-package-desc eval-sexp-fu (20131230 1351) "Tiny functionality enhancements for evaluating sexps." ((highlight (0))) single "melpa" nil nil nil])
  (evil-exchange [cl-struct-package-desc evil-exchange (20131224 1857) "Exchange text more easily within Evil" ((evil (1 0 7)) (cl-lib (0 3))) single "melpa" nil nil nil])
  (evil-tabs [cl-struct-package-desc evil-tabs (20131011 433) "Integrating Vim-style tabs for Evil mode users." ((evil (0 0 0)) (elscreen (0 0 0))) single "melpa" nil nil nil])
  (evil-visualstar [cl-struct-package-desc evil-visualstar (20130925 1114) "Starts a * or # search from the visual selection" ((evil (0))) single "melpa" nil nil nil])
  (evm [cl-struct-package-desc evm (20140224 316) "Emacs Version Manager" ((dash (2 3 0)) (f (0 13 0))) single "melpa" nil nil nil])
  (eyebrowse [cl-struct-package-desc eyebrowse (20140306 1552) "Easy window config switching" ((dash (2 4 0)) (s (1 4 0)) (emacs (24))) single "melpa" nil nil nil])
  (eyedropper [cl-struct-package-desc eyedropper (20131226 1838) "Pick foreground and background colors at cursor or pointer." ((hexrgb (0))) single "melpa" nil nil nil])
  (ez-query-replace [cl-struct-package-desc ez-query-replace (20140203 915) "A helpful query-replace." ((dash (1 2 0))) single "melpa" nil nil nil])
  (fabric [cl-struct-package-desc fabric (20140203 40) "Launch Fabric using Emacs" nil tar "melpa" nil nil nil])
  (face-remap+ [cl-struct-package-desc face-remap+ (20131226 1839) "Extensions to standard library `face-remap.el'." nil single "melpa" nil nil nil])
  (facemenu+ [cl-struct-package-desc facemenu+ (20140218 2155) "Extensions to `facemenu.el'." nil single "melpa" nil nil nil])
  (faces+ [cl-struct-package-desc faces+ (20131226 1840) "Extensions to `faces.el'." nil single "melpa" nil nil nil])
  (fasd [cl-struct-package-desc fasd (20130831 1003) "Emacs integration for the command-line productivity booster `fasd'" ((grizzl (0))) single "melpa" nil nil nil])
  (fasm-mode [cl-struct-package-desc fasm-mode (20131029 611) "Fasm major mode" nil single "melpa" nil nil nil])
  (fetch [cl-struct-package-desc fetch (20131130 2330) "Fetch and unpack resources" nil single "melpa" nil nil nil])
  (files+ [cl-struct-package-desc files+ (20131226 1841) "Enhancements of standard library `files.el'." nil single "melpa" nil nil nil])
  (filesets+ [cl-struct-package-desc filesets+ (20131226 1842) "Extensions to `filesets.el'." nil single "melpa" nil nil nil])
  (finder+ [cl-struct-package-desc finder+ (20131226 1844) "Extensions to standard library finder.el" nil single "melpa" nil nil nil])
  (fit-frame [cl-struct-package-desc fit-frame (20131226 1844) "Resize a frame.  In particular, fit a frame to its buffers." nil single "melpa" nil nil nil])
  (flash-region [cl-struct-package-desc flash-region (20130923 1117) "Flash a region" nil single "melpa" nil nil nil])
  (flatland-theme [cl-struct-package-desc flatland-theme (20131204 858) "A simple theme for Emacs based on the Flatland theme for Sublime Text" nil single "melpa" nil nil nil])
  (fliptext [cl-struct-package-desc fliptext (20131114 218) "Input method for flipping characters upside down" nil single "melpa" nil nil nil])
  (floobits [cl-struct-package-desc floobits (20140223 1640) "Floobits plugin for real-time collaborative editing" ((json (1 2)) (highlight (0))) tar "melpa" nil nil nil])
  (flycheck-d-unittest [cl-struct-package-desc flycheck-d-unittest (20140120 1809) "Add D unittest support to flycheck" ((flycheck (0 17)) (dash (1 4 0))) single "melpa" nil nil nil])
  (flycheck-google-cpplint [cl-struct-package-desc flycheck-google-cpplint (20140228 647) "Help to comply with the Google C++ Style Guide" ((flycheck (0 18))) single "melpa" nil nil nil])
  (flycheck-mercury [cl-struct-package-desc flycheck-mercury (20140123 312) "Mercury support in Flycheck" ((flycheck (0 15)) (s (1 9 0)) (dash (2 4 0))) single "melpa" nil nil nil])
  (flycheck-pos-tip [cl-struct-package-desc flycheck-pos-tip (20140304 333) "Flycheck errors display in tooltip" ((flycheck (0 18)) (pos-tip (0 4 5))) single "melpa" nil nil nil])
  (flycheck-tip [cl-struct-package-desc flycheck-tip (20140219 616) "show flycheck's error by popup-tip" ((flycheck (0 13)) (dash (1 2)) (emacs (24 1)) (popup (0 5 0))) tar "melpa" nil nil nil])
  (flymake-cppcheck [cl-struct-package-desc flymake-cppcheck (20140117 1013) "Flymake work with Cppcheck for C/C++" ((flymake-easy (0 9))) single "melpa" nil nil nil])
  (flymake-google-cpplint [cl-struct-package-desc flymake-google-cpplint (20140205 525) "Help to comply with the Google C++ Style Guide" ((flymake-easy (0 9))) single "melpa" nil nil nil])
  (flymake-rust [cl-struct-package-desc flymake-rust (20131020 345) "A flymake handler for rust-mode files" ((flymake-easy (0 1))) single "melpa" nil nil nil])
  (font-lock+ [cl-struct-package-desc font-lock+ (20131226 1846) "Enhancements to standard library `font-lock.el'." nil single "melpa" nil nil nil])
  (font-lock-menus [cl-struct-package-desc font-lock-menus (20131226 1847) "Font-lock menus: enhanced `font-menus.el'" nil single "melpa" nil nil nil])
  (fountain-mode [cl-struct-package-desc fountain-mode (20140305 12) "Major mode for editing Fountain-formatted text files" ((s (1 9 0))) single "melpa" nil nil nil])
  (fringe-current-line [cl-struct-package-desc fringe-current-line (20140110 2011) "show current line on the fringe." nil single "melpa" nil nil nil])
  (fullframe [cl-struct-package-desc fullframe (20140306 1107) "Generalized automatic execution in a single frame" nil single "melpa" nil nil nil])
  (fvwm-mode [cl-struct-package-desc fvwm-mode (20140210 830) "major mode for editing Fvwm configuration files" nil single "melpa" nil nil nil])
  (genrnc [cl-struct-package-desc genrnc (20130711 2251) "generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD." ((deferred (0 3 1)) (log4e (0 2 0)) (yaxception (0 1))) tar "melpa" nil nil nil])
  (gherkin-mode [cl-struct-package-desc gherkin-mode (20140107 804) "An emacs major mode for editing gherkin files." nil single "melpa" nil nil nil])
  (git [cl-struct-package-desc git (20140128 241) "An Elisp API for programmatically using Git" ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) single "melpa" nil nil nil])
  (git-annex [cl-struct-package-desc git-annex (20131119 1445) "Mode for easy editing of git-annex'd files" nil single "melpa" nil nil nil])
  (git-commit-training-wheels-mode [cl-struct-package-desc git-commit-training-wheels-mode (20131121 544) "Helps you craft well formed commit messages with git-commit-mode" ((git-commit-mode (0 14 0))) single "melpa" nil nil nil])
  (git-link [cl-struct-package-desc git-link (20140222 1435) "Get the GitHub/Bitbucket/Gitorious URL for a buffer location" nil single "melpa" nil nil nil])
  (git-rebase-mode [cl-struct-package-desc git-rebase-mode (20140220 1417) "Major mode for editing git rebase files" nil single "melpa" nil nil nil])
  (gitattributes-mode [cl-struct-package-desc gitattributes-mode (20140125 1553) "Major mode for editing .gitattributes files" nil single "melpa" nil nil nil])
  (gmail-message-mode [cl-struct-package-desc gmail-message-mode (20131213 1156) "A major-mode for editing gmail messages using markdown syntax." ((ham-mode (1 0))) single "melpa" nil nil nil])
  (gnome-calendar [cl-struct-package-desc gnome-calendar (20140112 359) "Integration with the GNOME Shell calendar" nil single "melpa" nil nil nil])
  (gntp [cl-struct-package-desc gntp (20140108 133) "Growl Notification Protocol for Emacs" nil single "melpa" nil nil nil])
  (gnu-apl-mode [cl-struct-package-desc gnu-apl-mode (20140214 136) "Integrate GNU APL with Emacs" ((emacs (24))) tar "melpa" nil nil nil])
  (gnus-spotlight [cl-struct-package-desc gnus-spotlight (20130901 1435) "Search mail with Spotlight" nil single "melpa" nil nil nil])
  (go-direx [cl-struct-package-desc go-direx (20140303 447) "Tree style source code viewer for Go language" ((direx (0 1 -3)) (cl-lib (0 5))) single "melpa" nil nil nil])
  (golint [cl-struct-package-desc golint (20140122 1122) "lint for the Go source code" nil single "melpa" nil nil nil])
  (gom-mode [cl-struct-package-desc gom-mode (20131007 1953) "Major mode for Gomfile" nil single "melpa" nil nil nil])
  (gore-mode [cl-struct-package-desc gore-mode (20131027 2227) "Simple mode for gore, a command-line evaluator for golang." nil single "melpa" nil nil nil])
  (grass-mode [cl-struct-package-desc grass-mode (20140120 1444) "Provides Emacs modes for interacting with the GRASS GIS program" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (grep+ [cl-struct-package-desc grep+ (20131226 1851) "Extensions to standard library `grep.el'." nil single "melpa" nil nil nil])
  (gruvbox-theme [cl-struct-package-desc gruvbox-theme (20131229 1458) "A retro-groove colour theme for Emacs" nil single "melpa" nil nil nil])
  (gs-mode [cl-struct-package-desc gs-mode (20131229 2316) "Major mode for editing GrADS script files" nil single "melpa" nil nil nil])
  (ham-mode [cl-struct-package-desc ham-mode (20131209 656) "Html As Markdown. Transparently edit an html file using markdown." ((html-to-markdown (1 2)) (markdown-mode (2 0))) single "melpa" nil nil nil])
  (hamlet-mode [cl-struct-package-desc hamlet-mode (20131207 2324) "Hamlet editing mode" ((cl-lib (0 3)) (dash (2 3 0)) (s (1 7 0))) single "melpa" nil nil nil])
  (helm-ag-r [cl-struct-package-desc helm-ag-r (20131123 731) "Search something by ag and display by helm" ((helm (1 0))) single "melpa" nil nil nil])
  (helm-backup [cl-struct-package-desc helm-backup (20140124 1404) "Backup each file change using git" ((helm (1 5 5)) (s (1 8 0))) single "melpa" nil nil nil])
  (helm-bibtexkey [cl-struct-package-desc helm-bibtexkey (20140214 704) "Bibtexkey source for helm" ((helm (1 5 8))) tar "melpa" nil nil nil])
  (helm-bm [cl-struct-package-desc helm-bm (20131224 705) "helm sources for bm.el" ((bm (1 0)) (cl-lib (0 3)) (helm (1 5 7)) (s (1 8 0))) single "melpa" nil nil nil])
  (helm-chrome [cl-struct-package-desc helm-chrome (20140116 252) "Helm interface for Chrome bookmarks" ((helm (1 0)) (cl-lib (0 3)) (emacs (24))) single "melpa" nil nil nil])
  (helm-company [cl-struct-package-desc helm-company (20140116 1335) "Helm interface for company-mode" ((helm (1 5 9)) (company (0 6 13))) single "melpa" nil nil nil])
  (helm-css-scss [cl-struct-package-desc helm-css-scss (20140126 50) "CSS/SCSS/LESS Selectors with helm interface" ((helm (1 0)) (emacs (24))) single "melpa" nil nil nil])
  (helm-dash [cl-struct-package-desc helm-dash (20140224 650) "Helm extension to search dash docsets" ((helm (0 0 0))) single "melpa" nil nil nil])
  (helm-dictionary [cl-struct-package-desc helm-dictionary (20131212 410) "Helm source for looking up dictionaries" ((helm (1 5 5))) single "melpa" nil nil nil])
  (helm-emmet [cl-struct-package-desc helm-emmet (20131013 2329) "helm sources for emmet-mode's snippets" ((helm (1 0)) (emmet-mode (1 0 2))) single "melpa" nil nil nil])
  (helm-flycheck [cl-struct-package-desc helm-flycheck (20140128 127) "Show flycheck errors with helm" ((dash (2 4 0)) (flycheck (0 15)) (helm (1 5 7))) single "melpa" nil nil nil])
  (helm-git-files [cl-struct-package-desc helm-git-files (20140214 1059) "helm for git files" ((helm (1 5 9))) single "melpa" nil nil nil])
  (helm-github-stars [cl-struct-package-desc helm-github-stars (20131123 817) "Helm integration for your starred repositories on github" ((helm (1 5 5))) single "melpa" nil nil nil])
  (helm-growthforecast [cl-struct-package-desc helm-growthforecast (20140119 1944) "helm extensions for growthforecast." ((helm (1 5 9))) single "melpa" nil nil nil])
  (helm-hatena-bookmark [cl-struct-package-desc helm-hatena-bookmark (20131128 557) "Hatena::Bookmark helm.el interface" ((helm (1 5 6))) single "melpa" nil nil nil])
  (helm-j-cheatsheet [cl-struct-package-desc helm-j-cheatsheet (20131228 441) "Quick J reference for Emacs" ((helm (1 5 3))) single "melpa" nil nil nil])
  (helm-ls-hg [cl-struct-package-desc helm-ls-hg (20131121 52) "List hg files in hg project." nil single "melpa" nil nil nil])
  (helm-make [cl-struct-package-desc helm-make (20140214 443) "Select makefile target with helm" ((helm (1 5 3))) single "melpa" nil nil nil])
  (helm-mode-manager [cl-struct-package-desc helm-mode-manager (20140224 1504) "Select and toggle major and minor modes with helm" ((helm (1 5 3))) single "melpa" nil nil nil])
  (helm-package [cl-struct-package-desc helm-package (20140108 2223) "Listing ELPA packages with helm interface" ((helm (1 0)) (cl-lib (0 3))) single "melpa" nil nil nil])
  (helm-perldoc [cl-struct-package-desc helm-perldoc (20140308 1912) "perldoc with helm interface" ((helm (1 0)) (deferred (0 3 1)) (cl-lib (0 4))) tar "melpa" nil nil nil])
  (helm-prosjekt [cl-struct-package-desc helm-prosjekt (20140128 2317) "Helm integration for prosjekt." ((prosjekt (0 3)) (helm (1 5 9))) single "melpa" nil nil nil])
  (helm-pydoc [cl-struct-package-desc helm-pydoc (20140307 1630) "pydoc with helm interface" ((helm (1 0)) (cl-lib (0 5))) tar "melpa" nil nil nil])
  (helm-rb [cl-struct-package-desc helm-rb (20131123 839) "Search Ruby's method by ag and display helm" ((helm (1 0)) (helm-ag-r (20131123))) tar "melpa" nil nil nil])
  (helm-spotify [cl-struct-package-desc helm-spotify (20131014 1421) "Control Spotify with Helm." ((helm (0 0 0)) (multi (2 0 0))) single "melpa" nil nil nil])
  (helm-swoop [cl-struct-package-desc helm-swoop (20140304 2226) "Efficiently hopping squeezed lines powered by helm interface" ((helm (1 0)) (emacs (24))) single "melpa" nil nil nil])
  (help+ [cl-struct-package-desc help+ (20131226 1852) "Extensions to `help.el'." nil single "melpa" nil nil nil])
  (help-fns+ [cl-struct-package-desc help-fns+ (20140306 1927) "Extensions to `help-fns.el'." nil single "melpa" nil nil nil])
  (help-mode+ [cl-struct-package-desc help-mode+ (20140117 2115) "Extensions to `help-mode.el'" nil single "melpa" nil nil nil])
  (hideshow-org [cl-struct-package-desc hideshow-org (20120223 1450) "Provides org-mode like hide and show for hideshow.el" nil single "melpa" nil nil nil])
  (highlight-chars [cl-struct-package-desc highlight-chars (20131226 1906) "Highlight specified sets of characters, including whitespace." nil single "melpa" nil nil nil])
  (highlight-current-line [cl-struct-package-desc highlight-current-line (20051013 1756) "highlight line where the cursor is." nil single "melpa" nil nil nil])
  (highlight-defined [cl-struct-package-desc highlight-defined (20140226 1041) "Syntax highlighting of known Elisp symbols" ((emacs (24))) single "melpa" nil nil nil])
  (highlight-tail [cl-struct-package-desc highlight-tail (20140131 130) "draw a colourful \"tail\" while you write" nil single "melpa" nil nil nil])
  (highlight-unique-symbol [cl-struct-package-desc highlight-unique-symbol (20130611 2242) "highlight symbols which not appear in the repository" ((deferred (0 3 2))) single "melpa" nil nil nil])
  (historyf [cl-struct-package-desc historyf (20131203 22) "file history library like browser" nil single "melpa" nil nil nil])
  (hl-defined [cl-struct-package-desc hl-defined (20131226 1912) "Highlight defined or undefined symbols in Emacs-Lisp." nil single "melpa" nil nil nil])
  (hl-spotlight [cl-struct-package-desc hl-spotlight (20131226 1913) "Extension of hl-line.el to spotlight current few lines." nil single "melpa" nil nil nil])
  (howdoi [cl-struct-package-desc howdoi (20140309 1614) "Instant coding answers via Emacs." nil tar "melpa" nil nil nil])
  (html-to-markdown [cl-struct-package-desc html-to-markdown (20131212 1441) "HTML to Markdown converter written in Emacs-lisp." nil single "melpa" nil nil nil])
  (httprepl [cl-struct-package-desc httprepl (20140215 511) "An HTTP REPL" ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) single "melpa" nil nil nil])
  (hyde [cl-struct-package-desc hyde (20140131 456) "Major mode to help create and manage Jekyll blogs" nil tar "melpa" nil nil nil])
  (ibuffer-git [cl-struct-package-desc ibuffer-git (20110508 31) "show git status in ibuffer column" nil single "melpa" nil nil nil])
  (ibuffer-tramp [cl-struct-package-desc ibuffer-tramp (20140301 1006) "Group ibuffer's list by TRAMP connection" nil single "melpa" nil nil nil])
  (ido-at-point [cl-struct-package-desc ido-at-point (20131221 1344) "ido-style completion-at-point" ((emacs (24))) single "melpa" nil nil nil])
  (idris-mode [cl-struct-package-desc idris-mode (20140306 835) "Major mode for editing Idris code" ((emacs (24))) tar "melpa" nil nil nil])
  (ids-edit [cl-struct-package-desc ids-edit (20140310 639) "IDS (Ideographic Description Sequence) editing tool" ((emacs (24 3))) tar "melpa" nil nil nil])
  (imenu+ [cl-struct-package-desc imenu+ (20131226 1948) "Extensions to `imenu.el'." nil single "melpa" nil nil nil])
  (indicators [cl-struct-package-desc indicators (20130217 1405) "Display the buffer relative location of line in the fringe." nil single "melpa" nil nil nil])
  (inform7-mode [cl-struct-package-desc inform7-mode (20131009 2354) "Major mode for editing Inform 7 source files" ((sws-mode (0 1))) single "melpa" nil nil nil])
  (insfactor [cl-struct-package-desc insfactor (20140206 1312) "Client for a Clojure project with insfactor in it" nil single "melpa" nil nil nil])
  (io-mode [cl-struct-package-desc io-mode (20140102 810) "Major mode to edit Io language files in Emacs" nil single "melpa" nil nil nil])
  (io-mode-inf [cl-struct-package-desc io-mode-inf (20140128 1134) "Interaction with an Io interpreter." nil single "melpa" nil nil nil])
  (isearch-prop [cl-struct-package-desc isearch-prop (20131227 127) "Search text-property or overlay-property contexts." nil single "melpa" nil nil nil])
  (ivs-edit [cl-struct-package-desc ivs-edit (20140301 859) "IVS (Ideographic Variation Sequence) editing tool" ((emacs (24 3))) tar "melpa" nil nil nil])
  (japanese-holidays [cl-struct-package-desc japanese-holidays (20130928 949) "calendar functions for the Japanese calendar" ((cl-lib (0 3))) single "melpa" nil nil nil])
  (java-snippets [cl-struct-package-desc java-snippets (20140206 1831) "Yasnippets for Java" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (jedi-direx [cl-struct-package-desc jedi-direx (20140310 236) "Tree style source code viewer for Python buffer" ((jedi (0 1 2)) (direx (0 1 -3))) single "melpa" nil nil nil])
  (jquery-doc [cl-struct-package-desc jquery-doc (20131223 845) "jQuery api documentation interface for emacs" nil tar "melpa" nil nil nil])
  (js-doc [cl-struct-package-desc js-doc (20131215 519) "Insert JsDoc style comment easily" nil single "melpa" nil nil nil])
  (json-reformat [cl-struct-package-desc json-reformat (20140301 39) "Reformatting tool for JSON" nil single "melpa" nil nil nil])
  (jsx-mode [cl-struct-package-desc jsx-mode (20130908 1024) "major mode for JSX" nil single "melpa" nil nil nil])
  (jumblr [cl-struct-package-desc jumblr (20131005 1810) "an anagram game for emacs" ((s (1 8 0)) (dash (2 2 0))) tar "melpa" nil nil nil])
  (jvm-mode [cl-struct-package-desc jvm-mode (20140305 40) "Monitor and manage your JVMs" ((dash (2 6 0)) (emacs (24))) single "melpa" nil nil nil])
  (kaesar [cl-struct-package-desc kaesar (20131030 2312) "Another AES algorithm encrypt/decrypt string with password." nil single "melpa" nil nil nil])
  (kaesar-file [cl-struct-package-desc kaesar-file (20130912 212) "Encrypt/Decrypt file by AES with password." ((kaesar (0 1 1))) single "melpa" nil nil nil])
  (kaesar-mode [cl-struct-package-desc kaesar-mode (20131030 2312) "Encrypt/Decrypt buffer by AES with password." ((kaesar (0 1 4))) single "melpa" nil nil nil])
  (key-intercept [cl-struct-package-desc key-intercept (20140210 2349) "Intercept prefix keys" nil single "melpa" nil nil nil])
  (know-your-http-well [cl-struct-package-desc know-your-http-well (20131125 1540) "Look up the meaning of HTTP headers, methods, relations, status codes" nil tar "melpa" nil nil nil])
  (kolon-mode [cl-struct-package-desc kolon-mode (20140122 334) "Syntax highlighting for Text::Xslate's Kolon syntax" nil single "melpa" nil nil nil])
  (latex-extra [cl-struct-package-desc latex-extra (20140111 724) "Adds several useful functionalities to LaTeX-mode." ((auctex (11 86 1))) single "melpa" nil nil nil])
  (ledger-mode [cl-struct-package-desc ledger-mode (20140204 615) "Helper code for use with the \"ledger\" command-line tool" nil tar "melpa" nil nil nil])
  (lfe-mode [cl-struct-package-desc lfe-mode (20140113 1611) "Lisp Flavoured Erlang mode" nil tar "melpa" nil nil nil])
  (lice [cl-struct-package-desc lice (20140116 657) "License And Header Template" nil tar "melpa" nil nil nil])
  (lingr [cl-struct-package-desc lingr (20100807 1031) "Lingr Client for GNU Emacs" nil single "melpa" nil nil nil])
  (link [cl-struct-package-desc link (20131005 526) "Hypertext links in text buffers" nil single "melpa" nil nil nil])
  (lispy [cl-struct-package-desc lispy (20140310 520) "vi-like Paredit" ((helm (1 5 3)) (ace-jump-mode (2 0)) (s (1 4 0)) (noflet (0 0 10)) (multiple-cursors (1 3 0)) (iedit (0 97))) tar "melpa" nil nil nil])
  (list-packages-ext [cl-struct-package-desc list-packages-ext (20130927 908) "Extras for list-packages" ((s (1 6 0)) (ht (1 5 0)) (persistent-soft (0 8 6))) single "melpa" nil nil nil])
  (list-processes+ [cl-struct-package-desc list-processes+ (20131117 1935) "Add process management to `list-processes'" nil single "melpa" nil nil nil])
  (literate-coffee-mode [cl-struct-package-desc literate-coffee-mode (20140307 1644) "major-mode for Literate CoffeeScript" ((coffee-mode (0 5 0))) single "melpa" nil nil nil])
  (m-buffer [cl-struct-package-desc m-buffer (20140305 201) "Buffer Manipulation Functions" ((dash (2 5 0)) (emacs (24 3))) single "melpa" nil nil nil])
  (macros+ [cl-struct-package-desc macros+ (20131227 136) "Extensions to `macros.el'." nil single "melpa" nil nil nil])
  (magit-annex [cl-struct-package-desc magit-annex (20140228 2000) "Use git annex within magit" ((magit (1 2 0))) single "melpa" nil nil nil])
  (magit-log-edit [cl-struct-package-desc magit-log-edit (20140303 700) "[SEMI-OBSOLETE] major mode for editing Git commit messages" ((cl-lib (0 3)) (magit (1 3 0))) single "melpa" nil nil nil])
  (magit-stgit [cl-struct-package-desc magit-stgit (20140129 609) "StGit plug-in for Magit" ((cl-lib (0 3)) (magit (1 3 0))) single "melpa" nil nil nil])
  (magit-svn [cl-struct-package-desc magit-svn (20140206 713) "git-svn plug-in for Magit" ((cl-lib (0 3)) (magit (1 3 0))) single "melpa" nil nil nil])
  (magit-topgit [cl-struct-package-desc magit-topgit (20140214 1108) "topgit plug-in for Magit" ((cl-lib (0 3)) (magit (1 3 0))) single "melpa" nil nil nil])
  (make-color [cl-struct-package-desc make-color (20140222 237) "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" nil single "melpa" nil nil nil])
  (makey [cl-struct-package-desc makey (20131231 630) "interactive commandline mode" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (malabar-mode [cl-struct-package-desc malabar-mode (20140307 1420) "A better Java mode for Emacs" ((fringe-helper (1 0 1))) tar "melpa" nil nil nil])
  (manage-minor-mode [cl-struct-package-desc manage-minor-mode (20140310 637) "Manage your minor-modes easily" ((emacs (24 3))) single "melpa" nil nil nil])
  (math-symbols [cl-struct-package-desc math-symbols (20130910 31) "Math Symbol Input methods and conversion tools" ((helm (1 0))) tar "melpa" nil nil nil])
  (matlab-mode [cl-struct-package-desc matlab-mode (20140307 2322) "No description available." nil tar "melpa" nil nil nil])
  (mb-depth+ [cl-struct-package-desc mb-depth+ (20131227 137) "Indicate minibuffer-depth in prompt" nil single "melpa" nil nil nil])
  (mc-extras [cl-struct-package-desc mc-extras (20130909 27) "Extra functions for multiple-cursors mode." ((multiple-cursors (1 2 1))) tar "melpa" nil nil nil])
  (menu-bar+ [cl-struct-package-desc menu-bar+ (20131227 137) "Extensions to `menu-bar.el'." nil single "melpa" nil nil nil])
  (merlin [cl-struct-package-desc merlin (20140303 1115) "Mode for Merlin, an assistant for OCaml." nil single "melpa" nil nil nil])
  (midje-test-mode [cl-struct-package-desc midje-test-mode (20131208 914) "Minor mode for midje" ((clojure-mode (1 7)) (cider (0 3 0))) single "melpa" nil nil nil])
  (minibuffer-complete-cycle [cl-struct-package-desc minibuffer-complete-cycle (20130813 945) "Cycle through the *Completions* buffer" nil single "melpa" nil nil nil])
  (minibuffer-cua [cl-struct-package-desc minibuffer-cua (20130906 434) "Make CUA mode's S-up/S-down work in minibuffer" nil single "melpa" nil nil nil])
  (mip-mode [cl-struct-package-desc mip-mode (20140128 549) "virtual projects for emacs." ((dash (2 5 0))) single "melpa" nil nil nil])
  (misc-cmds [cl-struct-package-desc misc-cmds (20140101 100) "Miscellaneous commands (interactive functions)." nil single "melpa" nil nil nil])
  (mobdebug-mode [cl-struct-package-desc mobdebug-mode (20140109 1946) "Major mode for MobDebug" ((lua-mode (20130419)) (emacs (24))) single "melpa" nil nil nil])
  (morlock [cl-struct-package-desc morlock (20140309 1759) "more font-lock keywords for elisp" nil single "melpa" nil nil nil])
  (mouse3 [cl-struct-package-desc mouse3 (20140226 2109) "Customizable behavior for `mouse-3'." nil single "melpa" nil nil nil])
  (mtgox [cl-struct-package-desc mtgox (20140122 1207) "Mtgox extension, get the last average price" ((json (1 2)) (request (0 2 0))) single "melpa" nil nil nil])
  (mu4e-maildirs-extension [cl-struct-package-desc mu4e-maildirs-extension (20140308 131) "Show mu4e maildirs summary in mu4e-main-view" nil single "melpa" nil nil nil])
  (mustang-theme [cl-struct-package-desc mustang-theme (20130920 939) "port of vim's mustang theme" nil single "melpa" nil nil nil])
  (mvn [cl-struct-package-desc mvn (20131227 2312) "helpers for compiling with maven" nil single "melpa" nil nil nil])
  (mykie [cl-struct-package-desc mykie (20140221 1925) "Command multiplexer: Register multiple functions to a keybind" nil tar "melpa" nil nil nil])
  (naked [cl-struct-package-desc naked (20131227 142) "Provide for naked key descriptions: no angle brackets." nil single "melpa" nil nil nil])
  (nanowrimo [cl-struct-package-desc nanowrimo (20131130 2140) "Track progress for nanowrimo" nil single "melpa" nil nil nil])
  (navi-mode [cl-struct-package-desc navi-mode (20140307 322) "major-mode for easy buffer-navigation" nil single "melpa" nil nil nil])
  (navi2ch [cl-struct-package-desc navi2ch (20130618 514) "Navigator for 2ch for Emacsen" nil tar "melpa" nil nil nil])
  (never-comment [cl-struct-package-desc never-comment (20140104 1407) "Never blocks are comment" nil single "melpa" nil nil nil])
  (newlisp-mode [cl-struct-package-desc newlisp-mode (20140109 1038) "newLISP editing mode for Emacs" nil single "melpa" nil nil nil])
  (nexus [cl-struct-package-desc nexus (20140114 505) "REST Client for Nexus Maven Repository servers" nil tar "melpa" nil nil nil])
  (ninja-mode [cl-struct-package-desc ninja-mode (20140123 829) "Major mode for editing .ninja files" nil single "melpa" nil nil nil])
  (nnir-est [cl-struct-package-desc nnir-est (20140301 602) "Gnus nnir interface for HyperEstraier" nil single "melpa" nil nil nil])
  (novice+ [cl-struct-package-desc novice+ (20131227 143) "Extensions to `novice.el'." nil single "melpa" nil nil nil])
  (number-font-lock-mode [cl-struct-package-desc number-font-lock-mode (20131027 913) "Syntax highlighting of numeric literals" ((emacs (24))) single "melpa" nil nil nil])
  (nummm-mode [cl-struct-package-desc nummm-mode (20131117 214) "Display the number of minor modes instead of their names" nil single "melpa" nil nil nil])
  (nvm [cl-struct-package-desc nvm (20140121 540) "Manage Node versions within Emacs" ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0))) single "melpa" nil nil nil])
  (obsidian-theme [cl-struct-package-desc obsidian-theme (20130920 937) "port of the eclipse obsidian theme" nil single "melpa" nil nil nil])
  (omniref [cl-struct-package-desc omniref (20140222 1226) "Omniref Ruby documentation search engine interface" nil single "melpa" nil nil nil])
  (omnisharp [cl-struct-package-desc omnisharp (20140123 43) "Omnicompletion (intellisense) and more for C#" ((json (1 2)) (dash (1 8 0)) (popup (0 5)) (auto-complete (1 4)) (flycheck (0 13))) single "melpa" nil nil nil])
  (on-screen [cl-struct-package-desc on-screen (20140118 1143) "guide your eyes while scrolling" nil single "melpa" nil nil nil])
  (oneonone [cl-struct-package-desc oneonone (20140211 2259) "Frame configuration that uses one frame per window." ((hexrgb (0))) single "melpa" nil nil nil])
  (org-ac [cl-struct-package-desc org-ac (20140302 413) "Some auto-complete sources for org-mode" ((auto-complete-pcmp (0 0 1)) (log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (org-drill-table [cl-struct-package-desc org-drill-table (20140117 137) "Generate drill cards from org tables" ((s (1 7 0)) (dash (2 2 0)) (cl-lib (0 3)) (org-plus-contrib (8 2)) (emacs (24 1))) single "melpa" nil nil nil])
  (org-grep [cl-struct-package-desc org-grep (20140214 2022) "Kind of M-x rgrep adapted for Org mode." nil single "melpa" nil nil nil])
  (org-linkany [cl-struct-package-desc org-linkany (20140303 645) "Insert link using anything.el/helm.el on org-mode" ((log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (org-mac-link [cl-struct-package-desc org-mac-link (20140107 519) "Grab links and url from various mac" nil single "melpa" nil nil nil])
  (org-mobile-sync [cl-struct-package-desc org-mobile-sync (20131118 1116) "automatically sync org-mobile on changes" ((emacs (24 3 50)) (org (8 0))) single "melpa" nil nil nil])
  (org-page [cl-struct-package-desc org-page (20140309 2336) "a static site generator based on org mode" ((ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0))) tar "melpa" nil nil nil])
  (org-pandoc [cl-struct-package-desc org-pandoc (20130729 1850) "Export from Org using Pandoc" nil tar "melpa" nil nil nil])
  (org-redmine [cl-struct-package-desc org-redmine (20140117 10) "Redmine tools using Emacs OrgMode" ((anything (0))) single "melpa" nil nil nil])
  (org-repo-todo [cl-struct-package-desc org-repo-todo (20140205 641) "Simple repository todo management with org-mode" nil single "melpa" nil nil nil])
  (org-screenshot [cl-struct-package-desc org-screenshot (20140307 320) "screenshots integrated with org attachment dirs" ((org (7))) single "melpa" nil nil nil])
  (organic-green-theme [cl-struct-package-desc organic-green-theme (20140213 447) "Low-contrast green color theme." nil single "melpa" nil nil nil])
  (outorg [cl-struct-package-desc outorg (20131023 335) "Org-style comment editing" nil single "melpa" nil nil nil])
  (outshine [cl-struct-package-desc outshine (20140308 525) "outline with outshine outshines outline" nil single "melpa" nil nil nil])
  (ox-asciidoc [cl-struct-package-desc ox-asciidoc (20140215 610) "AsciiDoc Back-End for Org Export Engine" ((org (8 1))) single "melpa" nil nil nil])
  (ox-html5slide [cl-struct-package-desc ox-html5slide (20131227 2206) "Export org-mode to HTML5 slide." ((org (8 0))) single "melpa" nil nil nil])
  (ox-pukiwiki [cl-struct-package-desc ox-pukiwiki (20140215 609) "Pukiwiki Back-End for Org Export Engine" ((org (8 1))) single "melpa" nil nil nil])
  (ox-reveal [cl-struct-package-desc ox-reveal (20140212 2104) "reveal.js Presentation Back-End for Org Export Engine" ((org (8 0))) single "melpa" nil nil nil])
  (ox-textile [cl-struct-package-desc ox-textile (20140215 607) "Textile Back-End for Org Export Engine" ((org (8 1))) single "melpa" nil nil nil])
  (ox-tiddly [cl-struct-package-desc ox-tiddly (20131124 804) "org TiddlyWiki exporter" ((org (8))) single "melpa" nil nil nil])
  (ox-twiki [cl-struct-package-desc ox-twiki (20140120 2239) "org Twiki and Foswiki export" ((org (8))) single "melpa" nil nil nil])
  (package+ [cl-struct-package-desc package+ (20140102 1411) "Extensions for the package library." nil single "melpa" nil nil nil])
  (package-filter [cl-struct-package-desc package-filter (20140105 1426) "special handling for package.el" nil single "melpa" nil nil nil])
  (palette [cl-struct-package-desc palette (20131227 146) "Color palette useful with RGB, HSV, and color names" ((hexrgb (0))) single "melpa" nil nil nil])
  (paren-face [cl-struct-package-desc paren-face (20140309 1759) "a face for parentheses in lisp modes" nil single "melpa" nil nil nil])
  (parse-csv [cl-struct-package-desc parse-csv (20140203 116) "Parse strings with CSV fields into s-expressions" nil single "melpa" nil nil nil])
  (password-store [cl-struct-package-desc password-store (20140301 1048) "Password store (pass) support" ((f (0 11 0)) (s (1 9 0))) single "melpa" nil nil nil])
  (password-vault [cl-struct-package-desc password-vault (20131105 1703) "A Password manager for Emacs." ((cl-lib (0 2)) (emacs (24))) single "melpa" nil nil nil])
  (peek-mode [cl-struct-package-desc peek-mode (20130620 1246) "Serve buffers live over HTTP with elnode backend" ((elnode (0 9 8 1))) tar "melpa" nil nil nil])
  (perl-completion [cl-struct-package-desc perl-completion (20090527 2336) "No description available." nil single "melpa" nil nil nil])
  (phi-autopair [cl-struct-package-desc phi-autopair (20140224 654) "another simple-minded autopair implementation" ((paredit (20))) single "melpa" nil nil nil])
  (phi-rectangle [cl-struct-package-desc phi-rectangle (20140216 2248) "another rectangle-mark command (rewrite of rect-mark)" nil single "melpa" nil nil nil])
  (phi-search-mc [cl-struct-package-desc phi-search-mc (20131010 358) "multiple-cursors extension for phi-search" ((phi-search (2 0 0)) (multiple-cursors (1 2 1))) single "melpa" nil nil nil])
  (php-auto-yasnippets [cl-struct-package-desc php-auto-yasnippets (20140218 1010) "Creates snippets for PHP functions" ((php-mode (1 11)) (yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (php-boris-minor-mode [cl-struct-package-desc php-boris-minor-mode (20140209 1035) "a minor mode to evaluate PHP code in the Boris repl" ((php-boris (0 0 1)) (highlight (0))) single "melpa" nil nil nil])
  (pianobar [cl-struct-package-desc pianobar (20120128 1301) "thin wrapper for Pianobar, a Pandora Radio client" nil single "melpa" nil nil nil])
  (pig-snippets [cl-struct-package-desc pig-snippets (20130912 2324) "Snippets for pig-mode" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (pillar [cl-struct-package-desc pillar (20140207 612) "Major mode for editing Pillar files" ((makey (0 3))) single "melpa" nil nil nil])
  (pinot [cl-struct-package-desc pinot (20140211 1226) "Emacs interface to pinot-search" nil tar "melpa" nil nil nil])
  (planet-theme [cl-struct-package-desc planet-theme (20140306 829) "A dark theme inspired by Gmail's 'Planets' theme of yore" ((emacs (24))) single "melpa" nil nil nil])
  (plsense [cl-struct-package-desc plsense (20140221 1552) "provide interface for PlSense that is a development tool for Perl." ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (plsense-direx [cl-struct-package-desc plsense-direx (20140301 242) "Perl Package Explorer" ((direx (0 1 -3)) (plsense (0 3 2)) (log4e (0 2 0)) (yaxception (0 1))) single "melpa" nil nil nil])
  (point-stack [cl-struct-package-desc point-stack (20140102 1223) "A forward/back stack for point" nil single "melpa" nil nil nil])
  (popup-kill-ring [cl-struct-package-desc popup-kill-ring (20131020 1154) "interactively insert item from kill-ring" ((popup (0 4)) (pos-tip (0 4))) single "melpa" nil nil nil])
  (portage-navi [cl-struct-package-desc portage-navi (20140202 2156) "portage viewer" ((concurrent (0 3 1)) (ctable (0 1 2))) single "melpa" nil nil nil])
  (pp+ [cl-struct-package-desc pp+ (20131227 147) "Extensions to `pp.el'." nil single "melpa" nil nil nil])
  (pretty-symbols [cl-struct-package-desc pretty-symbols (20131125 26) "Draw tokens as Unicode glyphs." nil single "melpa" nil nil nil])
  (prodigy [cl-struct-package-desc prodigy (20140202 2335) "Manage external services from within Emacs" ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) single "melpa" nil nil nil])
  (projectile-rails [cl-struct-package-desc projectile-rails (20140303 1134) "Minor mode for Rails projects based on projectile-mode" ((projectile (1 0 0 -3)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0))) single "melpa" nil nil nil])
  (projector [cl-struct-package-desc projector (20131121 804) "Lightweight library for managing project/repository-aware shell and command buffers" ((alert (1 1))) single "melpa" nil nil nil])
  (projekt [cl-struct-package-desc projekt (20140201 302) "some kind of staging for CVS" ((emacs (24))) single "melpa" nil nil nil])
  (prosjekt [cl-struct-package-desc prosjekt (20140131 944) "a software project tool for emacs" nil tar "melpa" nil nil nil])
  (puppetfile-mode [cl-struct-package-desc puppetfile-mode (20131017 833) "Syntax highlighting for Puppetfiles" nil single "melpa" nil nil nil])
  (pushbullet [cl-struct-package-desc pushbullet (20140204 2004) "Emacs client for the PushBullet Android app" ((grapnel (0 5 2)) (json (1 2)) (ht (2 0))) single "melpa" nil nil nil])
  (py-autopep8 [cl-struct-package-desc py-autopep8 (20140224 1126) "Use autopep8 to beautify a Python buffer" nil single "melpa" nil nil nil])
  (py-gnitset [cl-struct-package-desc py-gnitset (20140224 2010) "Run your Python tests any way you'd like" nil single "melpa" nil nil nil])
  (py-isort [cl-struct-package-desc py-isort (20140227 252) "Use isort to sort the imports in a Python buffer" nil single "melpa" nil nil nil])
  (pydoc-info [cl-struct-package-desc pydoc-info (20110301 34) "Better Python support for info-lookup-symbol." nil tar "melpa" nil nil nil])
  (pyenv-mode [cl-struct-package-desc pyenv-mode (20140307 103) "Integrate pyenv-virtualenv with python-mode" nil single "melpa" nil nil nil])
  (python-cell [cl-struct-package-desc python-cell (20131029 1616) "Support for MATLAB-like cells in python mode" nil single "melpa" nil nil nil])
  (python-info [cl-struct-package-desc python-info (20130916 620) "Python info manual for Emacs" nil tar "melpa" nil nil nil])
  (qiita [cl-struct-package-desc qiita (20140118 44) "Qiita API Library for emacs" ((helm (1 5 9)) (markdown-mode (2 0))) single "melpa" nil nil nil])
  (racket-mode [cl-struct-package-desc racket-mode (20140225 1958) "Major mode for Racket language." nil tar "melpa" nil nil nil])
  (rainbow-blocks [cl-struct-package-desc rainbow-blocks (20140306 1033) "Block syntax highlighting for lisp code" nil single "melpa" nil nil nil])
  (rcirc-alert [cl-struct-package-desc rcirc-alert (20140110 929) "Configurable alert messages on top of RCIRC" nil tar "melpa" nil nil nil])
  (rcirc-controls [cl-struct-package-desc rcirc-controls (20140305 100) "control sequences" nil single "melpa" nil nil nil])
  (rcirc-groups [cl-struct-package-desc rcirc-groups (20131223 404) "an emacs buffer in rcirc-groups major mode" nil single "melpa" nil nil nil])
  (rdf-prefix [cl-struct-package-desc rdf-prefix (20140213 506) "Prefix lookup for RDF" nil single "melpa" nil nil nil])
  (react-snippets [cl-struct-package-desc react-snippets (20140120 1034) "Yasnippets for React" ((yasnippet (0 7 0))) tar "melpa" nil nil nil])
  (readline-complete [cl-struct-package-desc readline-complete (20140215 620) "offers completions in shell mode" nil single "melpa" nil nil nil])
  (recompile-on-save [cl-struct-package-desc recompile-on-save (20140309 1413) "Trigger recompilation on file save." ((dash (1 1 0))) single "melpa" nil nil nil])
  (replace+ [cl-struct-package-desc replace+ (20140130 1702) "Extensions to `replace.el'." nil single "melpa" nil nil nil])
  (req-package [cl-struct-package-desc req-package (20140306 1052) "A use-package wrapper for package runtime dependencies management" ((use-package (1 0))) single "melpa" nil nil nil])
  (reveal-in-finder [cl-struct-package-desc reveal-in-finder (20140205 806) "Reveal the file associated with the buffer in the OS X Finder" nil single "melpa" nil nil nil])
  (review-mode [cl-struct-package-desc review-mode (20140102 2133) "major mode for ReVIEW" nil single "melpa" nil nil nil])
  (roguel-ike [cl-struct-package-desc roguel-ike (20140227 729) "A coffee-break roguelike" ((popup (0 5 0))) tar "melpa" nil nil nil])
  (rotate [cl-struct-package-desc rotate (20140123 116) "Rotate the layout of emacs" nil single "melpa" nil nil nil])
  (rpm-spec-mode [cl-struct-package-desc rpm-spec-mode (20140120 50) "RPM spec file editing commands for Emacs/XEmacs" nil single "melpa" nil nil nil])
  (rtags [cl-struct-package-desc rtags (20140216 1629) "A front-end for rtags" nil single "melpa" nil nil nil])
  (ruby-additional [cl-struct-package-desc ruby-additional (20131030 2113) "ruby-mode extensions yet to be merged into Emacs" ((emacs (24 3)) (ruby-mode (1 2))) tar "melpa" nil nil nil])
  (ruby-refactor [cl-struct-package-desc ruby-refactor (20140104 1354) "A minor mode which presents various Ruby refactoring helpers." ((ruby-mode (1 2))) single "melpa" nil nil nil])
  (runner [cl-struct-package-desc runner (20140106 758) "Improved \"open with\" suggestions for dired" nil single "melpa" nil nil nil])
  (sbt-mode [cl-struct-package-desc sbt-mode (20140128 238) "Major mode for sbt >= 0.12 with scala >= 2.9" ((scala-mode2 (0 22))) tar "melpa" nil nil nil])
  (scratch-ext [cl-struct-package-desc scratch-ext (20140103 2116) "Extensions for *scratch*" nil single "melpa" nil nil nil])
  (second-sel [cl-struct-package-desc second-sel (20131227 151) "Secondary selection commands" nil single "melpa" nil nil nil])
  (sequential-command [cl-struct-package-desc sequential-command (20100504 855) "Many commands into one command" nil tar "melpa" nil nil nil])
  (servant [cl-struct-package-desc servant (20140216 419) "ELPA server written in Emacs Lisp" ((s (1 8 0)) (dash (2 2 0)) (f (0 11 0)) (ansi (0 3 0)) (commander (0 5 0)) (epl (0 2)) (shut-up (0 2 1)) (web-server (0 0 1))) tar "melpa" nil nil nil])
  (shadow [cl-struct-package-desc shadow (20110507 24) "That's not the file. That's shadow." nil single "melpa" nil nil nil])
  (shampoo [cl-struct-package-desc shampoo (20131230 219) "A remote Smalltalk development mode" nil tar "melpa" nil nil nil])
  (shell-current-directory [cl-struct-package-desc shell-current-directory (20140101 1554) "create new shell based on buffer directory" nil single "melpa" nil nil nil])
  (shm [cl-struct-package-desc shm (20140310 517) "Structured Haskell Mode" nil tar "melpa" nil nil nil])
  (shut-up [cl-struct-package-desc shut-up (20140211 521) "Shut up would you!" ((cl-lib (0 3))) single "melpa" nil nil nil])
  (simple+ [cl-struct-package-desc simple+ (20131227 154) "Extensions to standard library `simple.el'." ((strings (0))) single "melpa" nil nil nil])
  (simple-rtm [cl-struct-package-desc simple-rtm (20140105 438) "Interactive Emacs mode for Remember The Milk" nil tar "melpa" nil nil nil])
  (skeletor [cl-struct-package-desc skeletor (20140307 1609) "Provides project skeletons for Emacs" ((s (1 7 0)) (f (0 14 0)) (dash (2 2 0)) (cl-lib (0 3)) (emacs (24 1))) tar "melpa" nil nil nil])
  (skewer-reload-stylesheets [cl-struct-package-desc skewer-reload-stylesheets (20140121 544) "live-edit CSS stylesheets." ((skewer-mode (1 5 3))) tar "melpa" nil nil nil])
  (skype [cl-struct-package-desc skype (20131001 2118) "skype UI for emacs users.." nil tar "melpa" nil nil nil])
  (slime-annot [cl-struct-package-desc slime-annot (20131230 1908) "cl-annot support for SLIME" ((slime (0))) single "melpa" nil nil nil])
  (slime-company [cl-struct-package-desc slime-company (20140226 228) "slime completion backend for company mode" ((slime (2 3 2)) (company (0 7))) single "melpa" nil nil nil])
  (slime-volleyball [cl-struct-package-desc slime-volleyball (20130930 821) "A slime volleyball clone" nil tar "melpa" nil nil nil])
  (smart-newline [cl-struct-package-desc smart-newline (20131207 1940) "Provide smart newline for one keybind." nil single "melpa" nil nil nil])
  (smartscan [cl-struct-package-desc smartscan (20131230 739) "Jumps between other symbols found at point" nil single "melpa" nil nil nil])
  (soft-charcoal-theme [cl-struct-package-desc soft-charcoal-theme (20130924 1206) "Dark charcoal theme with soft colors" nil single "melpa" nil nil nil])
  (soft-morning-theme [cl-struct-package-desc soft-morning-theme (20131211 1342) "Emacs24 theme with a light background." nil single "melpa" nil nil nil])
  (soft-stone-theme [cl-struct-package-desc soft-stone-theme (20140108 456) "Emacs 24 theme with a light background." ((emacs (24))) single "melpa" nil nil nil])
  (sos [cl-struct-package-desc sos (20140307 540) "StackOverflow Search" ((org (7))) single "melpa" nil nil nil])
  (soundcloud [cl-struct-package-desc soundcloud (20131210 1103) "a SoundCloud client for Emacs" ((emms (20131016)) (json (1 2)) (deferred (0 3 1)) (string-utils (0 3 2))) single "melpa" nil nil nil])
  (sourcemap [cl-struct-package-desc sourcemap (20140308 133) "Sourcemap parser" ((cl-lib (0 5)) (emacs (24))) single "melpa" nil nil nil])
  (spacegray-theme [cl-struct-package-desc spacegray-theme (20131230 1127) "A Hyperminimal UI Theme" ((emacs (24 1))) single "melpa" nil nil nil])
  (speechd-el [cl-struct-package-desc speechd-el (20130828 1209) "Client to speech synthesizers and Braille displays." nil tar "melpa" nil nil nil])
  (sphinx-frontend [cl-struct-package-desc sphinx-frontend (20131223 329) "Launch build process for rst documents via sphinx." nil single "melpa" nil nil nil])
  (sqlite [cl-struct-package-desc sqlite (20140106 2009) "use sqlite via elisp" nil single "melpa" nil nil nil])
  (stgit [cl-struct-package-desc stgit (20140213 348) "major mode for StGit interaction" nil single "melpa" nil nil nil])
  (strie [cl-struct-package-desc strie (20140109 612) "A simple trie data structure implementation" nil single "melpa" nil nil nil])
  (string-inflection [cl-struct-package-desc string-inflection (20140111 731) "underscore -> UPCASE -> CamelCase conversion of names" nil single "melpa" nil nil nil])
  (strings [cl-struct-package-desc strings (20131227 158) "Miscellaneous string functions." nil single "melpa" nil nil nil])
  (sunny-day-theme [cl-struct-package-desc sunny-day-theme (20140128 551) "Emacs24 theme with a light background." nil single "melpa" nil nil nil])
  (swoop [cl-struct-package-desc swoop (20140306 155) "Peculiar buffer navigation for Emacs" ((ht (2 0)) (pcre2el (1 5)) (async (1 1)) (emacs (24))) tar "melpa" nil nil nil])
  (tab-group [cl-struct-package-desc tab-group (20140306 650) "Grouped tabs and their tabbar" nil single "melpa" nil nil nil])
  (tango-plus-theme [cl-struct-package-desc tango-plus-theme (20140214 505) "A color theme based on the tango palette" nil single "melpa" nil nil nil])
  (tbx2org [cl-struct-package-desc tbx2org (20140224 759) "Tinderbox to org-mode conversion" ((dash (2 5 0)) (s (1 8 0)) (cl-lib (0 4))) single "melpa" nil nil nil])
  (term+ [cl-struct-package-desc term+ (20130612 652) "term-mode enhancement" nil tar "melpa" nil nil nil])
  (term+key-intercept [cl-struct-package-desc term+key-intercept (20140210 2350) "term+ intercept key mapping" ((term+ (0 1)) (key-intercept (0 1))) single "melpa" nil nil nil])
  (term+mux [cl-struct-package-desc term+mux (20140210 2349) "term+ terminal multiplexer and session management" ((term+ (0 1)) (tab-group (0 1))) single "melpa" nil nil nil])
  (tern [cl-struct-package-desc tern (20130828 716) "Tern-powered JavaScript integration" ((json (1 2)) (emacs (24))) single "melpa" nil nil nil])
  (tern-auto-complete [cl-struct-package-desc tern-auto-complete (20130809 229) "Tern Completion by auto-complete.el" ((tern (0 0 1)) (auto-complete (1 4)) (emacs (24))) single "melpa" nil nil nil])
  (thing-cmds [cl-struct-package-desc thing-cmds (20131227 159) "Commands that use things, as defined by `thingatpt.el'." ((hide-comnt (0))) single "melpa" nil nil nil])
  (thingatpt+ [cl-struct-package-desc thingatpt+ (20131227 200) "Extensions to `thingatpt.el'." nil single "melpa" nil nil nil])
  (thrift [cl-struct-package-desc thrift (20130910 912) "Major mode for Apache Thrift files" nil single "melpa" nil nil nil])
  (thumb-frm [cl-struct-package-desc thumb-frm (20131227 201) "Commands for thumbnail frames." ((frame-fns (0)) (frame-cmds (0))) single "melpa" nil nil nil])
  (tiny [cl-struct-package-desc tiny (20140103 305) "Quickly generate linear ranges in Emacs" nil single "melpa" nil nil nil])
  (toml [cl-struct-package-desc toml (20130903 555) "TOML (Tom's Obvious, Minimal Language) parser" nil single "melpa" nil nil nil])
  (tool-bar+ [cl-struct-package-desc tool-bar+ (20131227 203) "Extensions to standard library tool-bar.el" nil single "melpa" nil nil nil])
  (traad [cl-struct-package-desc traad (20140130 2121) "emacs interface to the traad refactoring server." ((deferred (0 3 2)) (popup (0 5 0)) (request (0 2 0))) single "melpa" nil nil nil])
  (traad-autocomplete [cl-struct-package-desc traad-autocomplete (20140130 711) "auto-complete sources for traad" ((traad (0 1)) (auto-complete (1 4 0))) single "melpa" nil nil nil])
  (tracwiki-mode [cl-struct-package-desc tracwiki-mode (20140108 853) "Emacs Major mode for working with Trac" ((xml-rpc (1 6 8))) single "melpa" nil nil nil])
  (tss [cl-struct-package-desc tss (20140221 1555) "provide a interface for auto-complete.el/flymake.el on typescript-mode." ((auto-complete (1 4 0)) (json-mode (1 1 0)) (log4e (0 2 0)) (yaxception (0 1))) tar "melpa" nil nil nil])
  (twig-mode [cl-struct-package-desc twig-mode (20130220 1050) "A major mode for twig" nil single "melpa" nil nil nil])
  (typed-clojure-mode [cl-struct-package-desc typed-clojure-mode (20140223 649) "Typed Clojure minor mode for Emacs" ((clojure-mode (2 1 1)) (cider (0 5 0))) single "melpa" nil nil nil])
  (ucs-cmds [cl-struct-package-desc ucs-cmds (20131227 204) "Macro to create commands that insert Unicode chars." nil single "melpa" nil nil nil])
  (unidecode [cl-struct-package-desc unidecode (20140307 413) "Convert Unicode text into safe ASCII strings" ((cl-lib (0 4))) tar "melpa" nil nil nil])
  (unipoint [cl-struct-package-desc unipoint (20140113 1424) "a simple way to insert unicode characters by TeX name" nil single "melpa" nil nil nil])
  (unison-mode [cl-struct-package-desc unison-mode (20140127 1024) "Syntax highlighting for unison file synchronization program" nil single "melpa" nil nil nil])
  (url-shortener [cl-struct-package-desc url-shortener (20131218 353) "shorten long url and expand tinyurl" nil single "melpa" nil nil nil])
  (urlenc [cl-struct-package-desc urlenc (20140116 656) "URL encoding/decoding utility for Emacs." nil single "melpa" nil nil nil])
  (utop [cl-struct-package-desc utop (20140308 1141) "Universal toplevel for OCaml" ((emacs (24))) single "melpa" nil nil nil])
  (vagrant [cl-struct-package-desc vagrant (20140201 335) "Manage a vagrant box from emacs" nil single "melpa" nil nil nil])
  (vbasense [cl-struct-package-desc vbasense (20140221 1553) "provide a environment like Visual Basic Editor." ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) tar "melpa" nil nil nil])
  (vc-check-status [cl-struct-package-desc vc-check-status (20130814 522) "Warn you when quitting emacs and leaving repo dirty." nil tar "melpa" nil nil nil])
  (vc-osc [cl-struct-package-desc vc-osc (20120910 211) "non-resident support for osc version-control" nil single "melpa" nil nil nil])
  (vim-region [cl-struct-package-desc vim-region (20140223 210) "Select region as vim" ((expand-region (20140127))) single "melpa" nil nil nil])
  (virtualenvwrapper [cl-struct-package-desc virtualenvwrapper (20131120 1008) "a modern virtualenv tool for Emacs" ((dash (1 5 0)) (s (1 6 1))) single "melpa" nil nil nil])
  (vkill [cl-struct-package-desc vkill (20091203 1022) "view and kill Unix processes from within Emacs" nil single "melpa" nil nil nil])
  (volume [cl-struct-package-desc volume (20121025 1538) "tweak your sound card volume from Emacs" nil single "melpa" nil nil nil])
  (w32browser-dlgopen [cl-struct-package-desc w32browser-dlgopen (20131227 209) "Use w32browser with standard Windows Open File box." nil single "melpa" nil nil nil])
  (wakatime-mode [cl-struct-package-desc wakatime-mode (20131223 617) "Automatic time tracking extension based on WakaTime" nil single "melpa" nil nil nil])
  (wand [cl-struct-package-desc wand (20140201 1859) "Magic wand for Emacs - Selecting and executing" ((dash (2 5 0))) tar "melpa" nil nil nil])
  (web-beautify [cl-struct-package-desc web-beautify (20131118 226) "Format HTML, CSS and JavaScript/JSON by js-beautify" nil single "melpa" nil nil nil])
  (web-server [cl-struct-package-desc web-server (20140223 830) "Emacs Web Server" ((emacs (24 3))) tar "melpa" nil nil nil])
  (wgrep-ag [cl-struct-package-desc wgrep-ag (20131209 659) "Writable ag buffer and apply the changes to files" ((wgrep (2 1 5))) single "melpa" nil nil nil])
  (wid-edit+ [cl-struct-package-desc wid-edit+ (20131227 210) "Extensions to standard library `wid-edit.el'." nil single "melpa" nil nil nil])
  (wide-n [cl-struct-package-desc wide-n (20131227 210) "Cycle among buffer restrictions" nil single "melpa" nil nil nil])
  (wimpy-del [cl-struct-package-desc wimpy-del (20131227 211) "Require confirmation for large region deletion." nil single "melpa" nil nil nil])
  (windata [cl-struct-package-desc windata (20080412 1455) "convert window configuration to list" nil single "melpa" nil nil nil])
  (window+ [cl-struct-package-desc window+ (20140216 1650) "Extensions to `window.el'." nil single "melpa" nil nil nil])
  (window-numbering [cl-struct-package-desc window-numbering (20130902 930) "Numbered window shortcuts" nil single "melpa" nil nil nil])
  (wispjs-mode [cl-struct-package-desc wispjs-mode (20140103 1432) "Major mode for Wisp code." ((clojure-mode (0))) single "melpa" nil nil nil])
  (wolfram-mode [cl-struct-package-desc wolfram-mode (20140118 757) "Mathematica editing and inferior mode." ((emacs (24 3))) single "melpa" nil nil nil])
  (wordsmith-mode [cl-struct-package-desc wordsmith-mode (20140203 427) "Syntax analysis and NLP text-processing in Emacs (OSX-only)" nil single "melpa" nil nil nil])
  (wwtime [cl-struct-package-desc wwtime (20120629 1350) "Insert a time of day with appropriate world-wide localization" nil single "melpa" nil nil nil])
  (x-dict [cl-struct-package-desc x-dict (20091203 1023) "emacs interface for several online dictionaries" nil single "melpa" nil nil nil])
  (xcscope [cl-struct-package-desc xcscope (20140128 1356) "cscope interface for (X)Emacs" nil single "melpa" nil nil nil])
  (xmlunicode [cl-struct-package-desc xmlunicode (20140121 623) "Unicode support for XML" nil tar "melpa" nil nil nil])
  (xquery-mode [cl-struct-package-desc xquery-mode (20140121 943) "A simple mode for editing xquery programs" nil tar "melpa" nil nil nil])
  (xterm-color [cl-struct-package-desc xterm-color (20130904 1826) "ANSI & XTERM 256 color support" nil single "melpa" nil nil nil])
  (yabin [cl-struct-package-desc yabin (20140205 1951) "Yet Another Bignum package (A thin wrapper of calc.el)." nil single "melpa" nil nil nil])
  (ztree [cl-struct-package-desc ztree (20140305 1326) "Several text-tree applications" nil tar "melpa" nil nil nil])
  (creds [cl-struct-package-desc creds (0 0 4) "a simple parser credential file lib" nil tar "marmalade" nil nil nil])
  (flycheck-tcl [cl-struct-package-desc flycheck-tcl (0 4) "A flycheck checker for Tcl using ActiveState's tclchecker" ((flycheck (0 17))) single "marmalade" nil nil nil])
  (latex-preview-pane [cl-struct-package-desc latex-preview-pane (20140218 2156) "Makes LaTeX editing less painful by providing a updatable preview pane" nil tar "melpa" nil nil nil] [cl-struct-package-desc latex-preview-pane (20140204) "Makes LaTeX editing less painful by providing a updatable preview pane. Full documentation can be found at: http://www.emacswiki.org/emacs/LaTeXPreviewPane" nil tar "marmalade" nil nil nil])
  (epl [cl-struct-package-desc epl (20140211 524) "Emacs Package Library" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc epl (0 5) "Emacs Package Library -*- lexical-binding: t; -*-" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (lxc [cl-struct-package-desc lxc (20140213 1556) "lxc integration with Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc lxc (0 0 1) "lxc integration with Emacs" nil single "marmalade" nil nil nil])
  (eshell-fringe-status [cl-struct-package-desc eshell-fringe-status (1 0 0) "Show last status in fringe  -*- lexical-binding: t; -*-" nil single "marmalade" nil nil nil])
  (finalize [cl-struct-package-desc finalize (20140127 1046) "finalizers for Emacs Lisp" ((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4))) tar "melpa" nil nil nil] [cl-struct-package-desc finalize (1 0 0) "finalizers for Emacs Lisp" ((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4))) tar "marmalade" nil nil nil])
  (gecf [cl-struct-package-desc gecf (0 1 0) "G\303\266ktu\304\237's Emacs configuration framework." nil single "marmalade" nil nil nil])
  (elfeed [cl-struct-package-desc elfeed (20140220 1643) "an Emacs Atom/RSS feed reader" ((emacs (24 1))) tar "melpa" nil nil nil] [cl-struct-package-desc elfeed (1 1 0) "an Emacs Atom/RSS feed reader" ((emacs (24 1))) tar "marmalade" nil nil nil])
  (cl-lib-highlight [cl-struct-package-desc cl-lib-highlight (20140127 1312) "full cl-lib font-lock highlighting" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc cl-lib-highlight (1 0 0) "full cl-lib font-lock highlighting" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (es-windows [cl-struct-package-desc es-windows (20140211 104) "Window-management utilities" ((cl-lib (0 3)) (emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc es-windows (0 2) "Window-management utilities -*- lexical-binding: t -*-" ((cl-lib (0 3)) (emacs (24))) single "marmalade" nil nil nil])
  (exercism [cl-struct-package-desc exercism (0 0 1) "An Emacs mode for submitting current file to exercism.io" nil single "marmalade" nil nil nil])
  (xkcd [cl-struct-package-desc xkcd (20140226 2347) "View xkcd from Emacs" ((json (1 3))) single "melpa" nil nil nil] [cl-struct-package-desc xkcd (1 0) "View xkcd from Emacs" ((json (1 4))) single "marmalade" nil nil nil])
  (cider [cl-struct-package-desc cider (20140308 111) "Clojure Integrated Development Environment and REPL" ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 4 1)) (pkg-info (0 4))) tar "melpa" nil nil nil] [cl-struct-package-desc cider (0 5 0) "Clojure Integrated Development Environment and REPL" ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 4 1)) (pkg-info (0 4))) tar "marmalade" nil nil nil])
  (pyvenv [cl-struct-package-desc pyvenv (20140224 1119) "Python virtual environment interface" nil single "melpa" nil nil nil] [cl-struct-package-desc pyvenv (1 1) "Python virtual environment interface -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (toggle-test [cl-struct-package-desc toggle-test (20140303 342) "Toggle between source and test files in various programming languages" nil single "melpa" nil nil nil] [cl-struct-package-desc toggle-test (1 0 1) "Toggle between source and test files. It is language agnostic and creates source/test files if they don't exist." nil single "marmalade" nil nil nil])
  (flycheck-haskell [cl-struct-package-desc flycheck-haskell (20140114 454) "Flycheck: Haskell configuration" ((flycheck (0 16)) (haskell-mode (13 7)) (dash (2 4 0)) (f (0 11 0))) tar "melpa" nil nil nil] [cl-struct-package-desc flycheck-haskell (0 1) "Flycheck: Haskell configuration" ((flycheck (0 16)) (haskell-mode (13 7)) (dash (2 4 0)) (f (0 11 0))) tar "marmalade" nil nil nil])
  (jam-mode [cl-struct-package-desc jam-mode (0 3) "Font-lock support for Jam files" nil single "marmalade" nil nil nil])
  (nose-mode [cl-struct-package-desc nose-mode (0 1) "Minor mode for running nose tests." ((nose (0 1 1))) tar "marmalade" nil nil nil])
  (downplay-mode [cl-struct-package-desc downplay-mode (20140110 2058) "focus attention on a region of the buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc downplay-mode (0 1) "focus attention on a region of the buffer" nil single "marmalade" nil nil nil])
  (steady-theme [cl-struct-package-desc steady-theme (0 1 0) "A steady theme for Emacs  -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (insert-shebang [cl-struct-package-desc insert-shebang (20140106 2209) "Insert shebang line automatically." nil single "melpa" nil nil nil] [cl-struct-package-desc insert-shebang (0 9 3) "Insert shebang line automatically." nil single "marmalade" nil nil nil])
  (wisp [cl-struct-package-desc wisp (0 1 3) "Supporting tools for editing wisp: The Whitespace-to-Lisp preprocesor" nil single "marmalade" nil nil nil])
  (gnus-summary-ext [cl-struct-package-desc gnus-summary-ext (20131222 2021) "Extra limit and process mark commands for the gnus summary buffer" ((macro-utils (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc gnus-summary-ext (0 1) "Extra limit and process mark commands for the gnus summary buffer" ((macro-utils (1 0))) single "marmalade" nil nil nil])
  (bubbleberry-theme [cl-struct-package-desc bubbleberry-theme (20131223 349) "A theme based on LightTable for Emacs24" ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc bubbleberry-theme (0 1 2) "A theme based on LightTable for Emacs24" ((emacs (24 1))) single "marmalade" nil nil nil])
  (ido-select-window [cl-struct-package-desc ido-select-window (20131220 1247) "Select a window using ido and buffer names" ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc ido-select-window (0 1 0) "Select a window using ido and buffer names." nil tar "marmalade" nil nil nil])
  (dakrone-theme [cl-struct-package-desc dakrone-theme (20140211 2045) "dakrone's custom dark theme" nil single "melpa" nil nil nil] [cl-struct-package-desc dakrone-theme (0 0 2) "dakrone's custom dark theme" nil single "marmalade" nil nil nil])
  (flymake-racket [cl-struct-package-desc flymake-racket (20131209 2157) "A flymake handler for scheme-mode files" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-racket (0 40) "A flymake handler for scheme-mode files" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (org-gnome [cl-struct-package-desc org-gnome (20140111 813) "Orgmode integration with the GNOME desktop" ((notify (2010 8 20)) (telepathy (0 1)) (gnome-calendar (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc org-gnome (0 1) "Orgmode integration with the GNOME desktop" ((notify (2010 8 20)) (telepathy (0 1))) single "marmalade" nil nil nil])
  (telepathy [cl-struct-package-desc telepathy (20131209 458) "Access Telepathy from Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc telepathy (0 1) "Access Telepathy from Emacs" nil single "marmalade" nil nil nil])
  (gvpr-mode [cl-struct-package-desc gvpr-mode (20131208 918) "A major mode offering basic syntax coloring for gvpr scripts." nil single "melpa" nil nil nil] [cl-struct-package-desc gvpr-mode (0 1 0) "A major mode offering basic syntax coloring for gvpr scripts." nil single "marmalade" nil nil nil])
  (flycheck-ledger [cl-struct-package-desc flycheck-ledger (20131218 324) "Flycheck integration for ledger files" ((flycheck (0 15))) single "melpa" nil nil nil] [cl-struct-package-desc flycheck-ledger (0 2) "Flycheck integration for ledger files" ((flycheck (0 15))) single "marmalade" nil nil nil])
  (pinboard-api [cl-struct-package-desc pinboard-api (20131207 1124) "Rudimentary http://pinboard.in integration" nil single "melpa" nil nil nil] [cl-struct-package-desc pinboard-api (0 1) "Rudimentary http://pinboard.in integration" nil single "marmalade" nil nil nil])
  (column-enforce-mode [cl-struct-package-desc column-enforce-mode (20131209 956) "Highlight text that extends beyond a  column" nil single "melpa" nil nil nil] [cl-struct-package-desc column-enforce-mode (1 0 3) "Highlight text that extends beyond a  column" nil single "marmalade" nil nil nil])
  (ix [cl-struct-package-desc ix (20131027 929) "Emacs client for http://ix.io pastebin" ((grapnel (0 5 3))) single "melpa" nil nil nil] [cl-struct-package-desc ix (0 7) "Emacs client for http://ix.io pastebin" ((grapnel (0 5 3))) single "marmalade" nil nil nil])
  (flycheck-hdevtools [cl-struct-package-desc flycheck-hdevtools (20131130 1105) "A flycheck checker for Haskell using hdevtools" ((flycheck (0 15))) single "melpa" nil nil nil] [cl-struct-package-desc flycheck-hdevtools (0 2) "A flycheck checker for Haskell using hdevtools" ((flycheck (0 15))) single "marmalade" nil nil nil])
  (zeal-at-point [cl-struct-package-desc zeal-at-point (20131210 503) "Search the word at point with Zeal" nil single "melpa" nil nil nil] [cl-struct-package-desc zeal-at-point (0 0 3) "Search the word at point with Zeal" nil single "marmalade" nil nil nil])
  (tdd-status-mode-line [cl-struct-package-desc tdd-status-mode-line (20131123 916) "TDD status on the mode-line" nil single "melpa" nil nil nil] [cl-struct-package-desc tdd-status-mode-line (0 1 2) "TDD status on the mode-line" nil single "marmalade" nil nil nil])
  (troncle [cl-struct-package-desc troncle (0 1 2) "Emacs convenience functions for tracing clojure code" ((cider (0 5 0))) single "marmalade" nil nil nil])
  (free-keys [cl-struct-package-desc free-keys (20140309 1051) "Show free keybindings for modkeys or prefixes" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc free-keys (0 1) "Show free keybindings for modkeys or prefixes" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (prognth [cl-struct-package-desc prognth (20130920 1059) "Extend prog1 to arbitrary index" nil single "melpa" nil nil nil] [cl-struct-package-desc prognth (1 0) "Extend prog1 to arbitrary index" nil single "marmalade" nil nil nil])
  (ariadne [cl-struct-package-desc ariadne (20131117 911) "Ariadne plugin for Emacs" ((bert (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc ariadne (0 1) "Ariadne plugin for Emacs" ((bert (0 1))) single "marmalade" nil nil nil])
  (bert [cl-struct-package-desc bert (20131117 214) "BERT serialization library for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc bert (0 1) "BERT serialization library for Emacs" nil single "marmalade" nil nil nil])
  (livid-mode [cl-struct-package-desc livid-mode (20131116 544) "Live browser eval of JavaScript every time a buffer changes" ((skewer-mode (1 5 3)) (s (1 8 0))) single "melpa" nil nil nil] [cl-struct-package-desc livid-mode (0 1 0) "Live browser eval of JavaScript every time a buffer changes" ((skewer-mode (1 5 3)) (s (1 8 0))) single "marmalade" nil nil nil])
  (minitest [cl-struct-package-desc minitest (20140226 1637) "An Emacs mode for ruby minitest files" ((dash (1 0 0))) single "melpa" nil nil nil] [cl-struct-package-desc minitest (0 5) "An Emacs mode for ruby minitest files" ((dash (1 0 0))) single "marmalade" nil nil nil])
  (nrepl-discover [cl-struct-package-desc nrepl-discover (0 0 1) "Client to load commands from nrepl server" nil single "marmalade" nil nil nil])
  (json-snatcher [cl-struct-package-desc json-snatcher (20131110 1107) "Grabs the path to JSON values in a JSON file" ((emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc json-snatcher (1 0) "Grabs the path to JSON values in a JSON file." nil single "marmalade" nil nil nil])
  (ac-inf-ruby [cl-struct-package-desc ac-inf-ruby (20131115 350) "Enable auto-complete in inf-ruby sessions" ((inf-ruby (2 3 2)) (auto-complete (1 4))) single "melpa" nil nil nil] [cl-struct-package-desc ac-inf-ruby (0 4) "Enable auto-complete in inf-ruby sessions" ((inf-ruby (2 3 2)) (auto-complete (1 4))) single "marmalade" nil nil nil])
  (relax [cl-struct-package-desc relax (20131029 1434) "For browsing and interacting with CouchDB" ((json (1 2))) single "melpa" nil nil nil] [cl-struct-package-desc relax (0 2) "For browsing and interacting with CouchDB" ((json (1 2))) single "marmalade" nil nil nil])
  (el-init [cl-struct-package-desc el-init (20130416) "Loader for configuration files" nil tar "marmalade" nil nil nil])
  (lyskom [cl-struct-package-desc lyskom (20131008) "LysKOM elisp client." nil single "marmalade" nil nil nil])
  (proxy-mode [cl-struct-package-desc proxy-mode (0 9) "Provides proxy minor mode." nil single "marmalade" nil nil nil])
  (latest-clojure-libraries [cl-struct-package-desc latest-clojure-libraries (20140309 850) "Clojure dependency resolver" nil single "melpa" nil nil nil] [cl-struct-package-desc latest-clojure-libraries (0 5) "Clojure dependency resolver" nil single "marmalade" nil nil nil])
  (list-register [cl-struct-package-desc list-register (20130824 1200) "List register" nil single "melpa" nil nil nil] [cl-struct-package-desc list-register (2 2) "List register" nil single "marmalade" nil nil nil])
  (anzu [cl-struct-package-desc anzu (20140308 136) "Show number of matches in mode-line while searching" ((cl-lib (0 5)) (emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc anzu (0 22) "Show number of matches in mode-line while searching" nil single "marmalade" nil nil nil])
  (magit-find-file [cl-struct-package-desc magit-find-file (20130915 423) "completing-read over all files in Git" ((magit (1 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc magit-find-file (1 0 4) "completing-read over all files in Git" ((magit (1 2 0))) single "marmalade" nil nil nil])
  (sequences [cl-struct-package-desc sequences (20130908 1122) "Ports of some Clojure sequence functions." ((emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc sequences (0 1 0) "Ports of some Clojure sequence functions." ((emacs (24))) single "marmalade" nil nil nil])
  (sensitive [cl-struct-package-desc sensitive (20131015 635) "A dead simple way to load sensitive information" ((emacs (24)) (sequences (0 1 0))) single "melpa" nil nil nil] [cl-struct-package-desc sensitive (1 0 1) "A dead simple way to load sensitive information" ((emacs (24)) (sequences (0 1 0))) single "marmalade" nil nil nil])
  (skewer-less [cl-struct-package-desc skewer-less (20131015 622) "Skewer support for live LESS stylesheet updates" ((skewer-mode (1 5 3))) single "melpa" nil nil nil] [cl-struct-package-desc skewer-less (0 2) "Skewer support for live LESS stylesheet updates" ((skewer-mode (1 5 3))) single "marmalade" nil nil nil])
  (evil-matchit [cl-struct-package-desc evil-matchit (20140304 2021) "Vim matchit ported into Emacs (requires EVIL)" nil tar "melpa" nil nil nil] [cl-struct-package-desc evil-matchit (1 2 7) "Vim matchit ported into Emacs (requires EVIL)" nil tar "marmalade" nil nil nil])
  (tbemail [cl-struct-package-desc tbemail (0 2) "Provide syntax highlighting for email editing via" nil single "marmalade" nil nil nil])
  (timestamper [cl-struct-package-desc timestamper (0 1 0) "A minor mode for easy timelogging" nil single "marmalade" nil nil nil])
  (pbcopy [cl-struct-package-desc pbcopy (0 1 0) "OS X clipboard integration for Emacs" nil single "marmalade" nil nil nil])
  (tommyh-theme [cl-struct-package-desc tommyh-theme (20131004 1630) "A bright, bold-colored theme for emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc tommyh-theme (1 2) "A bright, bold-colored theme for emacs." nil single "marmalade" nil nil nil])
  (ample-zen-theme [cl-struct-package-desc ample-zen-theme (20131129 440) "AmpleZen Theme for Emacs 24" nil single "melpa" nil nil nil] [cl-struct-package-desc ample-zen-theme (0 2) "AmpleZen Theme for Emacs 24" nil single "marmalade" nil nil nil])
  (iasm-mode [cl-struct-package-desc iasm-mode (20131004 1644) "interactive assembly major mode." nil tar "melpa" nil nil nil] [cl-struct-package-desc iasm-mode (0 1) "interactive assembly major mode." nil single "marmalade" nil nil nil])
  (ac-geiser [cl-struct-package-desc ac-geiser (20130928 2347) "Auto-complete backend for geiser" ((geiser (0 5)) (auto-complete (1 4))) tar "melpa" nil nil nil] [cl-struct-package-desc ac-geiser (0 1) "Auto-complete backend for geiser" ((geiser (0 5)) (auto-complete (1 4))) tar "marmalade" nil nil nil])
  (java-file-create [cl-struct-package-desc java-file-create (1 0) "automatically insert contents of empty java files" nil single "marmalade" nil nil nil])
  (isgd [cl-struct-package-desc isgd (20130927 657) "Shorten URLs using the isgd.com shortener service" nil single "melpa" nil nil nil] [cl-struct-package-desc isgd (20130927) "Shorten URLs using the isgd.com shortener service" nil single "marmalade" nil nil nil])
  (whitespace-cleanup-mode [cl-struct-package-desc whitespace-cleanup-mode (20131205 1117) "Intelligently call whitespace-cleanup on save" nil single "melpa" nil nil nil] [cl-struct-package-desc whitespace-cleanup-mode (0 8) "Intelligently call whitespace-cleanup on save" nil single "marmalade" nil nil nil])
  (osx-pseudo-daemon [cl-struct-package-desc osx-pseudo-daemon (20131026 1730) "Daemon mode that plays nice with OSX." nil single "melpa" nil nil nil] [cl-struct-package-desc osx-pseudo-daemon (1 0) "Daemon mode that plays nice with OSX." nil single "marmalade" nil nil nil])
  (zone-matrix [cl-struct-package-desc zone-matrix (0 0 1) "Matrix themed Zone mode" nil tar "marmalade" nil nil nil])
  (elfeed-web [cl-struct-package-desc elfeed-web (20140127 1410) "web interface to Elfeed" ((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1))) tar "melpa" nil nil nil] [cl-struct-package-desc elfeed-web (1 1 0) "web interface to Elfeed" ((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1))) tar "marmalade" nil nil nil])
  (wonderland [cl-struct-package-desc wonderland (20130912 1819) "declarative configuration for Emacsen" ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc wonderland (0 1 1) "declarative configuration for Emacsen -*- lexical-binding: t -*-" ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) single "marmalade" nil nil nil])
  (jujube-theme [cl-struct-package-desc jujube-theme (0 1) "Pastel theme loosely based on jellybeans" nil single "marmalade" nil nil nil])
  (helm-helm-commands [cl-struct-package-desc helm-helm-commands (20130902 1048) "List all helm commands with helm" ((helm (1 5 4))) single "melpa" nil nil nil] [cl-struct-package-desc helm-helm-commands (0 2) "List all helm commands with helm" ((helm (1 5 4))) single "marmalade" nil nil nil])
  (evil-indent-textobject [cl-struct-package-desc evil-indent-textobject (20130831 1519) "evil textobjects based on indentation" ((evil (0))) single "melpa" nil nil nil] [cl-struct-package-desc evil-indent-textobject (0 2) "evil textobjects based on indentation" ((evil (0))) single "marmalade" nil nil nil])
  (multi [cl-struct-package-desc multi (20131013 844) "Clojure-style multi-methods for emacs lisp" ((emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc multi (2 0 1) "Clojure-style multi-methods for emacs lisp -*- lexical-binding: t -*-" ((emacs (24))) single "marmalade" nil nil nil])
  (gerrit-download [cl-struct-package-desc gerrit-download (0 2) "Show gerrit reviews in a diff buffer." ((magit (20130828 1540))) single "marmalade" nil nil nil])
  (waher-theme [cl-struct-package-desc waher-theme (20130917 7) "Emacs 24 theme based on waher for st2 by dduckster" ((emacs (24 1))) single "marmalade" nil nil nil])
  (comint-better-defaults [cl-struct-package-desc comint-better-defaults (1 0) "better defaults for comint-derived modes" nil single "marmalade" nil nil nil])
  (winpoint-ignore-dired [cl-struct-package-desc winpoint-ignore-dired (1 1) "Have winpoint ignore dired-mode buffers" ((winpoint (1 0))) single "marmalade" nil nil nil])
  (tox [cl-struct-package-desc tox (20130925 731) "Launch current python test with tox" nil single "melpa" nil nil nil] [cl-struct-package-desc tox (0 1) "Launch current python test with tox." nil single "marmalade" nil nil nil])
  (smart-whitespace-comment-fixup [cl-struct-package-desc smart-whitespace-comment-fixup (1 0) "Enables advice around yanking/killing lines that auto-indents and formats properly" nil single "marmalade" nil nil nil])
  (smtpmail-multi [cl-struct-package-desc smtpmail-multi (0 6) "Use different smtp servers for sending mail" nil single "marmalade" nil nil nil])
  (openstack-cgit-browse-file [cl-struct-package-desc openstack-cgit-browse-file (20130819 227) "Browse the current file in OpenStack cgit" nil single "melpa" nil nil nil] [cl-struct-package-desc openstack-cgit-browse-file (0 2) "Browse the current file in OpenStack cgit" nil single "marmalade" nil nil nil])
  (flycheck-cask [cl-struct-package-desc flycheck-cask (20140118 923) "Cask support in Flycheck" ((flycheck (0 14)) (dash (2 4 0)) (f (0 11 0))) single "melpa" nil nil nil] [cl-struct-package-desc flycheck-cask (0 1) "Cask support in Flycheck -*- lexical-binding: t; -*-" ((flycheck (0 14)) (dash (2 0 0)) (f (0 6 0))) single "marmalade" nil nil nil])
  (dash-functional [cl-struct-package-desc dash-functional (20130831 1340) "Collection of useful combinators for Emacs Lisp" ((dash (2 0 0)) (emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc dash-functional (1 0 0) "Collection of useful combinators for Emacs Lisp  -*- lexical-binding: t -*-" ((dash (2 0 0)) (emacs (24))) single "marmalade" nil nil nil])
  (pkg-info [cl-struct-package-desc pkg-info (20140310 326) "Information about packages" ((dash (1 6 0)) (epl (0 4))) single "melpa" nil nil nil] [cl-struct-package-desc pkg-info (0 4) "Information about packages       -*- lexical-binding: t; -*-" ((dash (1 6 0)) (epl (0 4))) single "marmalade" nil nil nil])
  (discord [cl-struct-package-desc discord (0 5) "Discordian dates for calendar" nil single "marmalade" nil nil nil])
  (aok [cl-struct-package-desc aok (20130824 1127) "various useful ways to do `multi-occur'" nil single "melpa" nil nil nil] [cl-struct-package-desc aok (0 1) "various useful ways to do `multi-occur'" nil single "marmalade" nil nil nil])
  (magit-tramp [cl-struct-package-desc magit-tramp (20131224 1023) "git method for TRAMP" ((magit (1 2 0))) tar "melpa" nil nil nil] [cl-struct-package-desc magit-tramp (0 1 0) "git method for TRAMP" ((magit (1 2 0))) single "marmalade" nil nil nil])
  (tronesque-theme [cl-struct-package-desc tronesque-theme (20130822 1536) "Color Theme based on Tron universe." nil single "melpa" nil nil nil] [cl-struct-package-desc tronesque-theme (1 3) "Color Theme based on Tron universe." nil single "marmalade" nil nil nil])
  (helm-recoll [cl-struct-package-desc helm-recoll (20130905 2330) "helm interface for the recoll desktop search tool." ((helm (1 5 4))) single "marmalade" nil nil nil] [cl-struct-package-desc helm-recoll (20130905 1822) "helm interface for the recoll desktop search tool." ((helm (1 5 4))) single "melpa" nil nil nil])
  (god-mode [cl-struct-package-desc god-mode (20140228 432) "God-like command entering minor mode" nil single "melpa" nil nil nil] [cl-struct-package-desc god-mode (2 12 0) "God-like command entering minor mode" nil single "marmalade" nil nil nil])
  (heroku-theme [cl-struct-package-desc heroku-theme (20130809 2143) "Heroku color theme" nil single "melpa" nil nil nil] [cl-struct-package-desc heroku-theme (1 1 0) "Heroku color theme" nil single "marmalade" nil nil nil])
  (tsql [cl-struct-package-desc tsql (1 0) "customizes sql.el for T-SQL" nil single "marmalade" nil nil nil])
  (helm-delicious [cl-struct-package-desc helm-delicious (1 3) "helm extensions for delicious bookmarks" nil single "marmalade" nil nil nil])
  (wedge-ws [cl-struct-package-desc wedge-ws (20130930 647) "Wedge whitespace between columns in text" nil single "melpa" nil nil nil] [cl-struct-package-desc wedge-ws (0 1 2) "Wedge whitespace between columns in text" nil tar "marmalade" nil nil nil])
  (sparkline [cl-struct-package-desc sparkline (20130803 542) "Make sparkline images from a list of numbers" nil single "melpa" nil nil nil] [cl-struct-package-desc sparkline (0 3 0) "Make sparkline images from a list of numbers" nil single "marmalade" nil nil nil])
  (flymake-puppet [cl-struct-package-desc flymake-puppet (20130731 2203) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" ((flymake-easy (0 9))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-puppet (1 0 0) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" ((flymake-easy (0 9))) single "marmalade" nil nil nil])
  (palimpsest [cl-struct-package-desc palimpsest (20130731 821) "Various deletion strategies when editing" nil single "melpa" nil nil nil] [cl-struct-package-desc palimpsest (0 8) "Various deletion strategies when editing" nil single "marmalade" nil nil nil])
  (py-import-check [cl-struct-package-desc py-import-check (20130802 411) "Finds the unused python imports using importchecker" nil single "melpa" nil nil nil] [cl-struct-package-desc py-import-check (0 2) "Finds the unused python imports using importchecker" nil single "marmalade" nil nil nil])
  (cubicle-mode [cl-struct-package-desc cubicle-mode (0 1) "Cubicle major mode for emacs" nil single "marmalade" nil nil nil])
  (pickup [cl-struct-package-desc pickup (0 0 3) "pickup file. " nil single "marmalade" nil nil nil])
  (cobra-mode [cl-struct-package-desc cobra-mode (20140116 1316) "Major mode for .NET-based Cobra language" nil single "melpa" nil nil nil] [cl-struct-package-desc cobra-mode (1 0 1) "Major mode for .NET-based Cobra language" nil single "marmalade" nil nil nil])
  (dummy-package [cl-struct-package-desc dummy-package (0 0 3) "a fake package for the marmalade test suite" ((timeclock (2 6 1))) single "marmalade" nil nil nil])
  (immutant-server [cl-struct-package-desc immutant-server (20140224 1358) "Run your Immutant server in Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc immutant-server (1 0 1) "Run your Immutant server in Emacs" nil single "marmalade" nil nil nil])
  (initchart [cl-struct-package-desc initchart (0 1 1) "Emacs' init process performance visualization  -*- lexical-binding: t -*-" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (project-explorer [cl-struct-package-desc project-explorer (20140218 103) "A project explorer sidebar" ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc project-explorer (0 13) "A project explorer sidebar -*- lexical-binding: t -*-" ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) single "marmalade" nil nil nil])
  (ac-cider-compliment [cl-struct-package-desc ac-cider-compliment (20140129 1304) "auto-complete sources for Clojure using" ((cider (0 5 0)) (auto-complete (1 4))) single "melpa" nil nil nil] [cl-struct-package-desc ac-cider-compliment (0 1 0) "auto-complete sources for Clojure using" ((cider (0 5 0)) (auto-complete (1 4))) single "marmalade" nil nil nil])
  (wpuzzle [cl-struct-package-desc wpuzzle (1 1) "find as many word in a given time" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/wpuzzle.html") (:keywords quote nil)) nil])
  (wisi [cl-struct-package-desc wisi (1 0) "Utilities for implementing an indentation/navigation engine using a generalized LALR parser" ((cl-lib (0))) tar "gnu" nil ((:keywords quote nil) (:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) nil])
  (w3 [cl-struct-package-desc w3 (4 0 49) "Fully customizable, largely undocumented web browser for Emacs" nil tar "gnu" nil ((:keywords quote ("faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia")) (:url . "http://elpa.gnu.org/packages/w3.html")) nil])
  (temp-buffer-browse [cl-struct-package-desc temp-buffer-browse (1 2) "temp buffer browse mode" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html") (:keywords quote ("convenience"))) nil])
  (flylisp [cl-struct-package-desc flylisp (0 2) "Color unbalanced parentheses and parentheses inconsistent with indentation" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/flylisp.html") (:keywords quote nil)) nil])
  (dismal [cl-struct-package-desc dismal (1 5) "Dis Mode Ain't Lotus: Spreadsheet program Emacs" ((cl-lib (0))) tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/dismal.html")) nil])
  (ascii-art-to-unicode [cl-struct-package-desc ascii-art-to-unicode (1 4) "a small artist adjunct" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/ascii-art-to-unicode.html") (:keywords quote nil)) nil])
  (adjust-parens [cl-struct-package-desc adjust-parens (3 0) "Indent and dedent Lisp code, automatically adjust close parens" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/adjust-parens.html")) nil])
  (ada-mode [cl-struct-package-desc ada-mode (5 0 1) "major-mode for editing Ada sources" ((wisi (1 0))) tar "gnu" nil ((:keywords quote nil) (:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html")) nil])
 )
