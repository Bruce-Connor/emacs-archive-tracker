'(
  (4clojure [cl-struct-package-desc 4clojure (20131014 1507) "Open and evaluate 4clojure.com questions" ((json (1 2)) (request (0 2 0))) single "melpa" nil nil nil])
  (abc-mode [cl-struct-package-desc abc-mode (20140225 944) "Major mode for editing abc music files" nil single "melpa" nil nil nil])
  (ac-dabbrev [cl-struct-package-desc ac-dabbrev (20130906 518) "auto-complete.el source for dabbrev" nil single "melpa" nil nil nil])
  (ac-helm [cl-struct-package-desc ac-helm (20131224 647) "Helm interface for auto-complete" ((helm (20130328)) (auto-complete (1 4 0)) (popup (0 5 0))) single "melpa" nil nil nil])
  (ac-js2 [cl-struct-package-desc ac-js2 (20131112 403) "Auto-complete source for Js2-mode, with navigation" ((js2-mode (20090723)) (skewer-mode (1 4))) tar "melpa" nil nil nil])
  (ac-math [cl-struct-package-desc ac-math (20131003 1604) "Auto-complete sources for input of mathematical symbols and latex tags" ((auto-complete (1 4))) single "melpa" nil nil nil])
  (ace-jump-buffer [cl-struct-package-desc ace-jump-buffer (20131221 759) "fast buffer switching extension to `ace-jump-mode'" ((ace-jump-mode (1 0)) (dash (2 4 0))) single "melpa" nil nil nil])
  (ack-menu [cl-struct-package-desc ack-menu (20130312 131) "A menu-based front-end for ack" ((mag-menu (0 1 0))) single "melpa" nil nil nil])
  (actionscript-mode [cl-struct-package-desc actionscript-mode (20140202 1544) "A simple mode for editing Actionscript 3 files" nil single "melpa" nil nil nil])
  (airplay [cl-struct-package-desc airplay (20130212 426) "Airplay bindings to Emacs" ((request (20130110 2144)) (simple-httpd (1 4 1)) (deferred (0 3 1))) tar "melpa" nil nil nil])
  (alert [cl-struct-package-desc alert (20130510 20) "Growl-style notification system for Emacs" nil single "melpa" nil nil nil])
  (all-ext [cl-struct-package-desc all-ext (20130824 1206) "Extension of M-x all" ((all (1 0))) single "melpa" nil nil nil])
  (ample-theme [cl-struct-package-desc ample-theme (20140307 805) "Calm Dark Theme for Emacs" nil tar "melpa" nil nil nil])
  (angry-police-captain [cl-struct-package-desc angry-police-captain (20120829 552) "Show quote from http://theangrypolicecaptain.com in the minibuffer" nil single "melpa" nil nil nil])
  (annoying-arrows-mode [cl-struct-package-desc annoying-arrows-mode (20130515 1000) "Ring the bell if using arrows too much" nil single "melpa" nil nil nil])
  (ansi [cl-struct-package-desc ansi (20130827 753) "Turn string into ansi strings" ((s (1 6 1)) (dash (1 5 0))) single "melpa" nil nil nil])
  (anti-zenburn-theme [cl-struct-package-desc anti-zenburn-theme (20140227 1501) "Low-contrast Zenburn-inverted theme" nil single "melpa" nil nil nil])
  (anything-git-files [cl-struct-package-desc anything-git-files (20130609 243) "anything for git files" ((anything (1 3 9))) single "melpa" nil nil nil])
  (anything-git-grep [cl-struct-package-desc anything-git-grep (20130608 1940) "anything for git grep" ((anything (1 3 9))) tar "melpa" nil nil nil])
  (archive-region [cl-struct-package-desc archive-region (20140201 2345) "Move region to archive file instead of killing" nil single "melpa" nil nil nil])
  (ascope [cl-struct-package-desc ascope (20130824 1158) "Another cscope interface for emacs" nil single "melpa" nil nil nil])
  (async [cl-struct-package-desc async (20140308 2217) "Asynchronous processing in Emacs" nil tar "melpa" nil nil nil])
  (auctex-latexmk [cl-struct-package-desc auctex-latexmk (20140221 1917) "Add LatexMk support to AUCTeX" ((auctex (11 87))) single "melpa" nil nil nil])
  (audio-notes-mode [cl-struct-package-desc audio-notes-mode (20140204 1154) "Play audio notes synced from somewhere else." nil single "melpa" nil nil nil])
  (auto-async-byte-compile [cl-struct-package-desc auto-async-byte-compile (20140212 2212) "No description available." nil single "melpa" nil nil nil])
  (auto-auto-indent [cl-struct-package-desc auto-auto-indent (20131106 1103) "Indents code as you type" ((es-lib (0 1)) (cl-lib (1 0))) single "melpa" nil nil nil])
  (auto-capitalize [cl-struct-package-desc auto-capitalize (20131014 505) "Automatically capitalize (or upcase) words" nil single "melpa" nil nil nil])
  (auto-compile [cl-struct-package-desc auto-compile (20140309 1316) "automatically compile Emacs Lisp libraries" ((cl-lib (0 2)) (packed (0 3 4))) single "melpa" nil nil nil])
  (auto-complete-clang [cl-struct-package-desc auto-complete-clang (20120614 610) "Auto Completion source for clang for GNU Emacs" nil single "melpa" nil nil nil])
  (auto-complete-clang-async [cl-struct-package-desc auto-complete-clang-async (20130526 814) "Auto Completion source for clang for GNU Emacs" nil single "melpa" nil nil nil])
  (auto-dictionary [cl-struct-package-desc auto-dictionary (20130628 253) "automatic dictionary switcher for flyspell" nil single "melpa" nil nil nil])
  (auto-dim-other-buffers [cl-struct-package-desc auto-dim-other-buffers (20140206 408) "Makes non-current buffers less prominent" nil single "melpa" nil nil nil])
  (auto-install [cl-struct-package-desc auto-install (20130824 1206) "Auto install elisp file" nil single "melpa" nil nil nil])
  (auto-save-buffers-enhanced [cl-struct-package-desc auto-save-buffers-enhanced (20130607 1949) "Automatically save buffers in a decent way" nil single "melpa" nil nil nil])
  (auto-shell-command [cl-struct-package-desc auto-shell-command (20130404 923) "Run the shell command asynchronously that you specified when you save the file." ((deferred (20130312)) (popwin (20130329))) single "melpa" nil nil nil])
  (backup-each-save [cl-struct-package-desc backup-each-save (20130704 1432) "backup each savepoint of a file" nil single "melpa" nil nil nil])
  (backup-walker [cl-struct-package-desc backup-walker (20130720 816) "quickly traverse all backups of a file" nil single "melpa" nil nil nil])
  (base16-theme [cl-struct-package-desc base16-theme (20130413 1655) "No description available." nil tar "melpa" nil nil nil])
  (bash-completion [cl-struct-package-desc bash-completion (20130526 544) "BASH completion for the shell buffer" nil tar "melpa" nil nil nil])
  (bbdb [cl-struct-package-desc bbdb (20140228 2021) "The Insidious Big Brother Database for GNU Emacs" nil tar "melpa" nil nil nil])
  (bbdb-vcard [cl-struct-package-desc bbdb-vcard (20130605 1139) "vCard import/export for BBDB" ((bbdb (3 0))) tar "melpa" nil nil nil])
  (bbdb2erc [cl-struct-package-desc bbdb2erc (20130606 2329) "make bbdb show if pal is online with ERC, click i to chat" ((bbdb (3 0))) single "melpa" nil nil nil])
  (bdo [cl-struct-package-desc bdo (20140126 101) "Do things to a browser page from Emacs. BETA!" nil tar "melpa" nil nil nil])
  (bf-mode [cl-struct-package-desc bf-mode (20130403 742) "Browse file persistently on dired" nil single "melpa" nil nil nil])
  (bibretrieve [cl-struct-package-desc bibretrieve (20131013 1132) "Retrieving BibTeX entries from the web" ((auctex (11 87)) (emacs (24 3))) tar "melpa" nil nil nil])
  (bind-key [cl-struct-package-desc bind-key (20140302 1151) "A simple way to manage personal keybindings" nil single "melpa" nil nil nil])
  (birds-of-paradise-plus-theme [cl-struct-package-desc birds-of-paradise-plus-theme (20130419 1429) "A brown/orange light-on-dark theme for Emacs 24 (deftheme)." nil single "melpa" nil nil nil])
  (blank-mode [cl-struct-package-desc blank-mode (20130824 1159) "minor mode to visualize TAB, (HARD) SPACE, NEWLINE" nil single "melpa" nil nil nil])
  (bundler [cl-struct-package-desc bundler (20131213 357) "Interact with Bundler from Emacs" ((inf-ruby (2 1))) single "melpa" nil nil nil])
  (buster-mode [cl-struct-package-desc buster-mode (20121219 522) "Minor mode to speed up development when writing tests with Buster.js" nil single "melpa" nil nil nil])
  (buster-snippets [cl-struct-package-desc buster-snippets (20130714 540) "Yasnippets for the Buster javascript testing framework" nil tar "melpa" nil nil nil])
  (calfw [cl-struct-package-desc calfw (20140301 2051) "Calendar view framework on Emacs" nil tar "melpa" nil nil nil])
  (capture [cl-struct-package-desc capture (20130828 944) "screencasting with \"avconv\" or \"ffmpeg\"" nil tar "melpa" nil nil nil])
  (change-inner [cl-struct-package-desc change-inner (20130208 1130) "Change contents based on semantic units" ((expand-region (0 7))) single "melpa" nil nil nil])
  (clips-mode [cl-struct-package-desc clips-mode (20131012 1401) "Major mode for editing CLIPS code and REPL" nil tar "melpa" nil nil nil])
  (clojure-snippets [cl-struct-package-desc clojure-snippets (20130403 1146) "Yasnippets for clojure" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (cn-outline [cl-struct-package-desc cn-outline (20100321 914) "No description available." nil single "melpa" nil nil nil])
  (coffee-fof [cl-struct-package-desc coffee-fof (20131012 530) "A coffee-mode configuration for `ff-find-other-file'." ((coffee-mode (0 4 1))) single "melpa" nil nil nil])
  (color-moccur [cl-struct-package-desc color-moccur (20120811 527) "multi-buffer occur (grep) mode" nil single "melpa" nil nil nil])
  (color-theme-approximate [cl-struct-package-desc color-theme-approximate (20140227 2036) "Makes Emacs theme works on terminal transparently" nil single "melpa" nil nil nil])
  (column-marker [cl-struct-package-desc column-marker (20121128 843) "Highlight certain character columns" nil single "melpa" nil nil nil])
  (commander [cl-struct-package-desc commander (20140120 1052) "Emacs command line parser" ((s (1 6 0)) (dash (2 0 0)) (cl-lib (0 3)) (f (0 6 1))) single "melpa" nil nil nil])
  (cperl-mode [cl-struct-package-desc cperl-mode (20140309 122) "Perl code editing commands for Emacs" nil single "melpa" nil nil nil])
  (crab [cl-struct-package-desc crab (20130609 958) "WebSocket server to remotely control a browser" ((websocket (1 0)) (json (1 2))) single "melpa" nil nil nil])
  (crappy-jsp-mode [cl-struct-package-desc crappy-jsp-mode (20121117 956) "A pretty crappy major-mode for jsp." nil single "melpa" nil nil nil])
  (csv-nav [cl-struct-package-desc csv-nav (20130407 1820) "navigate and edit CSV files" nil single "melpa" nil nil nil])
  (ctags [cl-struct-package-desc ctags (20110911 304) "Exuberant Ctags utilities for Emacs" nil single "melpa" nil nil nil])
  (cus-edit+ [cl-struct-package-desc cus-edit+ (20140101 1842) "Enhancements to `cus-edit.el'." nil single "melpa" nil nil nil])
  (cyberpunk-theme [cl-struct-package-desc cyberpunk-theme (20131205 1256) "Cyberpunk Color Theme" nil single "melpa" nil nil nil])
  (darcsum [cl-struct-package-desc darcsum (20140110 1133) "a pcl-cvs like interface for managing darcs patches" nil tar "melpa" nil nil nil])
  (dash-at-point [cl-struct-package-desc dash-at-point (20140103 921) "Search the word at point with Dash" nil single "melpa" nil nil nil])
  (datomic-snippets [cl-struct-package-desc datomic-snippets (20130707 1315) "Yasnippets for Datomic" ((s (1 4 0)) (dash (1 2 0)) (yasnippet (0 6 1))) tar "melpa" nil nil nil])
  (delim-kill [cl-struct-package-desc delim-kill (20100516 2320) "Kill text between delimiters." nil single "melpa" nil nil nil])
  (dic-lookup-w3m [cl-struct-package-desc dic-lookup-w3m (20121101 1033) "look up dictionaries on the Internet" ((w3m (20120723 324)) (stem (20120826))) tar "melpa" nil nil nil])
  (direx [cl-struct-package-desc direx (20130930 1224) "Simple Directory Explorer" nil tar "melpa" nil nil nil])
  (disaster [cl-struct-package-desc disaster (20130509 1055) "Disassemble C/C++ code under cursor in Emacs" nil single "melpa" nil nil nil])
  (disk [cl-struct-package-desc disk (20081128 1506) "simplified find-file, revert-file, save-buffer interface" nil single "melpa" nil nil nil])
  (docbook-snippets [cl-struct-package-desc docbook-snippets (20130716 1849) "Yasnippets for DocBook" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (dollaro [cl-struct-package-desc dollaro (20130620 1325) "simple text templates" ((s (1 6 0))) single "melpa" nil nil nil])
  (dom [cl-struct-package-desc dom (20091224 1827) "DOM implementation" nil single "melpa" nil nil nil])
  (drill-instructor-AZIK-force [cl-struct-package-desc drill-instructor-AZIK-force (20120907 1817) "Support AZIK input" ((popup (0 5))) tar "melpa" nil nil nil])
  (dummy-h-mode [cl-struct-package-desc dummy-h-mode (20130824 1159) "switch major mode to c-/c++-/objc-mode on .h file" nil single "melpa" nil nil nil])
  (duplicate-thing [cl-struct-package-desc duplicate-thing (20120515 948) "Duplicate current line & selection" nil single "melpa" nil nil nil])
  (dylan-mode [cl-struct-package-desc dylan-mode (20140109 623) "Major mode for editing Dylan programs." nil tar "melpa" nil nil nil])
  (e2wm [cl-struct-package-desc e2wm (20130909 2314) "simple window manager for emacs" ((window-layout (1 2))) tar "melpa" nil nil nil])
  (e2wm-R [cl-struct-package-desc e2wm-R (20130505 2208) "some e2wm plugin and perspective for GNU R" ((e2wm (20130225 1602)) (inlineR (20120520 2332)) (ess (20130225 1754))) single "melpa" nil nil nil])
  (e2wm-bookmark [cl-struct-package-desc e2wm-bookmark (20120811 2350) "Bookmark plugin for e2wm.el" ((e2wm (1 2))) single "melpa" nil nil nil])
  (e2wm-svg-clock [cl-struct-package-desc e2wm-svg-clock (20130303 1326) "e2wm plugin for svg-clock" ((e2wm (20130225 1602)) (svg-clock (0 4))) single "melpa" nil nil nil])
  (easy-after-load [cl-struct-package-desc easy-after-load (20121224 1849) "eval-after-load for all files in a directory" nil single "melpa" nil nil nil])
  (ebib [cl-struct-package-desc ebib (20140303 1705) "a BibTeX database manager" nil tar "melpa" nil nil nil])
  (ecukes [cl-struct-package-desc ecukes (20140130 757) "Cucumber for Emacs." ((commander (0 6 1)) (espuds (0 2 2)) (ansi (0 3 0)) (dash (2 2 0)) (s (1 8 0)) (f (0 11 0))) tar "melpa" nil nil nil])
  (edit-color-stamp [cl-struct-package-desc edit-color-stamp (20130529 1033) "Edit a hex color stamp, using a QT or the internal color picker" ((es-lib (0 2)) (cl-lib (1 0))) tar "melpa" nil nil nil])
  (edit-server [cl-struct-package-desc edit-server (20131229 441) "server that responds to edit requests from Chrome" nil single "melpa" nil nil nil])
  (edit-server-htmlize [cl-struct-package-desc edit-server-htmlize (20130329 1548) "(de)HTMLization hooks for edit-server.el" ((edit-server (1 9))) single "melpa" nil nil nil])
  (egg [cl-struct-package-desc egg (20140307 125) "Emacs Got Git - Emacs interface to Git" nil tar "melpa" nil nil nil])
  (ein [cl-struct-package-desc ein (20130711 104) "Emacs IPython Notebook" ((websocket (0 9)) (request (0 2)) (auto-complete (1 4))) tar "melpa" nil nil nil])
  (el-mock [cl-struct-package-desc el-mock (20140219 506) "Tiny Mock and Stub framework in Emacs Lisp" nil single "melpa" nil nil nil])
  (eldoc-extension [cl-struct-package-desc eldoc-extension (20140306 1445) "Some extension for eldoc" nil single "melpa" nil nil nil])
  (electric-case [cl-struct-package-desc electric-case (20130620 154) "insert camelCase, snake_case words without \"Shift\"ing" nil single "melpa" nil nil nil])
  (elixir-mode [cl-struct-package-desc elixir-mode (20140310 217) "Major mode for editing Elixir files" nil tar "melpa" nil nil nil])
  (elmine [cl-struct-package-desc elmine (20130330 1300) "Redmine API access via elisp." nil single "melpa" nil nil nil])
  (elscreen [cl-struct-package-desc elscreen (20120413 807) "Emacs window session manager" nil single "melpa" nil nil nil])
  (emacs-eclim [cl-struct-package-desc emacs-eclim (20140226 2328) "An interface to the Eclipse IDE." ((json (1 2))) tar "melpa" nil nil nil])
  (emacs-setup [cl-struct-package-desc emacs-setup (20120727 726) "Package for maintaining your emacs configuration. Clean up your .emacs!" nil tar "melpa" nil nil nil])
  (emacsc [cl-struct-package-desc emacsc (20131027 225) "helper for emacsc(1)" nil tar "melpa" nil nil nil])
  (emagician-fix-spell-memory [cl-struct-package-desc emagician-fix-spell-memory (20130415 1244) "Simple hack into ispell to fix (muscle) memory problems" nil single "melpa" nil nil nil])
  (emamux-ruby-test [cl-struct-package-desc emamux-ruby-test (20130812 939) "Ruby test with emamux" ((emamux (0 1)) (projectile (0 9 1))) single "melpa" nil nil nil])
  (emms [cl-struct-package-desc emms (20140222 2027) "The Emacs Multimedia System" nil tar "melpa" nil nil nil])
  (emr [cl-struct-package-desc emr (20130619 316) "Emacs refactoring system." ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (redshank (1 0 0)) (paredit (24 0 0)) (projectile (0 9 1))) tar "melpa" nil nil nil])
  (enh-ruby-mode [cl-struct-package-desc enh-ruby-mode (20140123 1442) "Major mode for editing Ruby files" nil tar "melpa" nil nil nil])
  (enotify [cl-struct-package-desc enotify (20130407 648) "A networked notification system for emacs" nil tar "melpa" nil nil nil])
  (epic [cl-struct-package-desc epic (20130319 2340) "Evernote Picker" ((htmlize (1 47))) tar "melpa" nil nil nil])
  (eproject [cl-struct-package-desc eproject (20140118 1608) "assign files to projects, programatically" nil tar "melpa" nil nil nil])
  (erc-image [cl-struct-package-desc erc-image (20140225 1026) "Show received image urls in the ERC buffer" ((erc (5 3))) single "melpa" nil nil nil])
  (erc-terminal-notifier [cl-struct-package-desc erc-terminal-notifier (20140115 224) "OSX notifications via the terminal-notifier gem for Emacs ERC." nil single "melpa" nil nil nil])
  (erc-track-score [cl-struct-package-desc erc-track-score (20130328 515) "Add score support to tracked channel buffers" nil single "melpa" nil nil nil])
  (erc-tweet [cl-struct-package-desc erc-tweet (20140225 1552) "shows text of a tweet when an url is posted in erc buffers" ((erc (5 3))) single "melpa" nil nil nil])
  (ergoemacs-mode [cl-struct-package-desc ergoemacs-mode (20140308 2258) "Emacs mode based on common modern software interface and ergonomics." nil tar "melpa" nil nil nil])
  (ert-expectations [cl-struct-package-desc ert-expectations (20130824 1200) "The simplest unit test framework in the world" nil single "melpa" nil nil nil])
  (ert-runner [cl-struct-package-desc ert-runner (20140121 1045) "Opinionated Ert testing workflow" ((s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) tar "melpa" nil nil nil])
  (es-lib [cl-struct-package-desc es-lib (20131029 107) "A collection of emacs utilities" ((cl-lib (0 3))) tar "melpa" nil nil nil])
  (escreen [cl-struct-package-desc escreen (20091203 1013) "emacs window session manager" nil single "melpa" nil nil nil])
  (esh-buf-stack [cl-struct-package-desc esh-buf-stack (20140107 218) "Add a buffer stack feature to Eshell" nil single "melpa" nil nil nil])
  (esh-help [cl-struct-package-desc esh-help (20140107 222) "Add some help functions and support for Eshell" ((dash (1 4 0))) single "melpa" nil nil nil])
  (espresso-theme [cl-struct-package-desc espresso-theme (20130228 2348) "Espresso Tutti Colori port for Emacs" nil single "melpa" nil nil nil])
  (espuds [cl-struct-package-desc espuds (20140215 741) "Ecukes step definitions" ((s (1 7 0)) (dash (2 2 0)) (noflet (0 0 10)) (f (0 12 1))) single "melpa" nil nil nil])
  (ess-R-data-view [cl-struct-package-desc ess-R-data-view (20130509 458) "Data viewer for GNU R" ((ctable (20130313 1743)) (popup (20130324 1305)) (ess (20130225 1754))) single "melpa" nil nil nil])
  (ess-R-object-popup [cl-struct-package-desc ess-R-object-popup (20130302 336) "popup description of R object" ((popup (20130117 1954)) (ess (20130225 1754))) single "melpa" nil nil nil])
  (ethan-wspace [cl-struct-package-desc ethan-wspace (20130518 708) "whitespace customizations for emacs" nil single "melpa" nil nil nil])
  (factlog [cl-struct-package-desc factlog (20130209 1740) "File activity logger" ((deferred (0 3 1))) single "melpa" nil nil nil])
  (fakespace [cl-struct-package-desc fakespace (20120817 1706) "fake namespaces with defpackage" nil single "melpa" nil nil nil])
  (fic-mode [cl-struct-package-desc fic-mode (20130824 1158) "Show FIXME/TODO/BUG/KLUDGE in special face only in comments and strings" nil single "melpa" nil nil nil])
  (fiplr [cl-struct-package-desc fiplr (20140221 2) "Fuzzy Search for Files in Projects" ((grizzl (0 1 0)) (cl-lib (0 1))) tar "melpa" nil nil nil])
  (flex-isearch [cl-struct-package-desc flex-isearch (20130508 1503) "Flex matching (like ido) in isearch." nil single "melpa" nil nil nil])
  (flymake-gjshint [cl-struct-package-desc flymake-gjshint (20130327 532) "A flymake handler for javascript using both jshint and gjslint" nil single "melpa" nil nil nil])
  (flymake-yaml [cl-struct-package-desc flymake-yaml (20130423 848) "A flymake handler for YAML" ((flymake-easy (0 1))) single "melpa" nil nil nil])
  (foreign-regexp [cl-struct-package-desc foreign-regexp (20130618 321) "search and replace by foreign regexp." nil tar "melpa" nil nil nil])
  (frame-cmds [cl-struct-package-desc frame-cmds (20140224 2140) "Frame and window commands (interactive functions)." nil single "melpa" nil nil nil])
  (frame-fns [cl-struct-package-desc frame-fns (20131226 1849) "Non-interactive frame and window functions." nil single "melpa" nil nil nil])
  (framemove [cl-struct-package-desc framemove (20130328 1133) "directional frame selection routines" nil single "melpa" nil nil nil])
  (fsharp-mode [cl-struct-package-desc fsharp-mode (20140212 842) "F# mode for Emacs" ((auto-complete (1 4)) (popup (0 5)) (pos-tip (0 4 5)) (s (1 3 1)) (dash (1 1 0))) tar "melpa" nil nil nil])
  (fuel [cl-struct-package-desc fuel (20131212 824) "Major mode for the Factor programming language." ((cl-lib (0 2)) (emacs (24 2))) tar "melpa" nil nil nil])
  (fwb-cmds [cl-struct-package-desc fwb-cmds (20131209 1600) "misc frame, window and buffer commands" nil single "melpa" nil nil nil])
  (fyure [cl-struct-package-desc fyure (20130216 514) "An interface to fix Japanese hyoki-yure" nil tar "melpa" nil nil nil])
  (gap-mode [cl-struct-package-desc gap-mode (20131212 2130) "Major mode for editing files in the GAP programing language." nil tar "melpa" nil nil nil])
  (gedit-mode [cl-struct-package-desc gedit-mode (20140109 928) "Emulate the look & feel of GEdit in Emacs" ((tabbar (0)) (shell-pop (0)) (move-text (0)) (whole-line-or-region (0))) single "melpa" nil nil nil])
  (ggo-mode [cl-struct-package-desc ggo-mode (20130524 443) "Gengetopt major mode" nil single "melpa" nil nil nil])
  (git-blame [cl-struct-package-desc git-blame (20110509 926) "Minor mode for incremental blame for Git" nil single "melpa" nil nil nil])
  (git-dwim [cl-struct-package-desc git-dwim (20130130 2150) "Context-aware git commands such as branch handling" nil single "melpa" nil nil nil])
  (git-messenger [cl-struct-package-desc git-messenger (20140116 1943) "Pop up last commit information of current line" ((popup (0 5 0))) single "melpa" nil nil nil])
  (gitconfig-mode [cl-struct-package-desc gitconfig-mode (20131221 230) "Major mode for editing .gitconfig files" nil single "melpa" nil nil nil])
  (glsl-mode [cl-struct-package-desc glsl-mode (20130815 1435) "major mode for Open GLSL shader files" nil single "melpa" nil nil nil])
  (gnuplot-mode [cl-struct-package-desc gnuplot-mode (20131203 2159) "Major mode for editing gnuplot scripts" nil single "melpa" nil nil nil])
  (gnus-alias [cl-struct-package-desc gnus-alias (20130824 1206) "an alternative to gnus-posting-styles" nil single "melpa" nil nil nil])
  (go-autocomplete [cl-struct-package-desc go-autocomplete (20140304 1505) "auto-complete-mode backend for go-mode" ((auto-complete (1 4 0))) single "melpa" nil nil nil])
  (go-eldoc [cl-struct-package-desc go-eldoc (20140307 1711) "eldoc for go-mode" ((go-mode (0)) (cl-lib (0 5))) single "melpa" nil nil nil])
  (go-errcheck [cl-struct-package-desc go-errcheck (20140107 1046) "errcheck integration for go-mode" nil single "melpa" nil nil nil])
  (go-snippets [cl-struct-package-desc go-snippets (20130821 844) "Yasnippets for go" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (golden-ratio [cl-struct-package-desc golden-ratio (20130921 144) "Automatic resizing of Emacs windows to the golden ratio" nil single "melpa" nil nil nil])
  (google-c-style [cl-struct-package-desc google-c-style (20130412 1415) "Google's C/C++ style for c-mode" nil single "melpa" nil nil nil])
  (google-contacts [cl-struct-package-desc google-contacts (20140130 232) "Support for Google Contacts in Emacs" ((oauth2 (0 10))) tar "melpa" nil nil nil])
  (google-maps [cl-struct-package-desc google-maps (20130412 230) "Access Google Maps from Emacs" nil tar "melpa" nil nil nil])
  (google-this [cl-struct-package-desc google-this (20131031 315) "A set of functions and bindings to google under point." nil single "melpa" nil nil nil])
  (google-weather [cl-struct-package-desc google-weather (20110930 155) "Fetch Google Weather forecasts." nil tar "melpa" nil nil nil])
  (grandshell-theme [cl-struct-package-desc grandshell-theme (20140308 911) "Dark color theme for Emacs > 24 with intensive colors." nil tar "melpa" nil nil nil])
  (graphene [cl-struct-package-desc graphene (20131203 1152) "Friendly Emacs defaults." ((auto-complete (20131121)) (flycheck (20131129)) (smartparens (20131123)) (web-mode (20131125)) (smex (20130707)) (sr-speedbar (20130309)) (project-persist (20131030)) (exec-path-from-shell (20131002)) (scss-mode (20121203)) (markdown-mode (20131005)) (feature-mode (20130714))) tar "melpa" nil nil nil])
  (guide-key [cl-struct-package-desc guide-key (20140219 531) "Guide the following key bindings automatically and dynamically" ((popwin (0 3 0))) single "melpa" nil nil nil])
  (header-button [cl-struct-package-desc header-button (20130110 851) "clickable buttons in header lines" nil single "melpa" nil nil nil])
  (helm [cl-struct-package-desc helm (20140310 124) "Helm is an Emacs incremental and narrowing framework" nil tar "melpa" nil nil nil])
  (helm-R [cl-struct-package-desc helm-R (20120819 1714) "helm-sources and some utilities for GNU R." ((helm (20120517)) (ess (20120509))) single "melpa" nil nil nil])
  (helm-ack [cl-struct-package-desc helm-ack (20140307 1555) "Ack command with helm interface" ((helm (1 0)) (cl-lib (0 5))) single "melpa" nil nil nil])
  (helm-anything [cl-struct-package-desc helm-anything (20131217 1832) "Bridge between anything and helm" ((helm (20130406)) (anything (20120101))) single "melpa" nil nil nil])
  (helm-c-moccur [cl-struct-package-desc helm-c-moccur (20140115 1943) "helm source for color-moccur.el" ((helm (20120811)) (color-moccur (2 71))) single "melpa" nil nil nil])
  (helm-c-yasnippet [cl-struct-package-desc helm-c-yasnippet (20140131 226) "helm source for yasnippet.el" ((helm (1 5 8)) (yasnippet (0 8 0)) (cl-lib (0 3))) single "melpa" nil nil nil])
  (helm-cmd-t [cl-struct-package-desc helm-cmd-t (20131030 1241) "cmd-t style completion" nil tar "melpa" nil nil nil])
  (helm-descbinds [cl-struct-package-desc helm-descbinds (20140122 2158) "Yet Another `describe-bindings' with `helm'." ((helm (1 5))) single "melpa" nil nil nil])
  (helm-dired-recent-dirs [cl-struct-package-desc helm-dired-recent-dirs (20131228 614) "Show recent dirs with helm.el support." ((helm (1 0))) single "melpa" nil nil nil])
  (helm-flymake [cl-struct-package-desc helm-flymake (20130716 2244) "helm interface for flymake" ((helm (1 0))) single "melpa" nil nil nil])
  (helm-gist [cl-struct-package-desc helm-gist (20120819 1735) "helm-sources and some utilities for gist." ((helm (20120811)) (gist (1 0 1))) single "melpa" nil nil nil])
  (helm-git [cl-struct-package-desc helm-git (20120630 1403) "Helm extension for Git." nil single "melpa" nil nil nil])
  (helm-git-grep [cl-struct-package-desc helm-git-grep (20140222 1822) "helm for git grep, an incremental git-grep(1)" ((helm (1 5 9))) single "melpa" nil nil nil])
  (helm-go-package [cl-struct-package-desc helm-go-package (20140211 1457) "helm sources for Go programming language's package" ((helm (1 0)) (go-mode (9)) (deferred (0 3 2))) single "melpa" nil nil nil])
  (helm-ls-git [cl-struct-package-desc helm-ls-git (20140104 657) "list git files." nil single "melpa" nil nil nil])
  (helm-migemo [cl-struct-package-desc helm-migemo (20130820 440) "Migemo plug-in for helm" ((helm (1 5 3)) (migemo (1 9))) single "melpa" nil nil nil])
  (helm-open-github [cl-struct-package-desc helm-open-github (20140307 1623) "Utilities of Opening Github Page" ((helm (1 0)) (gh (1 0)) (cl-lib (0 5))) single "melpa" nil nil nil])
  (helm-orgcard [cl-struct-package-desc helm-orgcard (20130608 430) "browse the orgcard by helm" ((helm (1 5 2))) single "melpa" nil nil nil])
  (helm-project-persist [cl-struct-package-desc helm-project-persist (20130601 1328) "Helm integration for project-persist package" ((helm (1 5 2)) (project-persist (0 1 4))) single "melpa" nil nil nil])
  (helm-rails [cl-struct-package-desc helm-rails (20130424 819) "Helm extension for Rails projects." ((helm (1 5 1)) (inflections (1 1))) single "melpa" nil nil nil])
  (helm-rubygems-local [cl-struct-package-desc helm-rubygems-local (20130711 1811) "Installed local rubygems find-file for helm" ((helm (1 5 3))) single "melpa" nil nil nil])
  (helm-sheet [cl-struct-package-desc helm-sheet (20130630 539) "helm sources for sheet" ((helm (1 0))) single "melpa" nil nil nil])
  (helm-spaces [cl-struct-package-desc helm-spaces (20130605 900) "helm sources for spaces" ((helm (1 0)) (spaces (0 1 0))) single "melpa" nil nil nil])
  (helm-themes [cl-struct-package-desc helm-themes (20140307 1632) "Color theme selection with helm interface" ((helm (1 0))) single "melpa" nil nil nil])
  (hemisu-theme [cl-struct-package-desc hemisu-theme (20130508 1144) "Hemisu for Emacs." nil tar "melpa" nil nil nil])
  (hi2 [cl-struct-package-desc hi2 (20130925 558) "indentation module for Haskell Mode" nil single "melpa" nil nil nil])
  (highlight-cl [cl-struct-package-desc highlight-cl (20091012 1730) "Highlighting `cl' functions." nil single "melpa" nil nil nil])
  (hippie-exp-ext [cl-struct-package-desc hippie-exp-ext (20130824 1207) "Extension of hippie-expand" nil single "melpa" nil nil nil])
  (hl-todo [cl-struct-package-desc hl-todo (20140309 1759) "highlight TODO keywords" nil single "melpa" nil nil nil])
  (http-post-simple [cl-struct-package-desc http-post-simple (20131011 358) "HTTP POST requests using the url library" nil single "melpa" nil nil nil])
  (hy-mode [cl-struct-package-desc hy-mode (20140201 2055) "Major mode for Hy code" nil single "melpa" nil nil nil])
  (icicles [cl-struct-package-desc icicles (20140310 8) "Minibuffer input completion and cycling." nil tar "melpa" nil nil nil])
  (identica-mode [cl-struct-package-desc identica-mode (20130204 1453) "Major mode API client for status.net open microblogging" nil tar "melpa" nil nil nil])
  (ido-complete-space-or-hyphen [cl-struct-package-desc ido-complete-space-or-hyphen (20130228 208) "Complete SPACE or HYPHEN when type SPACE in ido" nil single "melpa" nil nil nil])
  (ido-hacks [cl-struct-package-desc ido-hacks (20130411 1859) "Put more IDO in your IDO" nil single "melpa" nil nil nil])
  (ido-sort-mtime [cl-struct-package-desc ido-sort-mtime (20131117 530) "Sort Ido's file list by modification time" nil single "melpa" nil nil nil])
  (iflipb [cl-struct-package-desc iflipb (20130331 1108) "interactively flip between recently visited buffers" nil single "melpa" nil nil nil])
  (image+ [cl-struct-package-desc image+ (20130221 820) "Image manupulation extensions for Emacs" nil single "melpa" nil nil nil])
  (imenu-anywhere [cl-struct-package-desc imenu-anywhere (20131210 1130) "ido/helm imenu tag selection across all buffers with the same mode" nil single "melpa" nil nil nil])
  (impatient-mode [cl-struct-package-desc impatient-mode (20140203 753) "Serve buffers live over HTTP" ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) tar "melpa" nil nil nil])
  (import-popwin [cl-struct-package-desc import-popwin (20140213 2355) "popwin buffer near by import statements with popwin" ((popwin (0 6)) (cl-lib (0 3))) single "melpa" nil nil nil])
  (inf-mongo [cl-struct-package-desc inf-mongo (20131216 228) "Run a MongoDB shell process in a buffer" nil single "melpa" nil nil nil])
  (inf-php [cl-struct-package-desc inf-php (20130414 21) "Run a php interactive shell in a buffer" ((php-mode (1 5 0))) single "melpa" nil nil nil])
  (info+ [cl-struct-package-desc info+ (20140304 1848) "Extensions to `info.el'." nil single "melpa" nil nil nil])
  (init-loader [cl-struct-package-desc init-loader (20140216 2240) "Loader for configuration files" nil single "melpa" nil nil nil])
  (initsplit [cl-struct-package-desc initsplit (20140203 441) "code to split customizations into different files" nil single "melpa" nil nil nil])
  (inkpot-theme [cl-struct-package-desc inkpot-theme (20120505 708) "port of vim's inkpot theme" nil single "melpa" nil nil nil])
  (inlineR [cl-struct-package-desc inlineR (20120520 732) "insert Tag for inline image of R graphics" nil single "melpa" nil nil nil])
  (instapaper [cl-struct-package-desc instapaper (20130104 621) "add URLs to instapaper from emacs" nil single "melpa" nil nil nil])
  (interaction-log [cl-struct-package-desc interaction-log (20140118 1146) "exhaustive log of interactions with Emacs" nil single "melpa" nil nil nil])
  (interval-tree [cl-struct-package-desc interval-tree (20130325 707) "Interval tree data structure for 1D range queries" ((dash (1 1 0))) single "melpa" nil nil nil])
  (iplayer [cl-struct-package-desc iplayer (20131230 211) "Browse and download BBC TV/radio shows" nil single "melpa" nil nil nil])
  (ir-black-theme [cl-struct-package-desc ir-black-theme (20130302 2355) "Port of ir-black theme" nil single "melpa" nil nil nil])
  (isearch-symbol-at-point [cl-struct-package-desc isearch-symbol-at-point (20130728 1521) "Use isearch to search for the symbol at point" nil single "melpa" nil nil nil])
  (isend-mode [cl-struct-package-desc isend-mode (20130419 258) "Interactively send parts of an Emacs buffer to an interpreter" nil single "melpa" nil nil nil])
  (itail [cl-struct-package-desc itail (20130102 1159) "An interactive tail mode" nil single "melpa" nil nil nil])
  (japanlaw [cl-struct-package-desc japanlaw (20131109 224) "Japan law from law.e-gov.go.jp" ((revive (20121022 1311))) single "melpa" nil nil nil])
  (jaunte [cl-struct-package-desc jaunte (20130413 219) "Emacs Hit a Hint" nil single "melpa" nil nil nil])
  (javadoc-lookup [cl-struct-package-desc javadoc-lookup (20130618 1736) "Javadoc Emacs integration with Maven" nil tar "melpa" nil nil nil])
  (jinja2-mode [cl-struct-package-desc jinja2-mode (20120827 203) "A major mode for jinja2" nil single "melpa" nil nil nil])
  (jknav [cl-struct-package-desc jknav (20121006 1325) "Automatically enable j/k keys for line-based navigation" nil single "melpa" nil nil nil])
  (js2-refactor [cl-struct-package-desc js2-refactor (20131221 501) "A JavaScript refactoring library for emacs." ((js2-mode (20101228)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (20130218))) tar "melpa" nil nil nil])
  (js3-mode [cl-struct-package-desc js3-mode (20130904 1444) "An improved JavaScript editing mode" nil tar "melpa" nil nil nil])
  (jss [cl-struct-package-desc jss (20130508 723) "An emacs interface to webkit and mozilla debuggers" ((emacs (24 1)) (websocket (0)) (js2-mode (0))) tar "melpa" nil nil nil])
  (jump-to-line [cl-struct-package-desc jump-to-line (20130122 853) "Jump to line number at point." nil single "melpa" nil nil nil])
  (keychain-environment [cl-struct-package-desc keychain-environment (20121026 1246) "load keychain environment variables" nil single "melpa" nil nil nil])
  (keydef [cl-struct-package-desc keydef (20090428 1231) "a simpler way to define keys, with kbd syntax" nil single "melpa" nil nil nil])
  (keymap-utils [cl-struct-package-desc keymap-utils (20130427 1026) "keymap utilities" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (kibit-mode [cl-struct-package-desc kibit-mode (20140110 612) "No description available." nil tar "melpa" nil nil nil])
  (kill-ring-search [cl-struct-package-desc kill-ring-search (20110605 736) "incremental search for the kill ring" nil single "melpa" nil nil nil])
  (killer [cl-struct-package-desc killer (20120808 422) "kill and delete text" nil single "melpa" nil nil nil])
  (kite [cl-struct-package-desc kite (20130201 1138) "WebKit inspector front-end" ((json (1 2)) (websocket (0 93 1))) tar "melpa" nil nil nil])
  (kivy-mode [cl-struct-package-desc kivy-mode (20130712 546) "Emacs major mode for editing Kivy files" nil single "melpa" nil nil nil])
  (lang-refactor-perl [cl-struct-package-desc lang-refactor-perl (20131122 1327) "Simple refactorings, primarily for Perl" nil single "melpa" nil nil nil])
  (langdoc [cl-struct-package-desc langdoc (20140120 1845) "Help to define help document mode for various languages" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (latex-pretty-symbols [cl-struct-package-desc latex-pretty-symbols (20111011 546) "Display many latex symbols as their unicode counterparts" nil single "melpa" nil nil nil])
  (launch [cl-struct-package-desc launch (20130619 1504) "launch files with OS-standard associated applications." nil single "melpa" nil nil nil])
  (lein [cl-struct-package-desc lein (20130406 1312) "Eshell interface to Leiningen" ((nrepl (0 1 7))) single "melpa" nil nil nil])
  (lemon-mode [cl-struct-package-desc lemon-mode (20130216 504) "A major mode for editing lemon grammar files" nil single "melpa" nil nil nil])
  (leuven-theme [cl-struct-package-desc leuven-theme (20140226 1136) "Awesome Emacs color theme on white background" nil single "melpa" nil nil nil])
  (linphone [cl-struct-package-desc linphone (20130524 409) "Emacs interface to Linphone" nil tar "melpa" nil nil nil])
  (linum-relative [cl-struct-package-desc linum-relative (20131210 2053) "display relative line number in emacs." nil single "melpa" nil nil nil])
  (lispxmp [cl-struct-package-desc lispxmp (20130824 1207) "Automagic emacs lisp code annotation" nil single "melpa" nil nil nil])
  (litable [cl-struct-package-desc litable (20140306 236) "dynamic evaluation replacement with emacs" ((dash (2 6 0))) single "melpa" nil nil nil])
  (lively [cl-struct-package-desc lively (20120728 1413) "Interactively updating text" nil single "melpa" nil nil nil])
  (load-relative [cl-struct-package-desc load-relative (20130410 249) "relative file load (within a multi-file Emacs package)" nil single "melpa" nil nil nil])
  (loc-changes [cl-struct-package-desc loc-changes (20130723 1930) "Helps users and programs keep track of positions even after buffer changes." nil single "melpa" nil nil nil])
  (log4e [cl-struct-package-desc log4e (20130514 912) "provide logging framework for elisp" nil single "melpa" nil nil nil])
  (log4j-mode [cl-struct-package-desc log4j-mode (20101016 822) "major mode for viewing log files" nil single "melpa" nil nil nil])
  (logalimacs [cl-struct-package-desc logalimacs (20131021 1129) "Front-end to logaling-command for Ruby gems" ((popwin (0 6 2)) (popup (0 5 0)) (stem (20130120))) single "melpa" nil nil nil])
  (love-minor-mode [cl-struct-package-desc love-minor-mode (20130429 1459) "Minor mode for working on L\303\226VE projects" ((lua-mode (20130419))) single "melpa" nil nil nil])
  (lusty-explorer [cl-struct-package-desc lusty-explorer (20130407 1056) "Dynamic filesystem explorer and buffer switcher" nil single "melpa" nil nil nil])
  (mag-menu [cl-struct-package-desc mag-menu (20130224 56) "Intuitive keyboard-centric menu system" ((splitter (0 1 0))) single "melpa" nil nil nil])
  (magit-commit-training-wheels [cl-struct-package-desc magit-commit-training-wheels (20130730 1121) "Advice for magit-log-edit-commit" nil single "melpa" nil nil nil])
  (magit-filenotify [cl-struct-package-desc magit-filenotify (20131018 255) "Refresh status buffer when git tree changes" ((magit (1 3 0))) single "melpa" nil nil nil])
  (magit-push-remote [cl-struct-package-desc magit-push-remote (20140108 1300) "push remote support for Magit" ((magit (1 3 0))) single "melpa" nil nil nil])
  (mallard-mode [cl-struct-package-desc mallard-mode (20131203 2025) "Major mode for editing Mallard files" nil tar "melpa" nil nil nil])
  (mallard-snippets [cl-struct-package-desc mallard-snippets (20131023 1151) "Yasnippets for Mallard" ((yasnippet (0 8 0)) (mallard-mode (0 1 1))) tar "melpa" nil nil nil])
  (map-progress [cl-struct-package-desc map-progress (20120927 939) "mapping macros that report progress" nil tar "melpa" nil nil nil])
  (map-regexp [cl-struct-package-desc map-regexp (20130522 1403) "map over matches of a regular expression" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (markdown-mode+ [cl-struct-package-desc markdown-mode+ (20120829 510) "extra functions for markdown-mode" ((markdown-mode (20111229))) tar "melpa" nil nil nil])
  (markup [cl-struct-package-desc markup (20130207 1309) "Simple markup generation helpers." nil single "melpa" nil nil nil])
  (maude-mode [cl-struct-package-desc maude-mode (20140212 302) "Emacs mode for the programming language Maude" nil single "melpa" nil nil nil])
  (melpa-upstream-visit [cl-struct-package-desc melpa-upstream-visit (20130720 333) "A set of kludges to visit a melpa-hosted package's homepage" ((s (1 6 0))) single "melpa" nil nil nil])
  (mentor [cl-struct-package-desc mentor (20130519 1540) "Frontend for the rTorrent bittorrent client" ((xml-rpc (1 6 9))) tar "melpa" nil nil nil])
  (metaweblog [cl-struct-package-desc metaweblog (20130707 431) "An emacs library to access metaweblog based weblogs" ((xml-rpc (1 6 8))) tar "melpa" nil nil nil])
  (mew [cl-struct-package-desc mew (20140224 608) "Messaging in the Emacs World" nil tar "melpa" nil nil nil])
  (migemo [cl-struct-package-desc migemo (20140305 156) "Japanese incremental search through dynamic pattern expansion" nil single "melpa" nil nil nil])
  (minor-mode-hack [cl-struct-package-desc minor-mode-hack (20130212 1228) "Change priority of minor-mode keymaps" nil single "melpa" nil nil nil])
  (misc-fns [cl-struct-package-desc misc-fns (20131227 139) "Miscellaneous non-interactive functions." nil single "melpa" nil nil nil])
  (mmm-mako [cl-struct-package-desc mmm-mako (20121019 2351) "MMM submode class for Mako Templates" ((mmm-mode (0 4 8))) single "melpa" nil nil nil])
  (mmm-mode [cl-struct-package-desc mmm-mode (20140211 2104) "Allow Multiple Major Modes in a buffer" nil tar "melpa" nil nil nil])
  (mo-vi-ment-mode [cl-struct-package-desc mo-vi-ment-mode (20131028 2333) "Provide vi-like cursor movement that's easy on the fingers" nil single "melpa" nil nil nil])
  (mode-line-debug [cl-struct-package-desc mode-line-debug (20121207 744) "show status of `debug-on-error' in the mode-line" nil single "melpa" nil nil nil])
  (moe-theme [cl-struct-package-desc moe-theme (20140228 1410) "A colorful eye-candy theme. Moe, moe, kyun!" nil tar "melpa" nil nil nil])
  (molokai-theme [cl-struct-package-desc molokai-theme (20130828 0) "molokai theme with Emacs theme engine" nil single "melpa" nil nil nil])
  (monky [cl-struct-package-desc monky (20130513 513) "Control Hg from Emacs." nil tar "melpa" nil nil nil])
  (motion-mode [cl-struct-package-desc motion-mode (20131104 908) "major mode for RubyMotion enviroment" ((flymake-easy (0 7)) (flymake-cursor (1 0 2))) tar "melpa" nil nil nil])
  (mouse-slider-mode [cl-struct-package-desc mouse-slider-mode (20130609 826) "scale numbers dragged under the mouse" nil single "melpa" nil nil nil])
  (multifiles [cl-struct-package-desc multifiles (20130615 1433) "View and edit parts of multiple files in one buffer" nil single "melpa" nil nil nil])
  (muttrc-mode [cl-struct-package-desc muttrc-mode (20090804 2252) "Major mode to edit muttrc under Emacs" nil single "melpa" nil nil nil])
  (mysql2sqlite [cl-struct-package-desc mysql2sqlite (20120514 731) "Convert mysql databases into sqlite databases." nil single "melpa" nil nil nil])
  (namespaces [cl-struct-package-desc namespaces (20130326 1550) "An implementation of namespaces for Elisp, with an emphasis on immutabilty." nil single "melpa" nil nil nil])
  (naquadah-theme [cl-struct-package-desc naquadah-theme (20131210 1123) "A theme based on Tango color set" nil single "melpa" nil nil nil])
  (nav [cl-struct-package-desc nav (20120507 7) "Emacs mode for filesystem navigation" nil tar "melpa" nil nil nil])
  (ncl-mode [cl-struct-package-desc ncl-mode (20130527 1545) "Major Mode for editing NCL scripts and other goodies" nil tar "melpa" nil nil nil])
  (nclip [cl-struct-package-desc nclip (20130617 1315) "Network (HTTP) Clipboard" nil tar "melpa" nil nil nil])
  (noctilux-theme [cl-struct-package-desc noctilux-theme (20131019 31) "Dark theme inspired by LightTable" nil tar "melpa" nil nil nil])
  (notmuch [cl-struct-package-desc notmuch (20140304 1600) "No description available." nil tar "melpa" nil nil nil])
  (nrepl-eval-sexp-fu [cl-struct-package-desc nrepl-eval-sexp-fu (20131015 513) "No description available." nil single "melpa" nil nil nil])
  (nyan-prompt [cl-struct-package-desc nyan-prompt (20130721 311) "Nyan Cat on the eshell prompt." nil tar "melpa" nil nil nil])
  (o-blog [cl-struct-package-desc o-blog (20130904 1426) "Org-blog exporter" nil tar "melpa" nil nil nil])
  (ob-browser [cl-struct-package-desc ob-browser (20130724 902) "Translation of text blocks in org-mode." ((org (8))) tar "melpa" nil nil nil])
  (ob-mongo [cl-struct-package-desc ob-mongo (20130718 732) "Execute mongodb queries within org-mode blocks." ((org (8))) single "melpa" nil nil nil])
  (ob-translate [cl-struct-package-desc ob-translate (20130718 729) "Translation of text blocks in org-mode." ((google-translate (0 4)) (org (8))) single "melpa" nil nil nil])
  (object-registry [cl-struct-package-desc object-registry (20130521 1213) "OBSOLETE track data items by various instance slots" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (occidental-theme [cl-struct-package-desc occidental-theme (20130312 1258) "Custom theme for faces based on Adwaita" nil single "melpa" nil nil nil])
  (open-junk-file [cl-struct-package-desc open-junk-file (20130131 720) "Open a junk (memo) file to try-and-error" nil single "melpa" nil nil nil])
  (org-agenda-property [cl-struct-package-desc org-agenda-property (20131007 1013) "Display org properties in the agenda buffer." ((emacs (24 2))) single "melpa" nil nil nil])
  (org-bullets [cl-struct-package-desc org-bullets (20131106 1108) "Show bullets in org-mode as UTF-8 characters" nil single "melpa" nil nil nil])
  (org-context [cl-struct-package-desc org-context (20130903 1458) "Contextual capture and agenda commands for Org-mode" ((org (7))) single "melpa" nil nil nil])
  (org-elisp-help [cl-struct-package-desc org-elisp-help (20130423 1545) "org links to emacs-lisp documentation" ((cl-lib (0 2)) (org (8 0))) single "melpa" nil nil nil])
  (org-fstree [cl-struct-package-desc org-fstree (20090723 819) "include a filesystem subtree into an org file" nil single "melpa" nil nil nil])
  (org-jekyll [cl-struct-package-desc org-jekyll (20130508 239) "Export jekyll-ready posts form org-mode entries" ((org (8 0))) single "melpa" nil nil nil])
  (org-jira [cl-struct-package-desc org-jira (20130427 616) "Syncing between Jira and Org-mode." nil tar "melpa" nil nil nil])
  (org-mac-iCal [cl-struct-package-desc org-mac-iCal (20140107 519) "Imports events from iCal.app to the Emacs diary" nil single "melpa" nil nil nil])
  (org-octopress [cl-struct-package-desc org-octopress (20140106 1640) "Compose octopress articles using org-mode." ((org (8 0)) (orglue (0 1)) (ctable (0 1 1))) tar "melpa" nil nil nil])
  (org-pomodoro [cl-struct-package-desc org-pomodoro (20131117 35) "Pomodoro implementation for org-mode." ((alert (0 5 10))) tar "melpa" nil nil nil])
  (org-present [cl-struct-package-desc org-present (20130426 1155) "Minimalist presentation minor-mode for Emacs org-mode." ((org (7))) single "melpa" nil nil nil])
  (org-toodledo [cl-struct-package-desc org-toodledo (20130928 1132) "Toodledo integration for Emacs Org mode" nil tar "melpa" nil nil nil])
  (orglink [cl-struct-package-desc orglink (20140309 1759) "use Org Mode links in other modes" ((dash (1 3 2)) (org (8 0))) single "melpa" nil nil nil])
  (orglue [cl-struct-package-desc orglue (20130912 1842) "more functionality to org-mode." ((org (8 1)) (epic (0 1)) (org-mac-link (1 2))) tar "melpa" nil nil nil])
  (osx-plist [cl-struct-package-desc osx-plist (20101130 448) "Apple plist file parser" nil single "melpa" nil nil nil])
  (outline-magic [cl-struct-package-desc outline-magic (20130813 1333) "outline mode extensions for Emacs" nil single "melpa" nil nil nil])
  (outlined-elisp-mode [cl-struct-package-desc outlined-elisp-mode (20131108 327) "outline-minor-mode settings for emacs lisp" nil single "melpa" nil nil nil])
  (package-build [cl-struct-package-desc package-build (20140221 201) "Tools for assembling a package archive" ((cl-lib (0 2))) tar "melpa" nil nil nil])
  (packed [cl-struct-package-desc packed (20130907 744) "Package manager agnostic Emacs Lisp package utilities" ((cl-lib (0 2)) (magit (1 1 1))) tar "melpa" nil nil nil])
  (pallet [cl-struct-package-desc pallet (20140307 433) "A package management tool for Emacs, using Cask." ((cask (0 5 0))) tar "melpa" nil nil nil])
  (pandoc-mode [cl-struct-package-desc pandoc-mode (20140219 1235) "Minor mode for interacting with Pandoc" nil tar "melpa" nil nil nil])
  (pangu-spacing [cl-struct-package-desc pangu-spacing (20140301 2326) "Minor-mode to add space between Chinese and English characters." nil single "melpa" nil nil nil])
  (pastehub [cl-struct-package-desc pastehub (20140308 108) "A client for the PasteHub cloud service" nil single "melpa" nil nil nil])
  (path-headerline-mode [cl-struct-package-desc path-headerline-mode (20130912 1519) "Displaying file path on headerline." nil single "melpa" nil nil nil])
  (pcmpl-git [cl-struct-package-desc pcmpl-git (20140218 1804) "pcomplete for git" nil tar "melpa" nil nil nil])
  (peg [cl-struct-package-desc peg (20130320 158) "Parsing Expression Grammars in Emacs Lisp" nil single "melpa" nil nil nil])
  (persp-mode [cl-struct-package-desc persp-mode (20140214 605) "\"perspectives\" + save/load + shared among frames - bugs." ((workgroups (0 2 0))) single "melpa" nil nil nil])
  (pgdevenv [cl-struct-package-desc pgdevenv (20130527 257) "Manage your PostgreSQL development envs" nil tar "melpa" nil nil nil])
  (ph [cl-struct-package-desc ph (20130312 1137) "A global minor mode for managing multiple projects." ((emacs (24 3))) tar "melpa" nil nil nil])
  (phi-search [cl-struct-package-desc phi-search (20131207 730) "another incremental search command, compatible with \"multiple-cursors\"" nil tar "melpa" nil nil nil])
  (phoenix-dark-mono-theme [cl-struct-package-desc phoenix-dark-mono-theme (20130306 1215) "Monochromatic version of the Phoenix theme" nil single "melpa" nil nil nil])
  (phoenix-dark-pink-theme [cl-struct-package-desc phoenix-dark-pink-theme (20140125 1659) "Port of the Sublime Text 2 theme of the same name" nil single "melpa" nil nil nil])
  (php+-mode [cl-struct-package-desc php+-mode (20121129 1252) "A better PHP mode with Zend Framework 1 support." nil tar "melpa" nil nil nil])
  (php-boris [cl-struct-package-desc php-boris (20130527 121) "Run boris php REPL" nil single "melpa" nil nil nil])
  (php-eldoc [cl-struct-package-desc php-eldoc (20140202 1141) "eldoc backend for php" nil tar "melpa" nil nil nil])
  (pig-mode [cl-struct-package-desc pig-mode (20140113 1321) "Major mode for Pig files" nil single "melpa" nil nil nil])
  (pkgbuild-mode [cl-struct-package-desc pkgbuild-mode (20140107 458) "Interface to the ArchLinux package manager" nil single "melpa" nil nil nil])
  (plenv [cl-struct-package-desc plenv (20130706 2316) "A plenv wrapper for Emacs" nil single "melpa" nil nil nil])
  (point-undo [cl-struct-package-desc point-undo (20100504 829) "undo/redo position" nil single "melpa" nil nil nil])
  (pomodoro [cl-struct-package-desc pomodoro (20130117 1935) "A timer for the Pomodoro Technique" nil single "melpa" nil nil nil])
  (pophint [cl-struct-package-desc pophint (20140305 806) "Provide navigation using pop-up tips, like Firefox's Vimperator Hint Mode" ((popup (0 5 0)) (log4e (0 2 0)) (yaxception (0 1))) tar "melpa" nil nil nil])
  (popup-switcher [cl-struct-package-desc popup-switcher (20131220 514) "switch to other buffers and files via popup." ((popup (0 5 0))) single "melpa" nil nil nil])
  (powerline [cl-struct-package-desc powerline (20140307 937) "Rewrite of Powerline" ((cl-lib (0 2))) tar "melpa" nil nil nil])
  (powershell-mode [cl-struct-package-desc powershell-mode (20100203 258) "Mode for editing Powershell scripts" nil single "melpa" nil nil nil])
  (pretty-mode [cl-struct-package-desc pretty-mode (20140217 1123) "Redisplay parts of the buffer as pretty symbols." nil single "melpa" nil nil nil])
  (project-local-variables [cl-struct-package-desc project-local-variables (20080502 1652) "Set project-local variables from a file." nil single "melpa" nil nil nil])
  (project-persist [cl-struct-package-desc project-persist (20131030 1208) "A minor mode to allow loading and saving of project settings." nil tar "melpa" nil nil nil])
  (projmake-mode [cl-struct-package-desc projmake-mode (20130614 335) "Project oriented automatic builder and error highlighter, flymake for projects" nil tar "melpa" nil nil nil])
  (purty-mode [cl-struct-package-desc purty-mode (20131004 1559) "Safely pretty-print greek letters, mathematical symbols, or anything else." nil single "melpa" nil nil nil])
  (python-django [cl-struct-package-desc python-django (20131214 1841) "A Jazzy package for managing Django projects" nil single "melpa" nil nil nil])
  (python-environment [cl-struct-package-desc python-environment (20140310 413) "virtualenv API for Emacs Lisp" ((deferred (0 3 1))) tar "melpa" nil nil nil])
  (python-magic [cl-struct-package-desc python-magic (20120505 1355) "outline mode extension for python mode" nil single "melpa" nil nil nil])
  (qml-mode [cl-struct-package-desc qml-mode (20130417 744) "Major mode for editing QT Declarative (QML) code." nil single "melpa" nil nil nil])
  (quick-buffer-switch [cl-struct-package-desc quick-buffer-switch (20130303 1629) "Quick switch to file or dir buffers." nil single "melpa" nil nil nil])
  (quickref [cl-struct-package-desc quickref (20130113 1500) "Display relevant notes-to-self in the echo area" ((dash (1 0 3)) (s (1 0 0))) single "melpa" nil nil nil])
  (railgun [cl-struct-package-desc railgun (20121016 2257) "No description available." nil single "melpa" nil nil nil])
  (rase [cl-struct-package-desc rase (20120928 1345) "Run At Sun Event daemon" nil single "melpa" nil nil nil])
  (rdp [cl-struct-package-desc rdp (20120928 1854) "Recursive Descent Parser library" nil single "melpa" nil nil nil])
  (realgud [cl-struct-package-desc realgud (20140308 1849) "A modular front-end for interacting with external debuggers" ((load-relative (20130410)) (loc-changes (20130723)) (test-simple (20130710))) tar "melpa" nil nil nil])
  (rebox2 [cl-struct-package-desc rebox2 (20121113 500) "Handling of comment boxes in various styles." nil single "melpa" nil nil nil])
  (recentf-ext [cl-struct-package-desc recentf-ext (20130130 2150) "Recentf extensions" nil single "melpa" nil nil nil])
  (rect+ [cl-struct-package-desc rect+ (20140117 608) "Extensions to rect.el" nil single "melpa" nil nil nil])
  (redo+ [cl-struct-package-desc redo+ (20131117 1151) "Redo/undo system for Emacs" nil single "melpa" nil nil nil])
  (redshank [cl-struct-package-desc redshank (20120510 1230) "No description available." nil tar "melpa" nil nil nil])
  (regex-dsl [cl-struct-package-desc regex-dsl (20100124 228) "lisp syntax for regexps" nil single "melpa" nil nil nil])
  (region-bindings-mode [cl-struct-package-desc region-bindings-mode (20130430 1447) "Enable custom bindings when mark is active." nil single "melpa" nil nil nil])
  (repl-toggle [cl-struct-package-desc repl-toggle (20140208 812) "Switch to/from repl buffer for current major-mode" ((fullframe (0 0 5))) single "melpa" nil nil nil])
  (replace-from-region [cl-struct-package-desc replace-from-region (20130918 308) "Replace commands whose query is from region" nil single "melpa" nil nil nil])
  (restclient [cl-struct-package-desc restclient (20140115 635) "An interactive HTTP client for Emacs" nil tar "melpa" nil nil nil])
  (reverse-theme [cl-struct-package-desc reverse-theme (20130402 312) "Reverse theme for Emacs" nil single "melpa" nil nil nil])
  (revive [cl-struct-package-desc revive (20121022 411) "Resume Emacs" nil single "melpa" nil nil nil])
  (rhtml-mode [cl-struct-package-desc rhtml-mode (20130422 611) "major mode for editing RHTML files" nil tar "melpa" nil nil nil])
  (rnc-mode [cl-struct-package-desc rnc-mode (20121227 1502) "A major mode for editing RELAX NG Compact syntax." nil single "melpa" nil nil nil])
  (rsense [cl-struct-package-desc rsense (20100510 2105) "RSense client for Emacs" nil single "melpa" nil nil nil])
  (ruby-dev [cl-struct-package-desc ruby-dev (20130811 151) "Interactive developement environment for Ruby." nil tar "melpa" nil nil nil])
  (ruby-electric [cl-struct-package-desc ruby-electric (20131217 33) "Minor mode for electrically editing ruby code" nil single "melpa" nil nil nil])
  (ruby-interpolation [cl-struct-package-desc ruby-interpolation (20131112 852) "Ruby string interpolation helpers" nil single "melpa" nil nil nil])
  (save-load-path [cl-struct-package-desc save-load-path (20131228 1952) "save load-path and reuse it to test" nil single "melpa" nil nil nil])
  (save-sexp [cl-struct-package-desc save-sexp (20130106 642) "save variables in files using setter forms like `setq'" nil tar "melpa" nil nil nil])
  (savekill [cl-struct-package-desc savekill (20130130 2151) "Save kill ring to disk" nil single "melpa" nil nil nil])
  (scala-mode2 [cl-struct-package-desc scala-mode2 (20131115 2347) "Major mode for editing Scala >= 2.9" nil tar "melpa" nil nil nil])
  (scf-mode [cl-struct-package-desc scf-mode (20111202 707) "shorten file-names in compilation type buffers" nil single "melpa" nil nil nil])
  (scheme-here [cl-struct-package-desc scheme-here (20131105 338) "cmuscheme extension for multiple inferior processes" nil single "melpa" nil nil nil])
  (scion [cl-struct-package-desc scion (20130315 555) "Haskell Minor Mode for Interacting with the Scion Library" nil single "melpa" nil nil nil])
  (sclang-extensions [cl-struct-package-desc sclang-extensions (20131117 1439) "Extensions for the SuperCollider Emacs mode." ((auto-complete (1 4 0)) (s (1 3 1)) (dash (1 2 0)) (emacs (24 1))) tar "melpa" nil nil nil])
  (sclang-snippets [cl-struct-package-desc sclang-snippets (20130513 51) "Snippets for the SuperCollider Emacs mode" ((yasnippet (0 8 0))) tar "melpa" nil nil nil])
  (scratch-log [cl-struct-package-desc scratch-log (20120130 1521) "Utility for *scratch* buffer." nil single "melpa" nil nil nil])
  (scratch-palette [cl-struct-package-desc scratch-palette (20131108 329) "save scratch notes on each file" nil single "melpa" nil nil nil])
  (scratch-pop [cl-struct-package-desc scratch-pop (20131108 330) "popup \"scratch\"es" nil single "melpa" nil nil nil])
  (screenshot [cl-struct-package-desc screenshot (20120509 1105) "Take a screenshot in Emacs" nil single "melpa" nil nil nil])
  (shell-command [cl-struct-package-desc shell-command (20090621 1332) "enables tab-completion for `shell-command'" nil single "melpa" nil nil nil])
  (shell-history [cl-struct-package-desc shell-history (20100504 850) "integration with shell history" nil single "melpa" nil nil nil])
  (shift-text [cl-struct-package-desc shift-text (20130831 955) "Move the region in 4 directions, in a way similar to Eclipse's" ((cl-lib (1 0)) (es-lib (0 3))) single "melpa" nil nil nil])
  (shimbun [cl-struct-package-desc shimbun (20120718 2038) "interfacing with web newspapers" nil tar "melpa" nil nil nil])
  (sicp [cl-struct-package-desc sicp (20121014 1314) "No description available." nil tar "melpa" nil nil nil])
  (simple-call-tree [cl-struct-package-desc simple-call-tree (20130330 940) "analyze source code based on font-lock text-properties" nil single "melpa" nil nil nil])
  (simplenote [cl-struct-package-desc simplenote (20130416 1502) "Interact with simple-note.appspot.com" nil single "melpa" nil nil nil])
  (slideview [cl-struct-package-desc slideview (20130512 2142) "File slideshow" nil single "melpa" nil nil nil])
  (smart-compile [cl-struct-package-desc smart-compile (20130917 347) "an interface to `compile'" nil single "melpa" nil nil nil])
  (smart-tabs-mode [cl-struct-package-desc smart-tabs-mode (20140102 1125) "Intelligently indent with tabs, align with spaces!" nil single "melpa" nil nil nil])
  (smarty-mode [cl-struct-package-desc smarty-mode (20100703 458) "major mode for editing smarty templates" nil single "melpa" nil nil nil])
  (smotitah [cl-struct-package-desc smotitah (20131127 152) "Modular emacs configuration framework" nil tar "melpa" nil nil nil])
  (snippet [cl-struct-package-desc snippet (20130210 1515) "Insert snippets of text into a buffer" nil single "melpa" nil nil nil])
  (spaces [cl-struct-package-desc spaces (20130610 49) "Create and switch between named window configurations." nil single "melpa" nil nil nil])
  (splitter [cl-struct-package-desc splitter (20130705 50) "Manage window splits" nil single "melpa" nil nil nil])
  (stan-mode [cl-struct-package-desc stan-mode (20131007 2012) "Major mode for editing STAN files" nil tar "melpa" nil nil nil])
  (starter-kit-perl [cl-struct-package-desc starter-kit-perl (20120202 1132) "Some helpful Perl code" nil single "melpa" nil nil nil])
  (stem [cl-struct-package-desc stem (20131102 409) "Routines for stemming" nil single "melpa" nil nil nil])
  (sticky [cl-struct-package-desc sticky (20101130 252) "Sticky key for capital letters" nil single "melpa" nil nil nil])
  (stumpwm-mode [cl-struct-package-desc stumpwm-mode (20140130 1816) "special lisp mode for evaluating code into running stumpwm" nil single "melpa" nil nil nil])
  (stupid-indent-mode [cl-struct-package-desc stupid-indent-mode (20130816 1354) "Plain stupid indentation minor mode" nil single "melpa" nil nil nil])
  (subatomic-theme [cl-struct-package-desc subatomic-theme (20140228 13) "Low contrast (awesome) emacs color theme" nil single "melpa" nil nil nil])
  (subatomic256-theme [cl-struct-package-desc subatomic256-theme (20130620 1910) "Fork of subatomic-theme for terminals." nil single "melpa" nil nil nil])
  (sublime-themes [cl-struct-package-desc sublime-themes (20140206 804) "A collection of themes based on Sublime Text" nil tar "melpa" nil nil nil])
  (sublimity [cl-struct-package-desc sublimity (20140224 702) "smooth-scrolling and minimap, like sublime editor" nil tar "melpa" nil nil nil])
  (sudo-ext [cl-struct-package-desc sudo-ext (20130130 2151) "sudo support" nil single "melpa" nil nil nil])
  (summarye [cl-struct-package-desc summarye (20130328 1027) "list up matched strings from a buffer, and display them in summary buffer" nil single "melpa" nil nil nil])
  (svg-mode-line-themes [cl-struct-package-desc svg-mode-line-themes (20140210 940) "SVG-based themes for mode-line" ((xmlgen (0 4))) tar "melpa" nil nil nil])
  (swbuff [cl-struct-package-desc swbuff (20041012 718) "Quick switch between Emacs buffers." nil single "melpa" nil nil nil])
  (swbuff-x [cl-struct-package-desc swbuff-x (20130607 1014) "Modifications to David Ponce's swbuff" ((swbuff (19991231 1800))) single "melpa" nil nil nil])
  (tangotango-theme [cl-struct-package-desc tangotango-theme (20140304 1504) "Tango Palette color theme for Emacs 24." nil single "melpa" nil nil nil])
  (tc [cl-struct-package-desc tc (20131028 149) "a Japanese input method with T-Code on Emacs" nil tar "melpa" nil nil nil])
  (tea-time [cl-struct-package-desc tea-time (20120331 120) "Simple timer package, useful to make perfect tea." nil single "melpa" nil nil nil])
  (test-simple [cl-struct-package-desc test-simple (20130710 826) "Simple Unit Test Framework for Emacs Lisp" nil single "melpa" nil nil nil])
  (textile-mode [cl-struct-package-desc textile-mode (20120721 1258) "Textile markup editing major mode" nil single "melpa" nil nil nil])
  (thingopt [cl-struct-package-desc thingopt (20120717 826) "Thing at Point optional utilities" nil single "melpa" nil nil nil])
  (time-ext [cl-struct-package-desc time-ext (20130130 2151) "more function for time/date" nil single "melpa" nil nil nil])
  (tmmofl [cl-struct-package-desc tmmofl (20121025 401) "Calls functions dependant on font lock highlighting at point" nil single "melpa" nil nil nil])
  (todochiku [cl-struct-package-desc todochiku (20120202 2005) "A mode for interfacing with Growl, Snarl, and the like." nil single "melpa" nil nil nil])
  (tomatinho [cl-struct-package-desc tomatinho (20140120 1540) "Tomatinho" nil tar "melpa" nil nil nil])
  (top-mode [cl-struct-package-desc top-mode (20130605 1739) "run \"top\" from emacs" nil single "melpa" nil nil nil])
  (tree-mode [cl-struct-package-desc tree-mode (20121207 1538) "A mode to manage tree widgets" nil single "melpa" nil nil nil])
  (trident-mode [cl-struct-package-desc trident-mode (20130726 1207) "Live Parenscript interaction" ((emacs (24)) (slime (20130526)) (skewer-mode (1 5 0)) (dash (1 0 3))) single "melpa" nil nil nil])
  (twilight-anti-bright-theme [cl-struct-package-desc twilight-anti-bright-theme (20120713 316) "A soothing Emacs 24 light-on-dark theme" nil single "melpa" nil nil nil])
  (twilight-bright-theme [cl-struct-package-desc twilight-bright-theme (20130605 143) "A Emacs 24 faces port of the TextMate theme" nil single "melpa" nil nil nil])
  (ukrainian-holidays [cl-struct-package-desc ukrainian-holidays (20130720 649) "Ukrainian holidays for Emacs calendar." nil single "melpa" nil nil nil])
  (uncrustify-mode [cl-struct-package-desc uncrustify-mode (20130707 659) "Minor mode to automatically uncrustify." nil single "melpa" nil nil nil])
  (underwater-theme [cl-struct-package-desc underwater-theme (20131117 1602) "A gentle, deep blue color theme" nil single "melpa" nil nil nil])
  (undohist [cl-struct-package-desc undohist (20140211 300) "Persistent undo history for GNU Emacs" ((cl-lib (1 0))) single "melpa" nil nil nil])
  (usage-memo [cl-struct-package-desc usage-memo (20110722 1551) "integration of Emacs help system and memo" nil single "melpa" nil nil nil])
  (use-package [cl-struct-package-desc use-package (20140310 304) "A use-package declaration for simplifying your .emacs" ((bind-key (1 0)) (diminish (0 44))) single "melpa" nil nil nil])
  (vcl-mode [cl-struct-package-desc vcl-mode (20121129 1314) "Syntax highlighting for Varnish Command Language" nil single "melpa" nil nil nil])
  (vcomp [cl-struct-package-desc vcomp (20121231 248) "compare version strings" nil single "melpa" nil nil nil])
  (viewer [cl-struct-package-desc viewer (20130314 2337) "View-mode extension" nil single "melpa" nil nil nil])
  (visible-mark [cl-struct-package-desc visible-mark (20080221 651) "Make marks visible." nil single "melpa" nil nil nil])
  (visual-regexp [cl-struct-package-desc visual-regexp (20140109 242) "A regexp/replace command for Emacs with interactive visual feedback" ((cl-lib (0 2))) single "melpa" nil nil nil])
  (visual-regexp-steroids [cl-struct-package-desc visual-regexp-steroids (20140109 242) "Extends visual-regexp to support other regexp engines" ((visual-regexp (0 5))) tar "melpa" nil nil nil])
  (w3m [cl-struct-package-desc w3m (20140213 1557) "an Emacs interface to w3m" nil tar "melpa" nil nil nil])
  (weblogger [cl-struct-package-desc weblogger (20110926 918) "Weblog maintenance via XML-RPC APIs" ((xml-rpc (1 6 8))) single "melpa" nil nil nil])
  (wide-column [cl-struct-package-desc wide-column (20120814 112) "Calls functions dependant on column position." nil single "melpa" nil nil nil])
  (widget-mvc [cl-struct-package-desc widget-mvc (20130430 757) "MVC framework for the emacs widgets" nil single "melpa" nil nil nil])
  (wiki [cl-struct-package-desc wiki (20120807 1458) "hypertext authoring the WikiWay" nil single "melpa" nil nil nil])
  (window-jump [cl-struct-package-desc window-jump (20130224 114) "Move left/right/up/down through your windows." nil single "melpa" nil nil nil])
  (window-layout [cl-struct-package-desc window-layout (20130805 1854) "window layout manager" nil single "melpa" nil nil nil])
  (workgroups2 [cl-struct-package-desc workgroups2 (20140228 826) "New workspaces for Emacs" ((cl-lib (0 4))) tar "melpa" nil nil nil])
  (writeroom-mode [cl-struct-package-desc writeroom-mode (20140220 820) "Minor mode for distraction-free writing" nil tar "melpa" nil nil nil])
  (xmlgen [cl-struct-package-desc xmlgen (20130219 219) "A DSL for generating XML." nil single "melpa" nil nil nil])
  (xterm-frobs [cl-struct-package-desc xterm-frobs (20091211 1555) "manipulate xterm when running emacs in tty mode" nil single "melpa" nil nil nil])
  (yalinum [cl-struct-package-desc yalinum (20130217 243) "yet another display line numbers." nil single "melpa" nil nil nil])
  (yard-mode [cl-struct-package-desc yard-mode (20130402 1727) "Minor mode for Ruby YARD comments" nil single "melpa" nil nil nil])
  (yaxception [cl-struct-package-desc yaxception (20130430 1527) "provide framework about exception like Java for elisp" nil single "melpa" nil nil nil])
  (zlc [cl-struct-package-desc zlc (20130427 43) "Provides zsh like completion system to Emacs" nil single "melpa" nil nil nil])
  (zoom-frm [cl-struct-package-desc zoom-frm (20140101 56) "Commands to zoom frame font size." ((frame-fns (0)) (frame-cmds (0))) single "melpa" nil nil nil])
  (zossima [cl-struct-package-desc zossima (20121123 1635) "Ruby from Emacs" ((inf-ruby (2 2 3))) tar "melpa" nil nil nil])
  (zotelo [cl-struct-package-desc zotelo (20140216 1138) "Manage Zotero collections from emacs" nil single "melpa" nil nil nil])
  (google-translate [cl-struct-package-desc google-translate (20140306 1556) "Emacs interface to Google Translate." nil tar "melpa" nil nil nil] [cl-struct-package-desc google-translate (0 5) "Emacs interface to Google Translate" nil single "marmalade" nil nil nil])
  (maildir [cl-struct-package-desc maildir (0 0 23) "Simple maildir based MUA." ((kv (0 0 17)) (dash (2 3 0)) (s (1 9 0)) (noflet (0 0 8))) tar "marmalade" nil nil nil])
  (sass-mode [cl-struct-package-desc sass-mode (20140201 303) "Major mode for editing Sass files" ((haml-mode (3 0 15))) single "melpa" nil nil nil] [cl-struct-package-desc sass-mode (3 0 16) "Major mode for editing Sass files" ((haml-mode (3 0 15))) single "marmalade" nil nil nil])
  (web-mode [cl-struct-package-desc web-mode (20140309 1501) "major mode for editing html templates" nil tar "melpa" nil nil nil] [cl-struct-package-desc web-mode (8 0 4) "major mode for editing html templates" nil single "marmalade" nil nil nil])
  (flycheck [cl-struct-package-desc flycheck (20140310 523) "On-the-fly syntax checking (Flymake done right)" ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (pkg-info (0 4)) (cl-lib (0 3)) (emacs (24 1))) tar "melpa" nil nil nil] [cl-struct-package-desc flycheck (0 17) "On-the-fly syntax checking (Flymake done right)" ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (pkg-info (0 4)) (cl-lib (0 3)) (emacs (24 1))) tar "marmalade" nil nil nil])
  (python-mode [cl-struct-package-desc python-mode (6 1 3) "An Emacs mode for editing Python code" nil tar "marmalade" nil nil nil])
  (modtime-skip-mode [cl-struct-package-desc modtime-skip-mode (20140128 1401) "Minor mode for disabling modtime and supersession checks on files." nil single "melpa" nil nil nil] [cl-struct-package-desc modtime-skip-mode (0 9 2) "Minor mode for disabling modtime and supersession checks on files." nil single "marmalade" nil nil nil])
  (cpputils-cmake [cl-struct-package-desc cpputils-cmake (20140305 326) "Easy real time C++ syntax check and intellisense if you use CMake" nil tar "melpa" nil nil nil] [cl-struct-package-desc cpputils-cmake (0 4 4) "Easy real time C++ syntax check and intellisense if you use CMake." nil tar "marmalade" nil nil nil])
  (memoize [cl-struct-package-desc memoize (20130421 1234) "Memoization functions" nil single "melpa" nil nil nil] [cl-struct-package-desc memoize (1 0 1) "Memoization functions -*- lexical-binding: t; -*-" nil single "marmalade" nil nil nil])
  (skewer-mode [cl-struct-package-desc skewer-mode (20140212 1843) "live browser JavaScript, CSS, and HTML interaction" ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) tar "melpa" nil nil nil] [cl-struct-package-desc skewer-mode (1 6 0) "live browser JavaScript, CSS, and HTML interaction" ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) tar "marmalade" nil nil nil])
  (simple-httpd [cl-struct-package-desc simple-httpd (20140224 631) "pure elisp HTTP server" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc simple-httpd (1 4 5) "pure elisp HTTP server" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (wacspace [cl-struct-package-desc wacspace (20140125 2221) "The WACky WorkSPACE manager for emACS" ((dash (1 2 0)) (cl-lib (0 2))) tar "melpa" nil nil nil] [cl-struct-package-desc wacspace (0 4 2) "The WACky WorkSPACE manager for emACS" ((dash (1 2 0)) (cl-lib (0 2))) tar "marmalade" nil nil nil])
  (scpaste [cl-struct-package-desc scpaste (20110617 1856) "Paste to the web via scp." ((htmlfontify (0 21))) single "melpa" nil nil nil] [cl-struct-package-desc scpaste (0 6 1) "Paste to the web via scp." ((htmlize (1 39))) single "marmalade" nil nil nil])
  (remember-theme [cl-struct-package-desc remember-theme (20140122 1500) "Remembers the last theme in use and re-loads for the next session." nil single "marmalade" nil nil nil])
  (weather-metno [cl-struct-package-desc weather-metno (20140121 1152) "Weather data from met.no in Emacs" ((emacs (24)) (cl-lib (0 3))) tar "melpa" nil nil nil] [cl-struct-package-desc weather-metno (20140121) "Weather data from met.no in Emacs" ((emacs (24)) (cl-lib (0 3))) tar "marmalade" nil nil nil])
  (json-mode [cl-struct-package-desc json-mode (20140120 129) "Major mode for editing JSON files" nil single "melpa" nil nil nil] [cl-struct-package-desc json-mode (1 2 0) "Major mode for editing JSON files" nil single "marmalade" nil nil nil])
  (desktop-registry [cl-struct-package-desc desktop-registry (20140119 1343) "Keep a central registry of desktop files" nil single "melpa" nil nil nil] [cl-struct-package-desc desktop-registry (1 2 0) "Keep a central registry of desktop files -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (org-trello [cl-struct-package-desc org-trello (20140308 832) "Org minor mode to synchronize with trello" ((emacs (24 3)) (dash (2 5 0)) (request (0 2 0)) (cl-lib (0 3 0)) (json (1 2)) (elnode (0 9 9 7 6)) (esxml (0 3 0)) (s (1 7 0)) (kv (0 0 19))) tar "melpa" nil nil nil] [cl-struct-package-desc org-trello (0 3 3) "Org minor mode to synchronize with trello" ((emacs (24 3)) (dash (2 5 0)) (request (0 2 0)) (cl-lib (0 3 0)) (json (1 2)) (elnode (0 9 9 7 6)) (esxml (0 3 0)) (s (1 7 0)) (kv (0 0 19))) tar "marmalade" nil nil nil])
  (fakir [cl-struct-package-desc fakir (20140219 1510) "fakeing bits of Emacs" ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) single "melpa" nil nil nil] [cl-struct-package-desc fakir (0 1 8) "fakeing bits of Emacs -*- lexical-binding: t -*-" ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) single "marmalade" nil nil nil])
  (refheap [cl-struct-package-desc refheap (20140112 1302) "A library for pasting to https://refheap.com" ((json (1 2))) single "melpa" nil nil nil] [cl-struct-package-desc refheap (0 0 6) "A library for pasting to https://refheap.com" ((json (1 2))) single "marmalade" nil nil nil])
  (less-css-mode [cl-struct-package-desc less-css-mode (20140205 250) "Major mode for editing LESS CSS files (lesscss.org)" nil single "melpa" nil nil nil] [cl-struct-package-desc less-css-mode (0 18) "Major mode for editing LESS CSS files (lesscss.org)" nil single "marmalade" nil nil nil])
  (paste-kde [cl-struct-package-desc paste-kde (20140108 1809) "paste text to KDE's pastebin service" ((web (0 3 6))) single "melpa" nil nil nil] [cl-struct-package-desc paste-kde (0 6) "paste text to KDE's pastebin service" ((web (0 3 6))) single "marmalade" nil nil nil])
  (smex [cl-struct-package-desc smex (20140131 1006) "M-x interface with Ido-style fuzzy matching." nil single "melpa" nil nil nil] [cl-struct-package-desc smex (3 0) "M-x interface with Ido-style fuzzy matching." nil single "marmalade" nil nil nil])
  (multi-project [cl-struct-package-desc multi-project (20140103 637) "Easily work with multiple projects." nil single "melpa" nil nil nil] [cl-struct-package-desc multi-project (0 0 15) "Easily work with multiple projects." nil single "marmalade" nil nil nil])
  (goto-chg [cl-struct-package-desc goto-chg (20131228 1459) "goto last change" nil single "melpa" nil nil nil] [cl-struct-package-desc goto-chg (1 6) "goto last change" nil single "marmalade" nil nil nil])
  (clojure-mode [cl-struct-package-desc clojure-mode (20140310 631) "Major mode for Clojure code" nil single "melpa" nil nil nil] [cl-struct-package-desc clojure-mode (2 1 1) "Major mode for Clojure code" nil single "marmalade" nil nil nil])
  (go-mode [cl-struct-package-desc go-mode (20140218 1923) "Major mode for the Go programming language" nil tar "melpa" nil nil nil] [cl-struct-package-desc go-mode (20131222) "Major mode for the Go programming language" nil single "marmalade" nil nil nil])
  (groovy-mode [cl-struct-package-desc groovy-mode (20131129 409) "Groovy mode derived mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc groovy-mode (20131129) "Groovy mode derived mode" nil single "marmalade" nil nil nil])
  (puppet-mode [cl-struct-package-desc puppet-mode (20140309 1337) "Major mode for Puppet manifests" nil single "melpa" nil nil nil] [cl-struct-package-desc puppet-mode (0 2) "A simple mode for editing puppet manifests" nil single "marmalade" nil nil nil])
  (geiser [cl-struct-package-desc geiser (20140307 425) "GNU Emacs and Scheme talk to each other" nil tar "melpa" nil nil nil] [cl-struct-package-desc geiser (0 5) "GNU Emacs and Scheme talk to each other" nil tar "marmalade" nil nil nil])
  (elixir-mix [cl-struct-package-desc elixir-mix (20131126 4) "Emacs integration for Elixir's mix" nil single "melpa" nil nil nil] [cl-struct-package-desc elixir-mix (0 3 0) "Emacs integration for Elixir's mix" nil single "marmalade" nil nil nil])
  (ido-vertical-mode [cl-struct-package-desc ido-vertical-mode (20140222 934) "Makes ido-mode display vertically." nil single "melpa" nil nil nil] [cl-struct-package-desc ido-vertical-mode (0 1 2) "Makes ido-mode display vertically." nil single "marmalade" nil nil nil])
  (charmap [cl-struct-package-desc charmap (20131019 2158) "Unicode table for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc charmap (0 0 1) "Unicode table for Emacs" nil single "marmalade" nil nil nil])
  (dpaste_de [cl-struct-package-desc dpaste_de (20131015 525) "Emacs mode to paste to dpaste.de" ((web (0 3 7))) single "melpa" nil nil nil] [cl-struct-package-desc dpaste_de (0 2) "Emacs mode to paste to dpaste.de" ((web (0 3 7))) single "marmalade" nil nil nil])
  (ruby-end [cl-struct-package-desc ruby-end (20131016 37) "Automatic insertion of end blocks for Ruby" nil single "melpa" nil nil nil] [cl-struct-package-desc ruby-end (0 3 1) "Automatic insertion of end blocks for Ruby" nil single "marmalade" nil nil nil])
  (f [cl-struct-package-desc f (20140220 21) "Modern API for working with files and directories" ((s (1 7 0)) (dash (2 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc f (0 11 0) "Modern API for working with files and directories" ((s (1 7 0)) (dash (2 2 0))) single "marmalade" nil nil nil])
  (awk-it [cl-struct-package-desc awk-it (20130917 1848) "Run AWK interactively on region!" nil single "melpa" nil nil nil] [cl-struct-package-desc awk-it (0 77) "Run AWK interactively on region!" nil single "marmalade" nil nil nil])
  (shell-pop [cl-struct-package-desc shell-pop (20140222 932) "helps you to use shell easily on Emacs. Only one key action to work." nil single "melpa" nil nil nil] [cl-struct-package-desc shell-pop (0 3) "helps you to use shell easily on Emacs. Only one key action to work." nil single "marmalade" nil nil nil])
  (git-gutter+ [cl-struct-package-desc git-gutter+ (20140205 802) "Manage Git hunks straight from the buffer" ((git-commit-mode (0 14))) single "melpa" nil nil nil] [cl-struct-package-desc git-gutter+ (0 1) "Manage Git hunks straight from the buffer" ((git-commit-mode (1 0))) single "marmalade" nil nil nil])
  (figlet [cl-struct-package-desc figlet (20120601 1315) "Annoy people with big, ascii art text" nil single "melpa" nil nil nil] [cl-struct-package-desc figlet (289) "banner generator" nil single "marmalade" nil nil nil])
  (emmet-mode [cl-struct-package-desc emmet-mode (20140218 836) "Unofficial Emmet's support for emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc emmet-mode (1 0 5) "Unofficial Emmet's support for emacs" nil single "marmalade" nil nil nil])
  (nrepl-decompile [cl-struct-package-desc nrepl-decompile (0 0 1) "decompilation extension for nrepl.el" ((nrepl (0 1 7)) (javap-mode (9))) single "marmalade" nil nil nil])
  (rings [cl-struct-package-desc rings (20140102 1536) "Buffer rings. Like tabs, but better." nil single "melpa" nil nil nil] [cl-struct-package-desc rings (1 0 1) "Buffer rings. Like tabs, but better." nil single "marmalade" nil nil nil])
  (processing-snippets [cl-struct-package-desc processing-snippets (20130718 1152) "Snippets for processing-mode" ((yasnippet (0 8 0))) tar "melpa" nil nil nil] [cl-struct-package-desc processing-snippets (1 0 0) "Snippets for the Processing major mode" ((yasnippet (0 8 0))) tar "marmalade" nil nil nil])
  (gitconfig [cl-struct-package-desc gitconfig (20130718 235) "Emacs lisp interface to work with git-config variables" nil single "melpa" nil nil nil] [cl-struct-package-desc gitconfig (1 0 0) "Emacs lisp interface to work with git-config variables" nil single "marmalade" nil nil nil])
  (processing-mode [cl-struct-package-desc processing-mode (20130912 1336) "Major mode for Processing 2.0" nil single "melpa" nil nil nil] [cl-struct-package-desc processing-mode (1 2 1) "Major mode for Processing 2.0" nil single "marmalade" nil nil nil])
  (gandalf-theme [cl-struct-package-desc gandalf-theme (20130809 247) "Gandalf color theme" nil single "melpa" nil nil nil] [cl-struct-package-desc gandalf-theme (0 1) "Gandalf color theme" nil single "marmalade" nil nil nil])
  (org-protocol-jekyll [cl-struct-package-desc org-protocol-jekyll (20130810 1450) "Jekyll's handler for org-protocol" nil single "melpa" nil nil nil] [cl-struct-package-desc org-protocol-jekyll (0 1) "Jekyll's handler for org-protocol" nil single "marmalade" nil nil nil])
  (fringe-helper [cl-struct-package-desc fringe-helper (20130519 741) "helper functions for fringe bitmaps" nil single "melpa" nil nil nil] [cl-struct-package-desc fringe-helper (1 0 1) "helper functions for fringe bitmaps" nil single "marmalade" nil nil nil])
  (git-gutter-fringe+ [cl-struct-package-desc git-gutter-fringe+ (20140131 1030) "Fringe version of git-gutter+.el" ((git-gutter+ (0 1)) (fringe-helper (1 0 1))) single "melpa" nil nil nil] [cl-struct-package-desc git-gutter-fringe+ (0 0 2) "Fringe version of git-gutter+.el" ((git-gutter+ (0 1)) (fringe-helper (20130519 1641))) single "marmalade" nil nil nil])
  (parenface1\.1 [cl-struct-package-desc parenface1\.1 (1 1) "Provide a face for parens in lisp modes." nil single "marmalade" nil nil nil])
  (flx-ido [cl-struct-package-desc flx-ido (20131030 1243) "flx integration for ido" ((flx (0 1)) (cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc flx-ido (0 2) "flx integration for ido" ((flx (0 1))) single "marmalade" nil nil nil])
  (flx [cl-struct-package-desc flx (20130728 820) "fuzzy matching with good sorting" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc flx (0 1) "fuzzy matching with good sorting" nil single "marmalade" nil nil nil])
  (grizzl [cl-struct-package-desc grizzl (20130810 202) "Fuzzy Search Library & Completing Read" ((cl-lib (0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc grizzl (0 1 1) "Fuzzy Search Library & Completing Read" ((cl-lib (0 1))) tar "marmalade" nil nil nil])
  (parscope [cl-struct-package-desc parscope (0 1 0) "Minor mode for showing the current scope in Lisp-like languages." nil single "marmalade" nil nil nil])
  (assemblage-theme [cl-struct-package-desc assemblage-theme (20130715 621) "a dark theme for Emacs 24" nil single "marmalade" nil nil nil])
  (clues-theme [cl-struct-package-desc clues-theme (20140227 1757) "an Emacs 24 theme which may well be fully awesome..." ((emacs (24 0))) single "melpa" nil nil nil] [cl-struct-package-desc clues-theme (20130908 801) "an Emacs 24 theme which may well be fully awesome..." ((emacs (24 0))) single "marmalade" nil nil nil])
  (chm-view [cl-struct-package-desc chm-view (20110616 1719) "View CHM file." nil single "melpa" nil nil nil] [cl-struct-package-desc chm-view (0 2 2) "View CHM file." nil single "marmalade" nil nil nil])
  (sourcetalk [cl-struct-package-desc sourcetalk (20130908 957) "SourceTalk (http://sourcetalk.net) plugin for Emacs" ((request (0 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc sourcetalk (1 1 0) "SourceTalk (http://sourcetalk.net) plugin for Emacs" ((request (0 2 0))) single "marmalade" nil nil nil])
  (debian-changelog-mode [cl-struct-package-desc debian-changelog-mode (1 96) "major mode for Debian changelog files." nil single "marmalade" nil nil nil])
  (frame-restore [cl-struct-package-desc frame-restore (20130922 735) "Restore Emacs frame" ((dash (1 2)) (f (0 11)) (emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc frame-restore (0 4) "Restore Emacs frame -*- lexical-binding: t; -*-" ((dash (1 2)) (f (0 11)) (emacs (24 1))) single "marmalade" nil nil nil])
  (company-inf-ruby [cl-struct-package-desc company-inf-ruby (20140306 1953) "company-mode completion back-end for inf-ruby" ((company (0 6 10)) (inf-ruby (2 2 7))) single "melpa" nil nil nil] [cl-struct-package-desc company-inf-ruby (0 2) "company-mode completion back-end for inf-ruby" ((company (0 6 10)) (inf-ruby (2 2 7))) single "marmalade" nil nil nil])
  (scratch-persist [cl-struct-package-desc scratch-persist (1 1) "persist the scratch buffer across sessions" nil single "marmalade" nil nil nil])
  (occur-default-current-word [cl-struct-package-desc occur-default-current-word (1 0) "Have M-x occur default to the word at point" nil single "marmalade" nil nil nil])
  (hook-utils [cl-struct-package-desc hook-utils (1 0) "Add a few utility functions for manipulating hooks" nil single "marmalade" nil nil nil])
  (pager-default-keybindings [cl-struct-package-desc pager-default-keybindings (20130719 1357) "Add the default keybindings suggested for pager.el" ((pager (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc pager-default-keybindings (1 1) "Add the default keybindings suggested for pager.el" nil single "marmalade" nil nil nil])
  (cloud-to-butt-erc [cl-struct-package-desc cloud-to-butt-erc (20130627 1608) "Replace 'the cloud' with 'my butt'" nil single "melpa" nil nil nil] [cl-struct-package-desc cloud-to-butt-erc (1 0 0) "Replace 'the cloud' with 'my butt'" nil single "marmalade" nil nil nil])
  (man-commands [cl-struct-package-desc man-commands (20130627 1653) "Add interactive commands for every manpages installed in your computer." nil single "melpa" nil nil nil] [cl-struct-package-desc man-commands (1 1) "Add interactive commands for every manpages installed in your computer." nil single "marmalade" nil nil nil])
  (jb-misc-macros [cl-struct-package-desc jb-misc-macros (0 4) "Miscellaneous macros" ((macro-utils (1 0))) single "marmalade" nil nil nil])
  (syslog-mode [cl-struct-package-desc syslog-mode (20140217 1618) "Major-mode for viewing log files" ((hide-lines (20130623))) single "melpa" nil nil nil] [cl-struct-package-desc syslog-mode (2 2) "Major-mode for viewing log files" ((hide-lines (20130623))) single "marmalade" nil nil nil])
  (hide-lines [cl-struct-package-desc hide-lines (20130824 1207) "Commands for hiding lines based on a regexp" nil single "melpa" nil nil nil] [cl-struct-package-desc hide-lines (20130623 1701) "Commands for hiding lines based on a regexp" nil single "marmalade" nil nil nil])
  (command-t [cl-struct-package-desc command-t (0 0 1) "Finds file in project using fuzzy search." ((find-file-in-project (3 2)) (popwin (0 4))) single "marmalade" nil nil nil])
  (ido-gnus [cl-struct-package-desc ido-gnus (20140216 846) "Access gnus groups or servers using ido" ((gnus (5 13))) single "melpa" nil nil nil] [cl-struct-package-desc ido-gnus (0 4) "Access gnus groups or servers using ido" ((gnus (5 13))) single "marmalade" nil nil nil])
  (issue-tracker [cl-struct-package-desc issue-tracker (0 0 1) "Poor man's issue tracker" nil tar "marmalade" nil nil nil])
  (scrolloff [cl-struct-package-desc scrolloff (1 0) "This mode ofers vim-like scrolloff function" nil single "marmalade" nil nil nil])
  (occur-x [cl-struct-package-desc occur-x (20130610 643) "Extra functionality for occur" nil single "melpa" nil nil nil] [cl-struct-package-desc occur-x (0 1 1) "Extra functionality for occur" nil single "marmalade" nil nil nil])
  (dired-efap [cl-struct-package-desc dired-efap (20140122 856) "Edit Filename At Point in a dired buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc dired-efap (0 8) "Edit Filename At Point in a dired buffer" nil single "marmalade" nil nil nil])
  (ob-sml [cl-struct-package-desc ob-sml (20130829 1143) "org-babel functions for template evaluation" ((sml-mode (6 4))) single "melpa" nil nil nil] [cl-struct-package-desc ob-sml (0 1) "org-babel functions for template evaluation" ((sml-mode (6 4))) single "marmalade" nil nil nil])
  (sawfish [cl-struct-package-desc sawfish (1 32) "Sawfish mode." nil single "marmalade" nil nil nil])
  (flymake-less [cl-struct-package-desc flymake-less (0 3) "Flymake handler for LESS stylesheets (lesscss.org)" ((less-css-mode (0 15))) single "marmalade" nil nil nil])
  (handlebars-sgml-mode [cl-struct-package-desc handlebars-sgml-mode (20130623 1633) "Add Handlebars contextual indenting support to sgml-mode" nil single "melpa" nil nil nil] [cl-struct-package-desc handlebars-sgml-mode (0 1 0) "Add Handlebars contextual indenting support to sgml-mode" nil single "marmalade" nil nil nil])
  (editorconfig [cl-struct-package-desc editorconfig (20131024 119) "EditorConfig Emacs extension" nil single "melpa" nil nil nil] [cl-struct-package-desc editorconfig (0 2) "EditorConfig Emacs extension" nil single "marmalade" nil nil nil])
  (org-journal [cl-struct-package-desc org-journal (20140310 132) "a simple org-mode based journaling mode" nil single "melpa" nil nil nil] [cl-struct-package-desc org-journal (1 4 6) "a simple org-mode based journaling mode" nil single "marmalade" nil nil nil])
  (shorten [cl-struct-package-desc shorten (20131201 620) "component-wise string shortener" nil single "melpa" nil nil nil] [cl-struct-package-desc shorten (0 3) "component-wise string shortener" nil single "marmalade" nil nil nil])
  (mode-icons [cl-struct-package-desc mode-icons (20130602 548) "Show icons for modes" nil tar "melpa" nil nil nil] [cl-struct-package-desc mode-icons (0 1 0) "Show icons for modes" nil tar "marmalade" nil nil nil])
  (highlight-escape-sequences [cl-struct-package-desc highlight-escape-sequences (20130531 1512) "Highlight escape sequences" nil single "melpa" nil nil nil] [cl-struct-package-desc highlight-escape-sequences (0 1) "Highlight escape sequences -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (esup [cl-struct-package-desc esup (20130607 1350) "the Emacs StartUp Profiler (ESUP)" nil single "melpa" nil nil nil] [cl-struct-package-desc esup (0 3) "the Emacs StartUp Profiler (ESUP)" nil single "marmalade" nil nil nil])
  (mustache [cl-struct-package-desc mustache (20131117 1407) "a mustache templating library in emacs lisp" ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) tar "melpa" nil nil nil] [cl-struct-package-desc mustache (0 20) "a mustache templating library in emacs lisp" ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) tar "marmalade" nil nil nil])
  (emamux [cl-struct-package-desc emamux (20140307 1700) "Interact with tmux" ((cl-lib (0 5))) single "melpa" nil nil nil] [cl-struct-package-desc emamux (0 1) "Interact with tmux" nil single "marmalade" nil nil nil])
  (emms-mark-ext [cl-struct-package-desc emms-mark-ext (20130528 2027) "Extra functions for emms-mark-mode and emms-tag-edit-mode" ((emms (3 0))) single "melpa" nil nil nil] [cl-struct-package-desc emms-mark-ext (0 3) "Extra functions for emms-mark-mode and emms-tag-edit-mode" ((emms (3 0))) single "marmalade" nil nil nil])
  (apt-utils [cl-struct-package-desc apt-utils (20130824 1200) "Emacs interface to APT (Debian package management)" nil single "melpa" nil nil nil] [cl-struct-package-desc apt-utils (1 212) "Emacs interface to APT (Debian package management)" nil single "marmalade" nil nil nil])
  (apt-utils-ido [cl-struct-package-desc apt-utils-ido (20130527 1345) "Ido commands for apt-utils" ((apt-utils (1 212))) single "melpa" nil nil nil] [cl-struct-package-desc apt-utils-ido (0 2) "Ido commands for apt-utils" ((apt-utils (1 212))) single "marmalade" nil nil nil])
  (irfc [cl-struct-package-desc irfc (20130824 1207) "Interface for IETF RFC document." nil single "melpa" nil nil nil] [cl-struct-package-desc irfc (0 5 6) "Interface for IETF RFC document." nil single "marmalade" nil nil nil])
  (show-marks [cl-struct-package-desc show-marks (20130805 749) "Navigate and visualize the mark-ring" ((fm (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc show-marks (0 4) "Navigate and visualize the mark-ring" ((fm (1 0))) single "marmalade" nil nil nil])
  (request-deferred [cl-struct-package-desc request-deferred (20130526 1015) "Wrap request.el by deferred" ((deferred (0 3 1)) (request (0 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc request-deferred (0 2 0) "Wrap request.el by deferred" ((deferred (0 3 1)) (request (0 2 0))) single "marmalade" nil nil nil])
  (request [cl-struct-package-desc request (20140308 2051) "Compatible layer for URL request in Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc request (0 2 0) "Compatible layer for URL request in Emacs" nil single "marmalade" nil nil nil])
  (jedi [cl-struct-package-desc jedi (20140223 1054) "Python auto-completion for Emacs" ((epc (0 1 0)) (auto-complete (1 4))) tar "melpa" nil nil nil] [cl-struct-package-desc jedi (0 1 2) "Python auto-completion for Emacs" ((epc (0 1 0)) (auto-complete (1 4))) tar "marmalade" nil nil nil])
  (kmacro-decision [cl-struct-package-desc kmacro-decision (20130919 826) "Add conditional branching to keyboard macros" ((el-x (1 0)) (jb-misc-macros (0 2))) single "melpa" nil nil nil] [cl-struct-package-desc kmacro-decision (1 5) "Add conditional branching to keyboard macros" ((el-x (1 0)) (jb-misc-macros (0 2))) single "marmalade" nil nil nil])
  (current-story [cl-struct-package-desc current-story (0 1 0) "Track and insert current Pivotal Tracker" nil single "marmalade" nil nil nil])
  (fullscreen-mode [cl-struct-package-desc fullscreen-mode (20130524 956) "fullscreen window support for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc fullscreen-mode (0 0 1) "fullscreen window support for Emacs" nil single "marmalade" nil nil nil])
  (express [cl-struct-package-desc express (20131106 706) "Alternatives to `message'" ((string-utils (0 3 2))) single "melpa" nil nil nil] [cl-struct-package-desc express (0 6 0) "Alternatives to `message'" ((string-utils (0 3 2))) single "marmalade" nil nil nil])
  (slough [cl-struct-package-desc slough (0 1) "package for slough - this is for a secret TW thing" ((nrepl (0 1 7)) (smartparens (1 4 3))) single "marmalade" nil nil nil])
  (javarun [cl-struct-package-desc javarun (0 1 1) "Minor mode for quick development of Java programs" nil single "marmalade" nil nil nil])
  (psvn [cl-struct-package-desc psvn (20120401 1440) "Subversion interface for emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc psvn (1 1 1) "Subversion interface for emacs" nil single "marmalade" nil nil nil])
  (fuzzy-format [cl-struct-package-desc fuzzy-format (20130824 1200) "select indent-tabs-mode and format code automatically." nil single "melpa" nil nil nil] [cl-struct-package-desc fuzzy-format (0 1 1) "select indent-tabs-mode and format code automatically." nil single "marmalade" nil nil nil])
  (nodejs-repl [cl-struct-package-desc nodejs-repl (20130520 842) "Run Node.js REPL" nil single "melpa" nil nil nil] [cl-struct-package-desc nodejs-repl (0 0 2 1) "Run Node.js REPL" nil single "marmalade" nil nil nil])
  (s-buffer [cl-struct-package-desc s-buffer (20130605 1424) "s operations for buffers" ((s (1 6 0)) (noflet (0 0 3))) single "melpa" nil nil nil] [cl-struct-package-desc s-buffer (0 0 4) "s operations for buffers" ((s (1 6 0)) (noflet (0 0 3))) single "marmalade" nil nil nil])
  (bar-cursor [cl-struct-package-desc bar-cursor (1 1) "package used to switch block cursor to a bar" nil single "marmalade" nil nil nil])
  (bbdb-ext [cl-struct-package-desc bbdb-ext (20130513 1152) "Extra commands for BBDB" ((bbdb (2 36))) single "melpa" nil nil nil] [cl-struct-package-desc bbdb-ext (0 1) "Extra commands for BBDB" ((bbdb (2 36))) single "marmalade" nil nil nil])
  (eviews [cl-struct-package-desc eviews (0 1) "Major-mode for editing eviews program files" nil single "marmalade" nil nil nil])
  (simple-call-tree+ [cl-struct-package-desc simple-call-tree+ (20131009 1412) "Extensions to simple-call-tree" nil single "melpa" nil nil nil] [cl-struct-package-desc simple-call-tree+ (1 3) "Extensions to simple-call-tree" nil single "marmalade" nil nil nil])
  (noflet [cl-struct-package-desc noflet (20140202 1451) "locally override functions" nil single "melpa" nil nil nil] [cl-struct-package-desc noflet (0 0 11) "locally override functions" nil single "marmalade" nil nil nil])
  (nzenburn-theme [cl-struct-package-desc nzenburn-theme (20130513) "A low contrast color theme for Emacs." nil single "marmalade" nil nil nil])
  (dired-dups [cl-struct-package-desc dired-dups (20130527 1425) "Find duplicate files and display them in a dired buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc dired-dups (0 3) "Find duplicate files and display them in a dired buffer" nil single "marmalade" nil nil nil])
  (look-dired [cl-struct-package-desc look-dired (20130511 1624) "Extensions to look-mode for dired buffers" ((look-mode (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc look-dired (0 1) "Extensions to look-mode for dired buffers" ((look-mode (1 0))) single "marmalade" nil nil nil])
  (look-mode [cl-struct-package-desc look-mode (20130824 1206) "quick file viewer for image and text file browsing" nil single "melpa" nil nil nil] [cl-struct-package-desc look-mode (1 0) "quick file viewer for image and text file browsing" nil single "marmalade" nil nil nil])
  (bs-ext [cl-struct-package-desc bs-ext (20130824 1159) "Extensions to emacs buffer-selection library (bs.el)" nil single "melpa" nil nil nil] [cl-struct-package-desc bs-ext (0 2) "Extensions to emacs buffer-selection library (bs.el)" nil single "marmalade" nil nil nil])
  (fm [cl-struct-package-desc fm (20130612 1) "follow mode for compilation/output buffers" nil single "marmalade" nil nil nil] [cl-struct-package-desc fm (20130126 1618) "follow mode for compilation/output buffers" nil single "melpa" nil nil nil])
  (org-dotemacs [cl-struct-package-desc org-dotemacs (20130908 1756) "Store your emacs config as an org file, and choose which bits to load." ((org (7 9 3)) (cl-lib (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc org-dotemacs (0 3) "Store your emacs config as an org file, and choose which bits to load." ((org (7 9 3)) (cl-lib (1 0))) single "marmalade" nil nil nil])
  (colour-region [cl-struct-package-desc colour-region (0 4) "Toggle regions of the buffer with different text snippets" nil single "marmalade" nil nil nil])
  (theme-park-mode [cl-struct-package-desc theme-park-mode (0 1 2) "Take your themes for a ride!" nil single "marmalade" nil nil nil])
  (butler [cl-struct-package-desc butler (20140217 1900) "Emacs client for Jenkins" ((deferred (3 1)) (json (1 2))) tar "melpa" nil nil nil] [cl-struct-package-desc butler (0 2 0) "Emacs client for Jenkins" ((deferred (3 1)) (json (1 2))) tar "marmalade" nil nil nil])
  (sparql-mode [cl-struct-package-desc sparql-mode (20140224 1138) "Edit and interactively evaluate SPARQL queries." nil single "melpa" nil nil nil] [cl-struct-package-desc sparql-mode (0 7 2) "Edit and interactively evaluate SPARQL queries." nil single "marmalade" nil nil nil])
  (stripe-buffer [cl-struct-package-desc stripe-buffer (20131010 1526) "Use a different background for even and odd lines" ((cl-lib (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc stripe-buffer (0 2 2) "Use a different background for even and odd lines" ((cl-lib (1 0))) single "marmalade" nil nil nil])
  (command-stats [cl-struct-package-desc command-stats (0 1) "Track frequency of commands executed in emacs" nil single "marmalade" nil nil nil])
  (angular-snippets [cl-struct-package-desc angular-snippets (20131125 314) "Yasnippets for AngularJS" ((s (1 4 0)) (dash (1 2 0))) tar "melpa" nil nil nil] [cl-struct-package-desc angular-snippets (0 2 3) "Yasnippets for AngularJS" ((s (1 4 0)) (dash (1 2 0))) tar "marmalade" nil nil nil])
  (flycheck-color-mode-line [cl-struct-package-desc flycheck-color-mode-line (20131125 2138) "Change mode line color with Flycheck status" ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc flycheck-color-mode-line (0 3) "Change mode line color with Flycheck status -*- lexical-binding: t -*-" ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) single "marmalade" nil nil nil])
  (string-edit [cl-struct-package-desc string-edit (20130815 2115) "Avoid escape nightmares by editing string in separate buffer" ((dash (1 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc string-edit (0 1 0) "Avoid escape nightmares by editing string in separate buffer" ((dash (1 2 0))) single "marmalade" nil nil nil])
  (paredit-everywhere [cl-struct-package-desc paredit-everywhere (20131010 318) "Enable some paredit features in non-lisp buffers" ((paredit (22))) single "melpa" nil nil nil] [cl-struct-package-desc paredit-everywhere (0 3) "Enable some paredit features in non-lisp buffers" ((paredit (22))) single "marmalade" nil nil nil])
  (perlbrew [cl-struct-package-desc perlbrew (20130127 324) "A perlbrew wrapper for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc perlbrew (0 1) "basic support for perlbrew environments" ((cl (0))) single "marmalade" nil nil nil])
  (helm-projectile [cl-struct-package-desc helm-projectile (20140225 959) "Helm integration for Projectile" ((helm (1 4 0)) (projectile (0 10 0)) (cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc helm-projectile (0 10 0) "Helm integration for Projectile" ((helm (1 4 0)) (projectile (0 10 0))) single "marmalade" nil nil nil])
  (typing-practice [cl-struct-package-desc typing-practice (0 1) "Typing practice" nil single "marmalade" nil nil nil])
  (better-defaults [cl-struct-package-desc better-defaults (20130422 1322) "Fixing weird quirks and poor defaults" nil single "melpa" nil nil nil] [cl-struct-package-desc better-defaults (0 1 2) "Fixing weird quirks and poor defaults" nil single "marmalade" nil nil nil])
  (helm-ag [cl-struct-package-desc helm-ag (20140307 1558) "the silver search with helm interface" ((helm (1 5 6)) (cl-lib (0 5))) single "melpa" nil nil nil] [cl-struct-package-desc helm-ag (0 4) "the silver search with helm interface" ((helm (1 0))) single "marmalade" nil nil nil])
  (simplezen [cl-struct-package-desc simplezen (20130421 300) "A simple subset of zencoding-mode for Emacs." ((s (1 4 0)) (dash (1 1 0))) single "melpa" nil nil nil] [cl-struct-package-desc simplezen (0 1 1) "A simple subset of zencoding-mode for Emacs." nil single "marmalade" nil nil nil])
  (toxi-theme [cl-struct-package-desc toxi-theme (20130418 1239) "A dark color theme by toxi" ((emacs (24))) single "melpa" nil nil nil] [cl-struct-package-desc toxi-theme (0 1 0) "REQUIRES EMACS 24" nil single "marmalade" nil nil nil])
  (indent-guide [cl-struct-package-desc indent-guide (20140212 2009) "show vertical lines to guide indentation" nil single "melpa" nil nil nil] [cl-struct-package-desc indent-guide (1 0 1) "show vertical lines to guide indentation" nil single "marmalade" nil nil nil])
  (lispyscript-mode [cl-struct-package-desc lispyscript-mode (20130828 719) "Major mode for LispyScript code." nil single "melpa" nil nil nil] [cl-struct-package-desc lispyscript-mode (0 3 0) "Major mode for LispyScript code." nil single "marmalade" nil nil nil])
  (rubocop [cl-struct-package-desc rubocop (20131101 1142) "An Emacs interface for RuboCop" ((dash (1 0 0))) single "melpa" nil nil nil] [cl-struct-package-desc rubocop (0 3) "An Emacs interface for RuboCop" ((dash (1 0 0))) single "marmalade" nil nil nil])
  (suomalainen-kalenteri [cl-struct-package-desc suomalainen-kalenteri (20130414 635) "Finnish holidays for Emacs calendar." nil single "melpa" nil nil nil] [cl-struct-package-desc suomalainen-kalenteri (2013 4 18) "Finnish national and Christian holidays for calendar" nil tar "marmalade" nil nil nil])
  (marmalade-service [cl-struct-package-desc marmalade-service (2 0 9) "The Marmalade package store service." ((dash (1 1 0)) (s (1 6 0)) (elnode (0 9 9 6 10))) tar "marmalade" nil nil nil])
  (surround [cl-struct-package-desc surround (20140204 2046) "emulate surround.vim from Vim" nil single "melpa" nil nil nil] [cl-struct-package-desc surround (0 1) "emulate surround.vim from Vim" nil single "marmalade" nil nil nil])
  (flymake-elixir [cl-struct-package-desc flymake-elixir (20130810 717) "A flymake handler for elixir-mode .ex files." nil single "melpa" nil nil nil] [cl-struct-package-desc flymake-elixir (0 5) "A flymake handler for elixir-mode .ex files.     " nil single "marmalade" nil nil nil])
  (kanban [cl-struct-package-desc kanban (20130815 48) "Parse org-todo headlines to use org-tables as Kanban tables" nil single "melpa" nil nil nil] [cl-struct-package-desc kanban (0 1 2) "Parse org-todo headlines to use org-tables as Kanban tables" nil single "marmalade" nil nil nil])
  (clippy [cl-struct-package-desc clippy (20131210 258) "Show tooltip with function documentation at point" ((pos-tip (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc clippy (1 0) "Show tooltip with function documentation at point" ((pos-tip (1 0))) single "marmalade" nil nil nil])
  (letcheck [cl-struct-package-desc letcheck (20130213 1605) "Check the erroneous assignments in let forms" nil single "melpa" nil nil nil] [cl-struct-package-desc letcheck (0 2) "Check the erroneous assignments in let forms" nil single "marmalade" nil nil nil])
  (sea-before-storm-theme [cl-struct-package-desc sea-before-storm-theme (0 3) "Sea Before Storm color theme for Emacs 24" nil single "marmalade" nil nil nil])
  (github-browse-file [cl-struct-package-desc github-browse-file (20140202 51) "View the file you're editing on GitHub" nil single "melpa" nil nil nil] [cl-struct-package-desc github-browse-file (0 3 0) "View the file you're editing on GitHub" nil single "marmalade" nil nil nil])
  (emacs-droid [cl-struct-package-desc emacs-droid (0 0 0) "Android application development tools for Emacs" nil single "marmalade" nil nil nil])
  (ttrss [cl-struct-package-desc ttrss (20130409 1049) "Tiny Tiny RSS elisp bindings" ((emacs (23 1))) single "melpa" nil nil nil] [cl-struct-package-desc ttrss (1 7 5) "Tiny Tiny RSS elisp bindings" ((emacs (23 1))) single "marmalade" nil nil nil])
  (theme-changer [cl-struct-package-desc theme-changer (20130725 1919) "Sunrise/Sunset Theme Changer for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc theme-changer (2 1 0) "Sunrise/Sunset Theme Changer for Emacs" nil single "marmalade" nil nil nil])
  (swarmhacker [cl-struct-package-desc swarmhacker (0 0 1) "simple swarm chat" nil single "marmalade" nil nil nil])
  (psgml [cl-struct-package-desc psgml (1 4 1) "Lennart Staflin's Psgml package, with Elisp syntax and sgml-validate fixed for Emacsen >=24." nil tar "marmalade" nil nil nil])
  (ruby-hash-syntax [cl-struct-package-desc ruby-hash-syntax (20131113 1032) "Toggle ruby hash syntax between classic and 1.9 styles" nil single "melpa" nil nil nil] [cl-struct-package-desc ruby-hash-syntax (0 3) "Toggle ruby hash syntax between classic and 1.9 styles" nil single "marmalade" nil nil nil])
  (color-theme-heroku [cl-struct-package-desc color-theme-heroku (1 0 0) "Heroku color theme" nil single "marmalade" nil nil nil])
  (clj-mode [cl-struct-package-desc clj-mode (0 9) "basic Major mode (clj) for Clojure code" nil single "marmalade" nil nil nil])
  (ert-x [cl-struct-package-desc ert-x (0) "Staging area for experimental extensions to ERT" ((ert (0))) single "marmalade" nil nil nil])
  (center-text [cl-struct-package-desc center-text (0 8) "Center the text in a fixed-width column" nil single "marmalade" nil nil nil])
  (git-gutter-fringe [cl-struct-package-desc git-gutter-fringe (20131117 635) "Fringe version of git-gutter.el" ((git-gutter (0 42)) (fringe-helper (0 1 1))) single "melpa" nil nil nil] [cl-struct-package-desc git-gutter-fringe (0 12) "Fringe version of git-gutter.el" ((git-gutter (0 42)) (fringe-helper (0 1 1))) single "marmalade" nil nil nil])
  (helm-gtags [cl-struct-package-desc helm-gtags (20140307 1639) "GNU GLOBAL helm interface" ((helm (1 5 6)) (cl-lib (0 5))) single "melpa" nil nil nil] [cl-struct-package-desc helm-gtags (0 9 2) "GNU GLOBAL helm interface" ((helm (1 0))) single "marmalade" nil nil nil])
  (latest-clojars [cl-struct-package-desc latest-clojars (0 3) "Clojure dependency resolver" nil single "marmalade" nil nil nil])
  (smartparens [cl-struct-package-desc smartparens (20140222 826) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." ((cl-lib (0 3)) (dash (2 4 0))) tar "melpa" nil nil nil] [cl-struct-package-desc smartparens (1 6 1) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." ((cl-lib (0 1)) (dash (2 3 0))) tar "marmalade" nil nil nil])
  (rubyinterpol [cl-struct-package-desc rubyinterpol (0 1) "Ruby-like String Interpolation for format" nil single "marmalade" nil nil nil])
  (batch-mode [cl-struct-package-desc batch-mode (20130824 1158) "major mode for editing ESRI batch scrips" nil single "melpa" nil nil nil] [cl-struct-package-desc batch-mode (1 0) "major mode for editing ESRI batch scrips" nil single "marmalade" nil nil nil])
  (tumble [cl-struct-package-desc tumble (20130327 1007) "an Tumblr mode for Emacs" ((http-post-simple (0))) single "melpa" nil nil nil] [cl-struct-package-desc tumble (1 5) "an Tumblr mode for Emacs" nil single "marmalade" nil nil nil])
  (grapnel [cl-struct-package-desc grapnel (20131001 834) "HTTP request lib with flexible callback dispatch" nil single "melpa" nil nil nil] [cl-struct-package-desc grapnel (0 5 3) "HTTP request lib with flexible callback dispatch" nil single "marmalade" nil nil nil])
  (bitly [cl-struct-package-desc bitly (20130503 149) "Shorten URLs using the bitly.com shortener service" nil single "melpa" nil nil nil] [cl-struct-package-desc bitly (1 0) "Shorten URLs using the bitly.com shortener service" nil single "marmalade" nil nil nil])
  (thread-dump [cl-struct-package-desc thread-dump (20130323 1025) "Java thread dump viewer" nil single "melpa" nil nil nil] [cl-struct-package-desc thread-dump (1 0) "java thread dump viewer" nil single "marmalade" nil nil nil])
  (everything [cl-struct-package-desc everything (0 1 5) "Bridge to MS Windows desktop-search engine Everything" nil single "marmalade" nil nil nil])
  (drupal-spell [cl-struct-package-desc drupal-spell (20130520 955) "Aspell extra dictionary for Drupal" nil tar "melpa" nil nil nil] [cl-struct-package-desc drupal-spell (0 2 2) "Aspell extra dictionary for Drupal" nil tar "marmalade" nil nil nil])
  (proc-net [cl-struct-package-desc proc-net (20130321 1712) "network process tools" nil single "melpa" nil nil nil] [cl-struct-package-desc proc-net (0 0 1) "network process tools" nil single "marmalade" nil nil nil])
  (flymake-haskell-multi [cl-struct-package-desc flymake-haskell-multi (20130620 422) "Syntax-check haskell-mode using both ghc and hlint" ((flymake-easy (0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc flymake-haskell-multi (0 3) "Syntax-check haskell-mode using both ghc and hlint" ((flymake-easy (0 1))) tar "marmalade" nil nil nil])
  (with-namespace [cl-struct-package-desc with-namespace (20130407 1122) "interoperable elisp namespaces" ((dash (1 1 0)) (loop (1 1))) single "melpa" nil nil nil] [cl-struct-package-desc with-namespace (1 1) "Poor-man's namespaces for elisp" nil single "marmalade" nil nil nil])
  (supergenpass [cl-struct-package-desc supergenpass (20130328 2248) "SuperGenPass for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc supergenpass (0 1) "SuperGenPass for Emacs" nil single "marmalade" nil nil nil])
  (show-css [cl-struct-package-desc show-css (20130605 1524) "Show the css of the html attribute the cursor is on" nil tar "melpa" nil nil nil] [cl-struct-package-desc show-css (1 1) "Show the css of the html attribute the cursor is on" nil single "marmalade" nil nil nil])
  (main-line [cl-struct-package-desc main-line (20130404 1904) "modeline replacement forked from an early version of powerline.el" nil single "melpa" nil nil nil] [cl-struct-package-desc main-line (1 2 8) "modeline replacement forked from an early version of powerline.el" nil single "marmalade" nil nil nil])
  (sackspace [cl-struct-package-desc sackspace (20130719 256) "A better backspace" nil single "melpa" nil nil nil] [cl-struct-package-desc sackspace (0 8 2) "A better backspace" nil single "marmalade" nil nil nil])
  (dot-mode [cl-struct-package-desc dot-mode (20140128 1716) "No description available." nil single "melpa" nil nil nil] [cl-struct-package-desc dot-mode (1 12) "minor mode to repeat typing or commands" nil single "marmalade" nil nil nil])
  (auto-highlight-symbol [cl-struct-package-desc auto-highlight-symbol (1 55) "Automatic highlighting current symbol minor mode" nil single "marmalade" nil nil nil])
  (lexbind-mode [cl-struct-package-desc lexbind-mode (20140303 359) "Puts the value of lexical-binding in the mode line" nil single "melpa" nil nil nil] [cl-struct-package-desc lexbind-mode (0 8) "Puts the value of lexical-binding in the mode line" nil single "marmalade" nil nil nil])
  (isea [cl-struct-package-desc isea (0 0 2) "interactive server eval at mode, a comint for a daemonized emacs -*- lexical-binding: t -*-" ((elpakit (0 0 18))) single "marmalade" nil nil nil])
  (pinboard [cl-struct-package-desc pinboard (0 0 1) "get stuff from pinboard -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (flymake-hlint [cl-struct-package-desc flymake-hlint (20130309 145) "A flymake handler for haskell-mode files using hlint" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-hlint (0 2) "A flymake handler for haskell-mode files using hlint" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (ht [cl-struct-package-desc ht (20140122 1555) "The missing hash table library for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc ht (1 5) "The missing hash table library for Emacs" nil single "marmalade" nil nil nil])
  (tex-smart-umlauts [cl-struct-package-desc tex-smart-umlauts (20131210 2346) "Smart umlaut conversion for TeX." nil single "melpa" nil nil nil] [cl-struct-package-desc tex-smart-umlauts (1 2 0) "Smart umlaut conversion for TeX." nil single "marmalade" nil nil nil])
  (loop [cl-struct-package-desc loop (20130309 805) "friendly imperative loop structures" nil single "melpa" nil nil nil] [cl-struct-package-desc loop (1 1) "friendly imperative loop structures" nil single "marmalade" nil nil nil])
  (cryptol-mode [cl-struct-package-desc cryptol-mode (20131010 1354) "Cryptol major mode for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc cryptol-mode (0 0 2) "Cryptol major mode for Emacs" nil single "marmalade" nil nil nil])
  (edebug-x [cl-struct-package-desc edebug-x (20130615 2325) "Extensions for Edebug" nil single "melpa" nil nil nil] [cl-struct-package-desc edebug-x (1 2) "Extensions for Edebug" ((dash (1 1 0))) single "marmalade" nil nil nil])
  (babcore [cl-struct-package-desc babcore (0 0 5) "Core Emacs configuration. This should be the minimum in every emacs config." nil single "marmalade" nil nil nil])
  (vcard [cl-struct-package-desc vcard (0 1) "vcard parsing and display routines" nil single "marmalade" nil nil nil])
  (cups [cl-struct-package-desc cups (0 1) "CUPS features for Emacs" nil single "marmalade" nil nil nil])
  (fic-ext-mode [cl-struct-package-desc fic-ext-mode (0 1) "Show FIXME/TODO/BUG(...) in special face only in comments and strings" nil single "marmalade" nil nil nil])
  (control-lock [cl-struct-package-desc control-lock (1 1 2) "Like caps-lock, but for your control key.  Give your pinky a rest!" nil single "marmalade" nil nil nil])
  (vimrc-mode [cl-struct-package-desc vimrc-mode (20130228 1244) "Major mode for vimrc files" nil single "melpa" nil nil nil] [cl-struct-package-desc vimrc-mode (0 3 1) "Major mode for vimrc files" nil single "marmalade" nil nil nil])
  (git-gutter [cl-struct-package-desc git-gutter (20140225 758) "Port of Sublime Text plugin GitGutter" nil single "melpa" nil nil nil] [cl-struct-package-desc git-gutter (0 42) "Port of Sublime Text plugin GitGutter" nil single "marmalade" nil nil nil])
  (toml-mode [cl-struct-package-desc toml-mode (20130302 748) "Mojor mode for editing TOML files" nil single "melpa" nil nil nil] [cl-struct-package-desc toml-mode (0 1 3) "Mojor mode for editing TOML files" nil single "marmalade" nil nil nil])
  (todotxt [cl-struct-package-desc todotxt (20131231 850) "A major mode for editing todo.txt files" nil single "melpa" nil nil nil] [cl-struct-package-desc todotxt (0 2 3) "A major mode for editing todo.txt files" nil single "marmalade" nil nil nil])
  (weechat [cl-struct-package-desc weechat (20140219 526) "Chat via WeeChat's relay protocol in Emacs" ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) tar "melpa" nil nil nil] [cl-struct-package-desc weechat (0 2) "Chat via WeeChat's relay protocol in Emacs" ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) tar "marmalade" nil nil nil])
  (mark-tools [cl-struct-package-desc mark-tools (20130614 325) "Some simple tools to access the mark-ring in Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc mark-tools (0 3) "Some simple tools to access the mark-ring in Emacs" nil single "marmalade" nil nil nil])
  (nurumacs [cl-struct-package-desc nurumacs (3 4 1) "smooth-scrolling and minimap" nil single "marmalade" nil nil nil])
  (macro-utils [cl-struct-package-desc macro-utils (1 0) "Utilities for writing macros." nil single "marmalade" nil nil nil])
  (ert [cl-struct-package-desc ert (0) "Emacs Lisp Regression Testing" nil single "marmalade" nil nil nil])
  (tabulated-list [cl-struct-package-desc tabulated-list (20120406 1351) "generic major mode for tabulated lists." nil single "melpa" nil nil nil] [cl-struct-package-desc tabulated-list (0) "generic major mode for tabulated lists." nil single "marmalade" nil nil nil])
  (backtrace-mode [cl-struct-package-desc backtrace-mode (20130223 1154) "A better way to browse /var/log/messages files" nil single "melpa" nil nil nil] [cl-struct-package-desc backtrace-mode (0 0 10) "A better way to browse /var/log/messages files" nil single "marmalade" nil nil nil])
  (lisp-infection [cl-struct-package-desc lisp-infection (0 0 10) "Commands to *enhance* S-exp editing" nil single "marmalade" nil nil nil])
  (generate-autoloads [cl-struct-package-desc generate-autoloads (0 0 10) "A package to help you lazy-load everything" nil single "marmalade" nil nil nil])
  (deep-thought-theme [cl-struct-package-desc deep-thought-theme (0 1 1) "Emacs 24 theme with the Answer to The Ultimate Question" nil single "marmalade" nil nil nil])
  (framesize [cl-struct-package-desc framesize (20131017 1432) "change the size of frames in Emacs" ((key-chord (0 5 20080915))) single "melpa" nil nil nil] [cl-struct-package-desc framesize (0 0 5) "change the size of frames in Emacs" ((key-chord (0 5 20080915))) single "marmalade" nil nil nil])
  (rust-mode [cl-struct-package-desc rust-mode (20140226 2001) "A major emacs mode for editing Rust source code" nil single "melpa" nil nil nil] [cl-struct-package-desc rust-mode (0 1 0) "A major emacs mode for editing Rust source code" ((cm-mode (0 1 0))) single "marmalade" nil nil nil])
  (gruber-darker-theme [cl-struct-package-desc gruber-darker-theme (20140302 512) "Gruber Darker color theme for Emacs 24." nil single "melpa" nil nil nil] [cl-struct-package-desc gruber-darker-theme (0 6) "Gruber Darker color theme for Emacs 24." nil single "marmalade" nil nil nil])
  (purple-haze-theme [cl-struct-package-desc purple-haze-theme (20130930 36) "an overtly purple color theme for Emacs24." ((emacs (24 0))) single "marmalade" nil nil nil] [cl-struct-package-desc purple-haze-theme (20130929 1751) "an overtly purple color theme for Emacs24." ((emacs (24 0))) single "melpa" nil nil nil])
  (soothe-theme [cl-struct-package-desc soothe-theme (20130805 0) "a dark colorful theme for Emacs24." ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc soothe-theme (0 3 16) "a dark colorful theme for Emacs24." ((emacs (24 1))) single "marmalade" nil nil nil])
  (requirejs-mode [cl-struct-package-desc requirejs-mode (20130215 1304) "Improved AMD module management" nil single "melpa" nil nil nil] [cl-struct-package-desc requirejs-mode (1 1) "Improved AMD module management" nil single "marmalade" nil nil nil])
  (smart-window [cl-struct-package-desc smart-window (20130214 1142) "vim-like window controlling plugin" nil single "melpa" nil nil nil] [cl-struct-package-desc smart-window (0 6) "vim-like window controlling plugin" nil single "marmalade" nil nil nil])
  (hive [cl-struct-package-desc hive (20131217 712) "Hive SQL mode extension" ((sql (3 0))) single "melpa" nil nil nil] [cl-struct-package-desc hive (0 1 1) "Hive SQL mode extension" ((sql (3 0))) single "marmalade" nil nil nil])
  (vertica [cl-struct-package-desc vertica (20131217 711) "Vertica SQL mode extension" ((sql (3 0))) single "melpa" nil nil nil] [cl-struct-package-desc vertica (0 1 0) "Vertica SQL mode extension" ((sql (3 0))) single "marmalade" nil nil nil])
  (tagedit [cl-struct-package-desc tagedit (20130816 510) "Some paredit-like features for html-mode" ((s (1 3 1)) (dash (1 0 3))) single "melpa" nil nil nil] [cl-struct-package-desc tagedit (1 4 0) "Some paredit-like features for html-mode" ((s (1 3 1)) (dash (1 0 3))) single "marmalade" nil nil nil])
  (inline-crypt [cl-struct-package-desc inline-crypt (20130409 507) "Simple inline encryption via openssl" nil tar "melpa" nil nil nil] [cl-struct-package-desc inline-crypt (0 1 4) "Simple inline encryption via openssl" nil tar "marmalade" nil nil nil])
  (world-time-mode [cl-struct-package-desc world-time-mode (20140204 750) "show whole days of world-time diffs" nil single "melpa" nil nil nil] [cl-struct-package-desc world-time-mode (0 0 2) "show whole days of world-time diffs" nil single "marmalade" nil nil nil])
  (evil [cl-struct-package-desc evil (20140228 248) "Extensible Vi layer for Emacs." ((undo-tree (0 6 3)) (goto-chg (1 6))) tar "melpa" nil nil nil] [cl-struct-package-desc evil (1 0 8) "Extensible Vi layer for Emacs." ((undo-tree (0 6 3)) (goto-last-change (1 2))) tar "marmalade" nil nil nil])
  (rbenv [cl-struct-package-desc rbenv (20140108 0) "Emacs integration for rbenv" nil single "melpa" nil nil nil] [cl-struct-package-desc rbenv (0 0 3) "Emacs integration for rbenv" nil single "marmalade" nil nil nil])
  (sequence [cl-struct-package-desc sequence (0 0 1) "makes sequences of numbers -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (gnomenm [cl-struct-package-desc gnomenm (20140308 938) "Emacs interface to Gnome nmcli command" ((s (1 9 0)) (dash (2 3 0)) (kv (0 0 19))) single "melpa" nil nil nil] [cl-struct-package-desc gnomenm (0 0 3) "Emacs interface to Gnome nmcli command" nil single "marmalade" nil nil nil])
  (nimrod-mode [cl-struct-package-desc nimrod-mode (20110125 1504) "A major mode for the Nimrod programming language" nil single "melpa" nil nil nil] [cl-struct-package-desc nimrod-mode (0 1 5) "A major mode for the Nimrod programming language" ((auto-complete (1 4))) single "marmalade" nil nil nil])
  (ag [cl-struct-package-desc ag (20140308 239) "A front-end for ag ('the silver searcher'), the C ack replacement." nil single "melpa" nil nil nil] [cl-struct-package-desc ag (0 36) "A front-end for ag ('the silver searcher'), the C ack replacement." nil single "marmalade" nil nil nil])
  (nemerle [cl-struct-package-desc nemerle (20130328 746) "major mode for editing nemerle programs" nil single "melpa" nil nil nil] [cl-struct-package-desc nemerle (0 2) "major mode for editing nemerle programs" nil single "marmalade" nil nil nil])
  (clj-refactor [cl-struct-package-desc clj-refactor (20140309 108) "A collection of clojure refactoring functions" ((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2))) single "melpa" nil nil nil] [cl-struct-package-desc clj-refactor (0 10 0) "A collection of clojure refactoring functions" ((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2))) single "marmalade" nil nil nil])
  (kwin [cl-struct-package-desc kwin (20130206 2231) "communcate with the KWin window manager" nil single "melpa" nil nil nil] [cl-struct-package-desc kwin (0 1) "communcate with the KWin window manager" nil single "marmalade" nil nil nil])
  (kpm-list [cl-struct-package-desc kpm-list (20130131 148) "An emacs buffer list that tries to intelligently group together buffers." nil single "melpa" nil nil nil] [cl-struct-package-desc kpm-list (1 0) "An emacs buffer list that tries to intelligently group together buffers." nil single "marmalade" nil nil nil])
  (aes [cl-struct-package-desc aes (20130120 1913) "Implementation of AES" nil single "melpa" nil nil nil] [cl-struct-package-desc aes (0 5) "Implementation of AES" nil single "marmalade" nil nil nil])
  (hlinum [cl-struct-package-desc hlinum (20140107 220) "Extension for linum.el to highlight current line number" ((cl-lib (0 2))) single "melpa" nil nil nil] [cl-struct-package-desc hlinum (1 0) "Extension for linum.el to highlight current line number" nil single "marmalade" nil nil nil])
  (buffer-stack [cl-struct-package-desc buffer-stack (20101223 1020) "Enhanced intelligent switch-to-other-buffer replacement." nil single "melpa" nil nil nil] [cl-struct-package-desc buffer-stack (1 5) "Enhanced intelligent switch-to-other-buffer replacement." nil single "marmalade" nil nil nil])
  (spotify [cl-struct-package-desc spotify (20130520 258) "Control the spotify application from emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc spotify (0 2) "Control the spotify application from emacs" nil single "marmalade" nil nil nil])
  (hardcore-mode [cl-struct-package-desc hardcore-mode (20111204 2216) "Disable arrow keys + optionally backspace and return" nil single "melpa" nil nil nil] [cl-struct-package-desc hardcore-mode (1 0 0) "Disable arrow keys + optionally backspace and return" nil single "marmalade" nil nil nil])
  (adoc-mode [cl-struct-package-desc adoc-mode (20130917 0) "a major-mode for editing AsciiDoc files in Emacs" ((markup-faces (1 0 0))) single "melpa" nil nil nil] [cl-struct-package-desc adoc-mode (0 6 2) "a major-mode for editing AsciiDoc files in Emacs" ((markup-faces (1 0 0))) single "marmalade" nil nil nil])
  (flymake-json [cl-struct-package-desc flymake-json (20130423 2357) "A flymake handler for json using jsonlint" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-json (0 1) "A flymake handler for json using jsonlint" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (markup-faces [cl-struct-package-desc markup-faces (20130117 246) "collection of faces for markup language modes" nil single "melpa" nil nil nil] [cl-struct-package-desc markup-faces (1 0 0) "collection of faces for markup language modes" nil single "marmalade" nil nil nil])
  (bbcode-mode [cl-struct-package-desc bbcode-mode (20130227 1137) "Major mode for writing BBCode markup" nil single "melpa" nil nil nil] [cl-struct-package-desc bbcode-mode (1 1 0) "Major mode for writing BBCode markup" nil single "marmalade" nil nil nil])
  (tup-mode [cl-struct-package-desc tup-mode (20131009 2213) "Major mode for editing files for Tup" nil single "melpa" nil nil nil] [cl-struct-package-desc tup-mode (1 2) "Major mode for editing files for Tup" nil single "marmalade" nil nil nil])
  (pov-mode [cl-struct-package-desc pov-mode (20120825 716) "Major mode for editing POV-Ray scene files." nil tar "melpa" nil nil nil] [cl-struct-package-desc pov-mode (3 3) "Major mode for editing POV-Ray scene files." nil tar "marmalade" nil nil nil])
  (simple-mode-line [cl-struct-package-desc simple-mode-line (0 3) "Simplified Mode Line for Emacs 24" nil single "marmalade" nil nil nil])
  (dropbox [cl-struct-package-desc dropbox (20130513 1537) "Emacs backend for dropbox" ((json (1 2)) (oauth (1 0 3))) single "melpa" nil nil nil] [cl-struct-package-desc dropbox (0 9 1) "Emacs backend for dropbox" ((json (1 2)) (oauth (1 0 3))) single "marmalade" nil nil nil])
  (robe [cl-struct-package-desc robe (20140308 2253) "Code navigation, documentation lookup and completion for Ruby" ((inf-ruby (2 3 0))) tar "melpa" nil nil nil] [cl-struct-package-desc robe (0 7 7) "Code navigation, documentation lookup and completion for Ruby" ((inf-ruby (2 3 0))) tar "marmalade" nil nil nil])
  (evil-nerd-commenter [cl-struct-package-desc evil-nerd-commenter (20140204 1713) "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" nil tar "melpa" nil nil nil] [cl-struct-package-desc evil-nerd-commenter (1 2 8) "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" nil tar "marmalade" nil nil nil])
  (evil-paredit [cl-struct-package-desc evil-paredit (20130408 47) "Paredit support for evil keybindings" ((evil (0 0 0)) (paredit (1))) single "melpa" nil nil nil] [cl-struct-package-desc evil-paredit (0 0 1) "Paredit support for evil keybindings" ((evil (0 0 0)) (paredit (1))) single "marmalade" nil nil nil])
  (creole-mode [cl-struct-package-desc creole-mode (20130721 1750) "a markup mode for creole" nil single "melpa" nil nil nil] [cl-struct-package-desc creole-mode (0 0 5) "a markup mode for creole" nil single "marmalade" nil nil nil])
  (late-night-theme [cl-struct-package-desc late-night-theme (0 0) "Late Night theme for Emacs 24" nil single "marmalade" nil nil nil])
  (slamhound [cl-struct-package-desc slamhound (20131107 927) "Rip Clojure namespaces apart and rebuild them." nil single "melpa" nil nil nil] [cl-struct-package-desc slamhound (2 0 0) "Rip Clojure namespaces apart and rebuild them." nil single "marmalade" nil nil nil])
  (hippie-expand-haskell [cl-struct-package-desc hippie-expand-haskell (0 0 1) "Hippie expand try function using ghc's completion function." nil single "marmalade" nil nil nil])
  (el-x [cl-struct-package-desc el-x (20140111 1401) "main entry point for el-x package" nil tar "melpa" nil nil nil] [cl-struct-package-desc el-x (0 3 0) "Emacs-lisp extensions." ((cl-lib (0 2))) tar "marmalade" nil nil nil])
  (db-pg [cl-struct-package-desc db-pg (20130131 1102) "A PostgreSQL adapter for emacs-db" ((pg (0 12)) (db (0 0 6))) single "melpa" nil nil nil] [cl-struct-package-desc db-pg (0 0 3) "A PostgreSQL adapter for emacs-db" ((pg (0 12)) (db (0 0 6))) single "marmalade" nil nil nil])
  (pg [cl-struct-package-desc pg (20130731 1442) "Emacs Lisp interface to the PostgreSQL RDBMS" nil single "melpa" nil nil nil] [cl-struct-package-desc pg (0 12) "Emacs Lisp interface to the PostgreSQL RDBMS" nil single "marmalade" nil nil nil])
  (subshell-proc [cl-struct-package-desc subshell-proc (20130122 1322) "Functions for working with comints" nil single "melpa" nil nil nil] [cl-struct-package-desc subshell-proc (0 2) "Functions for working with comints" nil single "marmalade" nil nil nil])
  (fold-this [cl-struct-package-desc fold-this (20131113 247) "Just fold this region please" nil single "melpa" nil nil nil] [cl-struct-package-desc fold-this (0 1 0) "Just fold this region please" nil single "marmalade" nil nil nil])
  (sudden-death [cl-struct-package-desc sudden-death (20121218 549) "Totsuzen-no-Shi" nil single "melpa" nil nil nil] [cl-struct-package-desc sudden-death (0 2) "Totsuzen-no-Shi" nil single "marmalade" nil nil nil])
  (wxwidgets-help [cl-struct-package-desc wxwidgets-help (0 0 3) "Look up wxWidgets API by using local html manual." nil tar "marmalade" nil nil nil])
  (extend-dnd [cl-struct-package-desc extend-dnd (20130328 1034) "R drag and Drop" nil tar "melpa" nil nil nil] [cl-struct-package-desc extend-dnd (0 5) "R drag and Drop" nil single "marmalade" nil nil nil])
  (diatheke [cl-struct-package-desc diatheke (1 0) "A minor mode using the diatheke command-line Bible tool" nil single "marmalade" nil nil nil])
  (gplusify [cl-struct-package-desc gplusify (20121211 522) "Add Google Plus markup to a piece of code" nil single "melpa" nil nil nil] [cl-struct-package-desc gplusify (1 0) "Add Google Plus markup to a piece of code" nil single "marmalade" nil nil nil])
  (systemtap-mode [cl-struct-package-desc systemtap-mode (20121209 1510) "A mode for SystemTap" nil single "melpa" nil nil nil] [cl-struct-package-desc systemtap-mode (0 2) "A mode for SystemTap" nil single "marmalade" nil nil nil])
  (color-theme-x [cl-struct-package-desc color-theme-x (1 3) "convert color themes to X11 resource settings" nil single "marmalade" nil nil nil])
  (huskie [cl-struct-package-desc huskie (0 0 2) "chainsaw powered logging" ((anaphora (0 0 6))) single "marmalade" nil nil nil])
  (parenface-plus [cl-struct-package-desc parenface-plus (1 1) "Provide a face for parens in lispy modes." nil tar "marmalade" nil nil nil])
  (sql-indent [cl-struct-package-desc sql-indent (20090325 2254) "indentation of SQL statements" nil single "melpa" nil nil nil] [cl-struct-package-desc sql-indent (1 10) "indentation of SQL statements" nil single "marmalade" nil nil nil])
  (otter-mode [cl-struct-package-desc otter-mode (20121202 903) "Major mode for source files of the Otter automated theorem prover" nil single "melpa" nil nil nil] [cl-struct-package-desc otter-mode (1 2) "Major mode for source files of the Otter automated theorem prover" nil single "marmalade" nil nil nil])
  (wgrep-helm [cl-struct-package-desc wgrep-helm (20121201 530) "Writable helm-grep-mode buffer and apply the changes to files" ((wgrep (2 1 1))) single "melpa" nil nil nil] [cl-struct-package-desc wgrep-helm (0 1 0) "Writable helm-grep-mode buffer and apply the changes to files" ((wgrep (2 1 1))) single "marmalade" nil nil nil])
  (let-recur [cl-struct-package-desc let-recur (0 0 5) "Simplified implementation of recur -*- lexical-binding:t -*-" nil single "marmalade" nil nil nil])
  (iedit [cl-struct-package-desc iedit (20131021 116) "Edit multiple regions in the same way simultaneously." nil tar "melpa" nil nil nil] [cl-struct-package-desc iedit (0 97) "Edit multiple regions in the same way simultaneously." nil tar "marmalade" nil nil nil])
  (circe [cl-struct-package-desc circe (20131210 409) "Client for IRC in Emacs" ((lui (0)) (lcs (0))) tar "melpa" nil nil nil] [cl-struct-package-desc circe (1 3) "Client for IRC in Emacs" ((lui (1 3)) (lcs (1 1))) tar "marmalade" nil nil nil])
  (lui [cl-struct-package-desc lui (20131201 620) "Linewise User Interface" ((tracking (0))) tar "melpa" nil nil nil] [cl-struct-package-desc lui (1 3) "Linewise User Interface" ((tracking (1 4))) tar "marmalade" nil nil nil])
  (tracking [cl-struct-package-desc tracking (20131201 620) "Buffer modification tracking" ((shorten (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc tracking (1 4) "Buffer modification tracking" ((shorten (0 3))) single "marmalade" nil nil nil])
  (lcs [cl-struct-package-desc lcs (20121201 555) "find out the longest common sequence" nil single "melpa" nil nil nil] [cl-struct-package-desc lcs (1 1) "find out the longest common sequence" nil single "marmalade" nil nil nil])
  (bufshow [cl-struct-package-desc bufshow (20130711 1039) "A simple presentation tool for Emacs." ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc bufshow (0 1 0) "A simple presentation tool for Emacs." nil tar "marmalade" nil nil nil])
  (simpleclip [cl-struct-package-desc simpleclip (20131106 706) "Simplified access to the system clipboard" nil single "melpa" nil nil nil] [cl-struct-package-desc simpleclip (1 0 0) "Simplified access to the system clipboard" nil single "marmalade" nil nil nil])
  (grr [cl-struct-package-desc grr (1 0 0) "Simple Growl notifications for Emacs and Mac OS X" nil single "marmalade" nil nil nil])
  (ercn [cl-struct-package-desc ercn (20121230 1013) "Flexible ERC notifications" nil single "melpa" nil nil nil] [cl-struct-package-desc ercn (1 0 2) "Flexible ERC notifications" nil single "marmalade" nil nil nil])
  (session-manager [cl-struct-package-desc session-manager (0 5) "Support for the Gnome Session Manager" nil single "marmalade" nil nil nil])
  (chicken-scheme [cl-struct-package-desc chicken-scheme (20131116 1228) "Scheme-mode extensions for Chicken Scheme" nil single "melpa" nil nil nil] [cl-struct-package-desc chicken-scheme (1 1 0) "Scheme-mode extensions for Chicken Scheme" nil single "marmalade" nil nil nil])
  (multi-web-mode [cl-struct-package-desc multi-web-mode (20130823 2054) "multiple major mode support for web editing" nil tar "melpa" nil nil nil] [cl-struct-package-desc multi-web-mode (0 1) "multiple major mode support for web editing" nil single "marmalade" nil nil nil])
  (pod-mode [cl-struct-package-desc pod-mode (20121117 2120) "Major mode for editing .pod-files." nil tar "marmalade" nil nil nil])
  (tt-mode [cl-struct-package-desc tt-mode (20130804 410) "Emacs major mode for editing Template Toolkit files." nil single "melpa" nil nil nil] [cl-struct-package-desc tt-mode (20121117 2045) "Emacs major mode for editing Template Toolkit files." nil tar "marmalade" nil nil nil])
  (pde [cl-struct-package-desc pde (0 2 16) "Perl Development Environment" nil tar "marmalade" nil nil nil])
  (elpa-audit [cl-struct-package-desc elpa-audit (20131230 1344) "Handy functions for inspecting and comparing package archives" nil single "melpa" nil nil nil] [cl-struct-package-desc elpa-audit (0 4) "Handy functions for inspecting and comparing package archives" nil single "marmalade" nil nil nil])
  (osx-location [cl-struct-package-desc osx-location (20130907 133) "Watch and respond to changes in geographical location on OS X" nil tar "melpa" nil nil nil] [cl-struct-package-desc osx-location (0 2) "Watch and respond to changes in geographical location on OS X" nil tar "marmalade" nil nil nil])
  (ace-jump-mode [cl-struct-package-desc ace-jump-mode (20140207 530) "a quick cursor location minor mode for emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc ace-jump-mode (2 0 0 0) "a quick cursor location minor mode for emacs -*- coding: utf-8-unix -*-" nil single "marmalade" nil nil nil])
  (elpy [cl-struct-package-desc elpy (20140213 1028) "Emacs Python Development Environment" ((auto-complete (1 4)) (find-file-in-project (3 2)) (fuzzy (0 1)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (iedit (0 97)) (nose (0 1 1)) (pyvenv (1 0)) (yasnippet (0 8 0))) tar "melpa" nil nil nil] [cl-struct-package-desc elpy (1 2 1) "Emacs Python Development Environment" ((auto-complete (1 4)) (find-file-in-project (3 2)) (fuzzy (0 1)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (iedit (0 97)) (nose (0 1 1)) (virtualenv (1 2)) (yasnippet (0 8 0))) tar "marmalade" nil nil nil])
  (paredit-menu [cl-struct-package-desc paredit-menu (20130923 1254) "Adds a menu to paredit.el as memory aid" nil single "melpa" nil nil nil] [cl-struct-package-desc paredit-menu (1 0) "Adds a menu to paredit.el as memory aid" nil single "marmalade" nil nil nil])
  (page-break-lines [cl-struct-package-desc page-break-lines (20140128 1017) "Display ugly ^L page breaks as tidy horizontal lines" nil single "melpa" nil nil nil] [cl-struct-package-desc page-break-lines (0 9) "Display ugly ^L page breaks as tidy horizontal lines" nil single "marmalade" nil nil nil])
  (find-file-in-repository [cl-struct-package-desc find-file-in-repository (20130221 511) "Quickly find files in a git, mercurial or other repository" nil single "melpa" nil nil nil] [cl-struct-package-desc find-file-in-repository (1 3) "Quickly find files in a git, mercurial or other repository" nil single "marmalade" nil nil nil])
  (pyvirtualenv [cl-struct-package-desc pyvirtualenv (1 1) "Python Pyvirtualenv support" nil single "marmalade" nil nil nil])
  (flymake-python-pyflakes [cl-struct-package-desc flymake-python-pyflakes (20131127 6) "A flymake handler for python-mode files using pyflakes (or flake8)" ((flymake-easy (0 8))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-python-pyflakes (0 9) "A flymake handler for python-mode files using pyflakes (or flake8)" ((flymake-easy (0 8))) single "marmalade" nil nil nil])
  (skinny [cl-struct-package-desc skinny (0 0 6) "a blog engine with elnode -*- lexical-binding: t -*-" ((elnode (0 9 9 6 1)) (creole (0 8 17))) single "marmalade" nil nil nil])
  (seclusion-mode [cl-struct-package-desc seclusion-mode (1 1 1) "Edit in seclusion. A Dark Room mode." nil single "marmalade" nil nil nil])
  (flymake-easy [cl-struct-package-desc flymake-easy (20130907 131) "Helpers for easily building flymake checkers" nil single "melpa" nil nil nil] [cl-struct-package-desc flymake-easy (0 9) "Helpers for easily building flymake checkers" nil single "marmalade" nil nil nil])
  (qsimpleq-theme [cl-struct-package-desc qsimpleq-theme (0 1 3) "Based on solarized color theme for Emacs." nil single "marmalade" nil nil nil])
  (macrostep [cl-struct-package-desc macrostep (20131219 1002) "interactive macro stepper for Emacs Lisp" nil single "melpa" nil nil nil] [cl-struct-package-desc macrostep (0 6) "interactive macro stepper for Emacs Lisp" nil single "marmalade" nil nil nil])
  (bug-reference-github [cl-struct-package-desc bug-reference-github (20131202 1303) "Automatically set `bug-reference-url-format' in Github repositories." nil tar "melpa" nil nil nil] [cl-struct-package-desc bug-reference-github (0 2 0) "Automatically set `bug-reference-url-format' in Github repositories." nil single "marmalade" nil nil nil])
  (elpakit [cl-struct-package-desc elpakit (1 0 7) "package archive builder" ((anaphora (0 0 6)) (dash (1 0 3))) single "marmalade" nil nil nil])
  (syntactic-sugar [cl-struct-package-desc syntactic-sugar (20131106 706) "Effect-free forms such as if/then/else" nil single "melpa" nil nil nil] [cl-struct-package-desc syntactic-sugar (0 9 4) "Effect-free forms such as if/then/else" nil single "marmalade" nil nil nil])
  (truthy [cl-struct-package-desc truthy (20131106 706) "Test the content of a value" ((list-utils (0 4 2))) single "melpa" nil nil nil] [cl-struct-package-desc truthy (0 2 8) "Test the content of a value" ((list-utils (0 4 2))) single "marmalade" nil nil nil])
  (zjl-hl [cl-struct-package-desc zjl-hl (20121028 1901) "Highlight variable and function call and others in c/emacs, make life easy." ((highlight (21 0)) (region-list-edit (20100530 808))) single "marmalade" nil nil nil])
  (region-list-edit [cl-struct-package-desc region-list-edit (20100530 808) "Add/delete a region into/from a region list, such as \342\200\230((4 . 7) (11 . 15) (17 . 17) (20 . 25))." nil single "marmalade" nil nil nil])
  (highlight [cl-struct-package-desc highlight (20140226 2107) "Highlighting commands." nil single "melpa" nil nil nil] [cl-struct-package-desc highlight (21 0) "Highlighting commands." nil single "marmalade" nil nil nil])
  (octomacs [cl-struct-package-desc octomacs (20130919 1915) "Octopress interface for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc octomacs (0 0 1) "Octopress interface for Emacs" nil single "marmalade" nil nil nil])
  (inform-mode [cl-struct-package-desc inform-mode (1 6 2) "Major mode for Inform 6 interactive fiction code" nil single "marmalade" nil nil nil])
  (dash [cl-struct-package-desc dash (20140308 656) "A modern list library for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc dash (2 5 0) "A modern list library for Emacs" nil single "marmalade" nil nil nil])
  (flymake-lua [cl-struct-package-desc flymake-lua (20140310 230) "Flymake for Lua" nil single "melpa" nil nil nil] [cl-struct-package-desc flymake-lua (1 0) "Flymake for Lua" nil single "marmalade" nil nil nil])
  (wgrep-ack [cl-struct-package-desc wgrep-ack (20121201 530) "Writable ack-and-a-half buffer and apply the changes to files" ((wgrep (2 1 1))) single "melpa" nil nil nil] [cl-struct-package-desc wgrep-ack (0 1 1) "Writable ack-and-a-half buffer and apply the changes to files" ((wgrep (2 1 1))) single "marmalade" nil nil nil])
  (roy-mode [cl-struct-package-desc roy-mode (20121208 358) "Roy major mode" nil single "melpa" nil nil nil] [cl-struct-package-desc roy-mode (0 1 0) "Roy major mode" nil single "marmalade" nil nil nil])
  (bang [cl-struct-package-desc bang (0 1 0) "A modern list library for Emacs" nil single "marmalade" nil nil nil])
  (namakemono [cl-struct-package-desc namakemono (0 0 1) "utility function set for namakemono" nil single "marmalade" nil nil nil])
  (visible-color-code [cl-struct-package-desc visible-color-code (0 0 1) "color code strings in current buffer, this elisp show you one as real color." nil single "marmalade" nil nil nil])
  (config-block [cl-struct-package-desc config-block (0 0 1) "config-block is utility for individual settings (e.g. .emacs)." nil single "marmalade" nil nil nil])
  (vector-utils [cl-struct-package-desc vector-utils (20131106 706) "Vector-manipulation utility functions" nil single "melpa" nil nil nil] [cl-struct-package-desc vector-utils (0 1 2) "Vector-manipulation utility functions" nil single "marmalade" nil nil nil])
  (cljsbuild-mode [cl-struct-package-desc cljsbuild-mode (20130110 732) "A minor mode for the ClojureScript 'lein cljsbuild' command" nil single "melpa" nil nil nil] [cl-struct-package-desc cljsbuild-mode (0 2 0) "A minor mode for the ClojureScript 'lein cljsbuild' command" nil single "marmalade" nil nil nil])
  (osx-browse [cl-struct-package-desc osx-browse (20131106 706) "Web browsing helpers for OS X" ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) single "melpa" nil nil nil] [cl-struct-package-desc osx-browse (0 8 8) "Web browsing helpers for OS X" ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) single "marmalade" nil nil nil])
  (smart-forward [cl-struct-package-desc smart-forward (20130205 452) "Semantic navigatioin" ((expand-region (0 8 0))) single "melpa" nil nil nil] [cl-struct-package-desc smart-forward (1 0 0) "Semantic navigatioin" ((expand-region (0 8 0))) single "marmalade" nil nil nil])
  (livescript-mode [cl-struct-package-desc livescript-mode (20131206 2300) "Major mode for editing LiveScript files" nil single "melpa" nil nil nil] [cl-struct-package-desc livescript-mode (0 0 1) "Major mode for LiveScript files in Emacs" nil single "marmalade" nil nil nil])
  (findr [cl-struct-package-desc findr (20130824 1207) "Breadth-first file-finding facility for (X)Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc findr (0 7) "Breadth-first file-finding facility for (X)Emacs" nil single "marmalade" nil nil nil])
  (inflections [cl-struct-package-desc inflections (20121016 157) "convert english words between singular and plural" nil single "melpa" nil nil nil] [cl-struct-package-desc inflections (1 1) "convert english words between singular and plural" nil single "marmalade" nil nil nil])
  (hideshowvis [cl-struct-package-desc hideshowvis (0 5) "Add markers to the fringe for regions foldable by hideshow.el" nil single "marmalade" nil nil nil])
  (mote-mode [cl-struct-package-desc mote-mode (20121014 2119) "Mote minor mode" ((ruby-mode (1 1))) single "melpa" nil nil nil] [cl-struct-package-desc mote-mode (1 0 0) "Mote minor mode" ((ruby-mode (1 1))) single "marmalade" nil nil nil])
  (gitty [cl-struct-package-desc gitty (20121014 742) "vc-mode extension for fast git interaction" nil single "melpa" nil nil nil] [cl-struct-package-desc gitty (1 0) "vc-mode extension for fast git interaction" nil single "marmalade" nil nil nil])
  (combinators [cl-struct-package-desc combinators (0 0 1) "-*- lexical-binding: t; -*-" nil single "marmalade" nil nil nil])
  (cmake-project [cl-struct-package-desc cmake-project (0 7) "Integrates CMake build process with Emacs" nil single "marmalade" nil nil nil])
  (flymake-go [cl-struct-package-desc flymake-go (20130314 741) "A flymake handler for go-mode files" ((flymake (0 4 13))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-go (2013 3 14) "A flymake handler for go-mode files" ((flymake (0 4 13))) single "marmalade" nil nil nil])
  (smooth-scrolling [cl-struct-package-desc smooth-scrolling (20131219 2039) "Make emacs scroll smoothly" nil single "melpa" nil nil nil] [cl-struct-package-desc smooth-scrolling (1 0 1) "Make emacs scroll smoothly" nil single "marmalade" nil nil nil])
  (save-packages [cl-struct-package-desc save-packages (0 20121012) "save and restore installed packages" nil single "marmalade" nil nil nil])
  (hardhat [cl-struct-package-desc hardhat (20131125 1143) "Protect against clobbering user-writable files" ((ignoramus (0 7 0))) single "melpa" nil nil nil] [cl-struct-package-desc hardhat (0 4 2) "Protect against clobbering user-writable files" ((ignoramus (0 7 0))) single "marmalade" nil nil nil])
  (flymake-checkers [cl-struct-package-desc flymake-checkers (0 2) "Flymake reloaded with useful checkers" nil single "marmalade" nil nil nil])
  (ws-trim [cl-struct-package-desc ws-trim (1 4) "Tools and minor mode to trim whitespace on text lines" nil single "marmalade" nil nil nil])
  (typo [cl-struct-package-desc typo (20130323 340) "Minor mode for typographic editing" nil single "melpa" nil nil nil] [cl-struct-package-desc typo (1 1) "Minor mode for typographic editing" nil single "marmalade" nil nil nil])
  (gitignore-mode [cl-struct-package-desc gitignore-mode (20131222 833) "Major mode for editing .gitignore files" nil single "melpa" nil nil nil] [cl-struct-package-desc gitignore-mode (0 1) "Major mode for editing .gitconfig files" nil single "marmalade" nil nil nil])
  (text-language [cl-struct-package-desc text-language (0 20121008) "tracking, setting, guessing language of text" nil single "marmalade" nil nil nil])
  (notmuch-labeler [cl-struct-package-desc notmuch-labeler (20131230 919) "Improve notmuch way of displaying labels" ((notmuch (0))) tar "melpa" nil nil nil] [cl-struct-package-desc notmuch-labeler (0 1) "Improves notmuch way of displaying labels through fonts, pictures, and hyperlinks." nil tar "marmalade" nil nil nil])
  (db [cl-struct-package-desc db (20130125 1029) "A database for EmacsLisp" ((kv (0 0 11))) single "melpa" nil nil nil] [cl-struct-package-desc db (0 0 6) "A database for EmacsLisp  -*- lexical-binding: t -*-" ((kv (0 0 11))) single "marmalade" nil nil nil])
  (git-commit-mode [cl-struct-package-desc git-commit-mode (20140305 540) "Major mode for editing git commit messages" nil single "melpa" nil nil nil] [cl-struct-package-desc git-commit-mode (0 13) "Major mode for editing git commit messages -*- lexical-binding: t; -*-" nil single "marmalade" nil nil nil])
  (sprintly-mode [cl-struct-package-desc sprintly-mode (20121005 2234) "Major mode for dealing with sprint.ly" ((furl (0 0 2))) single "melpa" nil nil nil] [cl-struct-package-desc sprintly-mode (0 0 4) "Major mode for dealing with sprint.ly" ((furl (0 0 2))) single "marmalade" nil nil nil])
  (s [cl-struct-package-desc s (20131223 944) "The long lost Emacs string manipulation library." nil single "melpa" nil nil nil] [cl-struct-package-desc s (1 9 0) "The long lost Emacs string manipulation library." nil single "marmalade" nil nil nil])
  (pretty-mode-plus [cl-struct-package-desc pretty-mode-plus (1 0) "Redisplay parts of the buffer as pretty symbols." nil tar "marmalade" nil nil nil])
  (hide-comnt [cl-struct-package-desc hide-comnt (20140206 1830) "Hide/show comments in code." nil single "melpa" nil nil nil] [cl-struct-package-desc hide-comnt (40) "Hide/show comments in code." nil tar "marmalade" nil nil nil])
  (esk [cl-struct-package-desc esk (0 1) "Emacs Search Kit - An easy way to find files and/or strings in a project" nil tar "marmalade" nil nil nil])
  (org-ehtml [cl-struct-package-desc org-ehtml (20140118 1314) "Export Org-mode files as editable web pages" ((web-server (20140109 2200)) (emacs (24 3))) tar "melpa" nil nil nil] [cl-struct-package-desc org-ehtml (0 20131014) "Export Org-mode files as editable web pages" ((elnode (20130416 1626)) (org-plus-contrib (20131007))) tar "marmalade" nil nil nil])
  (hackernews [cl-struct-package-desc hackernews (20131018 2207) "Access the hackernews aggregator from Emacs" ((json (1 2))) tar "melpa" nil nil nil] [cl-struct-package-desc hackernews (0 1) "Access the hackernews aggregator from Emacs" ((json (1 2))) tar "marmalade" nil nil nil])
  (plantuml-mode [cl-struct-package-desc plantuml-mode (20131031 1632) "Major mode for plantuml" ((auto-complete (1 4))) single "melpa" nil nil nil] [cl-struct-package-desc plantuml-mode (0 2) "Major mode for plantuml" nil single "marmalade" nil nil nil])
  (rcirc-robots [cl-struct-package-desc rcirc-robots (0 0 7) "robots based on rcirc irc -*- lexical-binding: t -*-" ((kv (0 0 8)) (anaphora (0 0 5))) single "marmalade" nil nil nil])
  (font-utils [cl-struct-package-desc font-utils (20131106 706) "Utility functions for working with fonts" ((persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc font-utils (0 7 0) "Utility functions for working with fonts" ((persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (eshell-manual [cl-struct-package-desc eshell-manual (0 0 2) "An updated manual for Eshell." nil tar "marmalade" nil nil nil])
  (pcre2el [cl-struct-package-desc pcre2el (20140215 1048) "parse, convert, and font-lock PCRE, Emacs and rx regexps" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc pcre2el (1 5) "parse, convert, and font-lock PCRE, Emacs and rx regexps" ((cl-lib (0 3))) single "marmalade" nil nil nil])
  (multiple-cursors [cl-struct-package-desc multiple-cursors (20140105 259) "Multiple cursors for Emacs." nil tar "melpa" nil nil nil] [cl-struct-package-desc multiple-cursors (1 3 0) "Multiple cursors for Emacs." nil tar "marmalade" nil nil nil])
  (shoes-off [cl-struct-package-desc shoes-off (0 1 8) "irc bouncer" ((kv (0 0 5)) (anaphora (0 0 4))) single "marmalade" nil nil nil])
  (margo [cl-struct-package-desc margo (2012 9 18) "Client for MarGo, providing Go utilities" ((web (0 1 8)) (json (1 2))) single "marmalade" nil nil nil])
  (list-utils [cl-struct-package-desc list-utils (20131106 706) "List-manipulation utility functions" nil single "melpa" nil nil nil] [cl-struct-package-desc list-utils (0 4 2) "List-manipulation utility functions" nil single "marmalade" nil nil nil])
  (yagist [cl-struct-package-desc yagist (20140117 307) "Yet Another Emacs integration for gist.github.com" ((json (1 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc yagist (0 8 6) "Yet Another Emacs integration for gist.github.com" ((json (1 2 0))) single "marmalade" nil nil nil])
  (go-play [cl-struct-package-desc go-play (20120914 1248) "Paste to play.golang.org" nil single "melpa" nil nil nil] [cl-struct-package-desc go-play (0 0 1) "Paste to play.golang.org" nil single "marmalade" nil nil nil])
  (rcirc-ssh [cl-struct-package-desc rcirc-ssh (0 0 7) "do irc over ssh sessions -*- lexical-binding: t -*-" ((kv (0 0 3))) single "marmalade" nil nil nil])
  (exec-path-from-shell [cl-struct-package-desc exec-path-from-shell (20140219 104) "Get environment variables such as $PATH from the shell" nil single "melpa" nil nil nil] [cl-struct-package-desc exec-path-from-shell (1 7) "Get environment variables such as $PATH from the shell" nil single "marmalade" nil nil nil])
  (anaphora [cl-struct-package-desc anaphora (20131022 450) "anaphoric macros providing implicit temp variables" nil single "melpa" nil nil nil] [cl-struct-package-desc anaphora (1 0 0) "anaphoric macros providing implicit temp variables" nil single "marmalade" nil nil nil])
  (pcmpl-args [cl-struct-package-desc pcmpl-args (20120911 2224) "Enhanced shell command completion" nil single "melpa" nil nil nil] [cl-struct-package-desc pcmpl-args (0 1 1) "Enhanced shell command completion    -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (uuid [cl-struct-package-desc uuid (20120910 151) "UUID's for EmacsLisp" nil single "melpa" nil nil nil] [cl-struct-package-desc uuid (0 0 3) "UUID's for EmacsLisp" nil single "marmalade" nil nil nil])
  (tumblesocks [cl-struct-package-desc tumblesocks (20140215 1247) "An Emacs tumblr client." ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) tar "melpa" nil nil nil] [cl-struct-package-desc tumblesocks (0 0 7) "An Emacs tumblr client." ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) tar "marmalade" nil nil nil])
  (oauth [cl-struct-package-desc oauth (20130127 1751) "Oauth library." nil tar "melpa" nil nil nil] [cl-struct-package-desc oauth (1 0 3) "An Emacs oauth client. See https://github.com/psanford/emacs-oauth/" nil tar "marmalade" nil nil nil])
  (lisp-editing [cl-struct-package-desc lisp-editing (0 0 5) "lisp editing tools" nil single "marmalade" nil nil nil])
  (kv [cl-struct-package-desc kv (20140108 734) "key/value data structure functions" nil single "melpa" nil nil nil] [cl-struct-package-desc kv (0 0 19) "key/value data structure functions" nil single "marmalade" nil nil nil])
  (fixmee [cl-struct-package-desc fixmee (20131106 706) "Quickly navigate to FIXME notices in code" ((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) single "melpa" nil nil nil] [cl-struct-package-desc fixmee (0 8 4) "Quickly navigate to FIXME notices in code" ((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) single "marmalade" nil nil nil])
  (browse-url-dwim [cl-struct-package-desc browse-url-dwim (20131106 706) "Context-sensitive external browse URL or Internet search" ((string-utils (0 3 2))) single "melpa" nil nil nil] [cl-struct-package-desc browse-url-dwim (0 6 6) "Context-sensitive external browse URL or Internet search" ((string-utils (0 3 2))) single "marmalade" nil nil nil])
  (buffer-utils [cl-struct-package-desc buffer-utils (20131106 706) "Buffer-manipulation utility functions" nil single "melpa" nil nil nil] [cl-struct-package-desc buffer-utils (0 1 0) "Buffer-manipulation utility functions" nil single "marmalade" nil nil nil])
  (flyspell-lazy [cl-struct-package-desc flyspell-lazy (20131106 706) "Improve flyspell responsiveness using idle timers" nil single "melpa" nil nil nil] [cl-struct-package-desc flyspell-lazy (0 6 6) "Improve flyspell responsiveness using idle timers" nil single "marmalade" nil nil nil])
  (ignoramus [cl-struct-package-desc ignoramus (20131230 549) "Ignore backups, build files, et al." nil single "melpa" nil nil nil] [cl-struct-package-desc ignoramus (0 7 0) "Ignore backups, build files, et al." nil single "marmalade" nil nil nil])
  (doctags [cl-struct-package-desc doctags (0 1) "Generation of tags documentation in Doxygen syntax" nil single "marmalade" nil nil nil])
  (nrepl-ritz [cl-struct-package-desc nrepl-ritz (20130516 1039) "nrepl extensions for ritz" ((nrepl (0 1 7)) (fringe-helper (0 1 1))) single "melpa" nil nil nil] [cl-struct-package-desc nrepl-ritz (0 6 0) "nrepl extensions for ritz" ((nrepl (0 1 5))) single "marmalade" nil nil nil])
  (ssh [cl-struct-package-desc ssh (20120904 1342) "Support for remote logins using ssh." nil single "melpa" nil nil nil] [cl-struct-package-desc ssh (1 2) "Support for remote logins using ssh." nil single "marmalade" nil nil nil])
  (applescript-mode [cl-struct-package-desc applescript-mode (20090320 2332) "major mode for editing AppleScript source" nil single "melpa" nil nil nil] [cl-struct-package-desc applescript-mode (1 1) "major mode for editing AppleScript source" nil single "marmalade" nil nil nil])
  (pabbrev [cl-struct-package-desc pabbrev (20130923 1257) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] [cl-struct-package-desc pabbrev (3 1) "Predictive abbreviation expansion" nil single "marmalade" nil nil nil])
  (ecb-snapshot [cl-struct-package-desc ecb-snapshot (20120830) "Emacs Code Browser CVS snapshot" nil tar "marmalade" nil nil nil])
  (unicode-whitespace [cl-struct-package-desc unicode-whitespace (20131122 1001) "teach whitespace-mode about fancy characters" ((ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc unicode-whitespace (0 2 4) "teach whitespace-mode about fancy characters" ((ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (ac-nrepl [cl-struct-package-desc ac-nrepl (20131031 346) "auto-complete sources for Clojure using nrepl completions" ((cider (0 1)) (auto-complete (1 4))) single "melpa" nil nil nil] [cl-struct-package-desc ac-nrepl (0 21) "auto-complete sources for Clojure using nrepl completions" ((cider (0 1)) (auto-complete (1 4))) single "marmalade" nil nil nil])
  (esxml [cl-struct-package-desc esxml (20130512 1547) "Library for working with xml via esxml and sxml" ((kv (0 0 5))) single "melpa" nil nil nil] [cl-struct-package-desc esxml (0 3 0) "Handle HTML with lists." ((db (0 0 1))) tar "marmalade" nil nil nil])
  (ido-load-library [cl-struct-package-desc ido-load-library (20131106 706) "Load-library alternative using ido-completing-read" ((persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc ido-load-library (0 2 0) "Load-library alternative using ido-completing-read" ((persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (org-presie [cl-struct-package-desc org-presie (0 0 5) "simple presentation with an org file" ((framesize (0 0 1)) (eimp (1 4 0)) (org (7 8 9))) single "marmalade" nil nil nil])
  (eimp [cl-struct-package-desc eimp (20091025 922) "Emacs Image Manipulation Package" nil single "melpa" nil nil nil] [cl-struct-package-desc eimp (1 4 0) "Emacs Image Manipulation Package" nil single "marmalade" nil nil nil])
  (dotassoc [cl-struct-package-desc dotassoc (0 0 1) "dot access embedded alists" nil single "marmalade" nil nil nil])
  (mongo-elnode [cl-struct-package-desc mongo-elnode (0 5 0) "elnode adapter for mongo-el" ((mongo (0 5)) (elnode (0 9 9))) single "marmalade" nil nil nil])
  (jump [cl-struct-package-desc jump (20130702 33) "build functions which contextually jump between files" ((findr (0 7)) (inflections (1 1))) single "melpa" nil nil nil] [cl-struct-package-desc jump (2 3) "build functions which contextually jump between files" ((findr (0 7)) (inflections (1 1))) single "marmalade" nil nil nil])
  (unicode-fonts [cl-struct-package-desc unicode-fonts (20131122 1001) "Configure Unicode fonts" ((font-utils (0 7 0)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc unicode-fonts (0 3 8) "Configure Unicode fonts" ((font-utils (0 7 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (unicode-progress-reporter [cl-struct-package-desc unicode-progress-reporter (20131106 706) "Progress-reporter with fancy characters" ((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc unicode-progress-reporter (0 5 4) "Progress-reporter with fancy characters" ((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (minimal-session-saver [cl-struct-package-desc minimal-session-saver (20131106 706) "Very lean session saver" nil single "melpa" nil nil nil] [cl-struct-package-desc minimal-session-saver (0 6 2) "Very lean session saver" nil single "marmalade" nil nil nil])
  (dynamic-fonts [cl-struct-package-desc dynamic-fonts (20131106 706) "Set faces based on available fonts" ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc dynamic-fonts (0 6 4) "Set faces based on available fonts" ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (unicode-enbox [cl-struct-package-desc unicode-enbox (20131122 1000) "Surround a string with box-drawing characters" ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc unicode-enbox (0 1 4) "Surround a string with box-drawing characters" ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (string-utils [cl-struct-package-desc string-utils (20131106 706) "String-manipulation utilities" ((list-utils (0 4 2))) single "melpa" nil nil nil] [cl-struct-package-desc string-utils (0 3 2) "String-manipulation utilities" ((list-utils (0 4 2))) single "marmalade" nil nil nil])
  (window-end-visible [cl-struct-package-desc window-end-visible (20131106 706) "Find the last visible point in a window" nil single "melpa" nil nil nil] [cl-struct-package-desc window-end-visible (0 1 0) "Find the last visible point in a window" nil single "marmalade" nil nil nil])
  (yaoddmuse [cl-struct-package-desc yaoddmuse (20140306 1458) "Yet another oddmuse for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc yaoddmuse (0 1 1) "Yet another oddmuse for Emacs" nil single "marmalade" nil nil nil])
  (xml-gen [cl-struct-package-desc xml-gen (0 4) "A DSL for generating XML." nil single "marmalade" nil nil nil])
  (back-button [cl-struct-package-desc back-button (20131122 959) "Visual navigation through mark rings" ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "melpa" nil nil nil] [cl-struct-package-desc back-button (0 6 6) "Visual navigation through mark rings" ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (ucs-utils [cl-struct-package-desc ucs-utils (20131122 1636) "Utilities for Unicode characters" ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) tar "melpa" nil nil nil] [cl-struct-package-desc ucs-utils (0 7 6) "Utilities for Unicode characters" ((persistent-soft (0 8 8)) (pcache (0 2 3))) single "marmalade" nil nil nil])
  (nav-flash [cl-struct-package-desc nav-flash (20131106 706) "Briefly highlight the current line" nil single "melpa" nil nil nil] [cl-struct-package-desc nav-flash (1 1 0) "Briefly highlight the current line" nil single "marmalade" nil nil nil])
  (hippie-namespace [cl-struct-package-desc hippie-namespace (20131106 706) "Special treatment for namespace prefixes in hippie-expand" nil single "melpa" nil nil nil] [cl-struct-package-desc hippie-namespace (0 5 8) "Special treatment for namespace prefixes in hippie-expand" nil single "marmalade" nil nil nil])
  (persistent-soft [cl-struct-package-desc persistent-soft (20131106 706) "Persistent storage, returning nil on failure" ((pcache (0 2 3)) (list-utils (0 4 2))) single "melpa" nil nil nil] [cl-struct-package-desc persistent-soft (0 8 8) "Persistent storage, returning nil on failure" ((pcache (0 2 3)) (list-utils (0 4 2))) single "marmalade" nil nil nil])
  (edit-list [cl-struct-package-desc edit-list (20100930 743) "edit a single list" nil single "melpa" nil nil nil] [cl-struct-package-desc edit-list (0 4) "edit a single list" nil single "marmalade" nil nil nil])
  (hjkl-mode [cl-struct-package-desc hjkl-mode (0 1) "import some vim's key bindings" ((key-chord (0 5))) tar "marmalade" nil nil nil])
  (ruby-mode [cl-struct-package-desc ruby-mode (1 1) "ruby-mode package" nil tar "marmalade" nil nil nil])
  (marmalade-test [cl-struct-package-desc marmalade-test (0 0 1) "A test tarball package." nil tar "marmalade" nil nil nil])
  (cm-mode [cl-struct-package-desc cm-mode (20130306 6) "Minor mode for CriticMarkup" nil single "melpa" nil nil nil] [cl-struct-package-desc cm-mode (0 1 0) "Wrapper for CodeMirror-style Emacs modes" nil single "marmalade" nil nil nil])
  (mongo [cl-struct-package-desc mongo (20120904 2005) "MongoDB driver for Emacs Lisp" nil tar "melpa" nil nil nil] [cl-struct-package-desc mongo (0 5) "A MongoDB client." nil tar "marmalade" nil nil nil])
  (egison-mode [cl-struct-package-desc egison-mode (20140217 2053) "Egison editing mode" nil single "melpa" nil nil nil] [cl-struct-package-desc egison-mode (0 1 4) "Egison editing mode" nil single "marmalade" nil nil nil])
  (org-readme [cl-struct-package-desc org-readme (20130508 705) "Integrates Readme.org and Commentary/Change-logs." ((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0))) tar "melpa" nil nil nil] [cl-struct-package-desc org-readme (20130322 926) "Integrates Readme.org and Commentary/Change-logs." ((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0))) single "marmalade" nil nil nil])
  (eredis [cl-struct-package-desc eredis (20120808 2007) "eredis, a Redis client in emacs lisp" nil single "melpa" nil nil nil] [cl-struct-package-desc eredis (0 5 0) "eredis, a Redis client in emacs lisp" nil single "marmalade" nil nil nil])
  (gnusnotes [cl-struct-package-desc gnusnotes (0 9 2) "Adding per-message notes in gnus summary buffer" nil single "marmalade" nil nil nil])
  (makefile-runner [cl-struct-package-desc makefile-runner (1 1 2) "Searches for Makefile and fetches targets" nil single "marmalade" nil nil nil])
  (no-easy-keys [cl-struct-package-desc no-easy-keys (1 0 2) "Learn the proper Emacs movement keys" nil single "marmalade" nil nil nil])
  (dix [cl-struct-package-desc dix (0 1 0) "minor mode for editing Apertium XML dictionary files" nil single "marmalade" nil nil nil])
  (code-headers [cl-struct-package-desc code-headers (0 7) "Navigate code with headers embedded in comments.  -*- mode: Emacs-Lisp; lexical-binding: t; -*" nil single "marmalade" nil nil nil])
  (package-store [cl-struct-package-desc package-store (0 3) "a package cache" nil single "marmalade" nil nil nil])
  (github-theme [cl-struct-package-desc github-theme (0 0 3) "Github color theme for GNU Emacs 24" nil single "marmalade" nil nil nil])
  (shell-switcher [cl-struct-package-desc shell-switcher (20140217 638) "Provide fast switching between shell buffers" nil tar "melpa" nil nil nil] [cl-struct-package-desc shell-switcher (0 1 5 1) "Easily switch between shell buffers, like with alt+tab." nil tar "marmalade" nil nil nil])
  (nrepl [cl-struct-package-desc nrepl (0 2 0) "Client for Clojure nREPL" ((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 1 0)) (pkg-info (0 1))) single "marmalade" nil nil nil])
  (writegood-mode [cl-struct-package-desc writegood-mode (20140213 848) "Polish up poor writing on the fly" nil single "melpa" nil nil nil] [cl-struct-package-desc writegood-mode (20130406 2316) "Polish up poor writing on the fly" nil single "marmalade" nil nil nil])
  (dispass [cl-struct-package-desc dispass (20140202 731) "Emacs wrapper for DisPass" ((dash (1 0 0))) single "melpa" nil nil nil] [cl-struct-package-desc dispass (1 1 2) "Emacs wrapper for DisPass" nil single "marmalade" nil nil nil])
  (zeitgeist [cl-struct-package-desc zeitgeist (20131228 1009) "No description available." nil single "melpa" nil nil nil] [cl-struct-package-desc zeitgeist (0 1) "integrates Emacs with Zeitgeist." nil single "marmalade" nil nil nil])
  (ttl-mode [cl-struct-package-desc ttl-mode (0 1) "mode for Turtle(RDF)" nil single "marmalade" nil nil nil])
  (scad-mode [cl-struct-package-desc scad-mode (90 0) "SCAD mode derived mode" nil single "marmalade" nil nil nil])
  (legalese [cl-struct-package-desc legalese (20100119 2148) "Add legalese to your program files" nil single "melpa" nil nil nil] [cl-struct-package-desc legalese (1 0) "Add legalese to your program files" nil single "marmalade" nil nil nil])
  (wc-mode [cl-struct-package-desc wc-mode (20120531 1344) "show wc-like information in status bar" nil single "melpa" nil nil nil] [cl-struct-package-desc wc-mode (1 3) "Running word count with goals (minor mode)" nil single "marmalade" nil nil nil])
  (el-spec [cl-struct-package-desc el-spec (20121018 4) "ruby's rspec like syntax test frame work" nil single "melpa" nil nil nil] [cl-struct-package-desc el-spec (0 2) "ruby's rspec like syntax test frame work" nil single "marmalade" nil nil nil])
  (grep-o-matic [cl-struct-package-desc grep-o-matic (1 0 6) "auto grep word under cursor" nil single "marmalade" nil nil nil])
  (grep-a-lot [cl-struct-package-desc grep-a-lot (20131006 647) "manages multiple search results buffers for grep.el" nil single "melpa" nil nil nil] [cl-struct-package-desc grep-a-lot (1 0 7) "manages multiple search results buffers for grep.el" nil single "marmalade" nil nil nil])
  (repository-root [cl-struct-package-desc repository-root (1 0 4) "deduce the repository root directory for a given file" nil single "marmalade" nil nil nil])
  (php-extras [cl-struct-package-desc php-extras (2 1 0 20140309) "Extra features for `php-mode'" ((php-mode (1 5 0))) tar "marmalade" nil nil nil])
  (heroku [cl-struct-package-desc heroku (20120629 1113) "Interface to Heroku apps." nil single "melpa" nil nil nil] [cl-struct-package-desc heroku (1 1 0) "Interface to Heroku apps." nil single "marmalade" nil nil nil])
  (zen-mode [cl-struct-package-desc zen-mode (20120627) "remove/restore Emacs distractions quickly" nil tar "marmalade" nil nil nil])
  (my-packages [cl-struct-package-desc my-packages (0 1 0) "Package Initialization." nil single "marmalade" nil nil nil])
  (haste [cl-struct-package-desc haste (20131203 1340) "Emacs client for hastebin (http://hastebin.com/about.md)" ((json (1 2))) single "melpa" nil nil nil] [cl-struct-package-desc haste (1) "Emacs client for hastebin (http://hastebin.com/about.md)" ((json (1 2))) single "marmalade" nil nil nil])
  (git-auto-commit-mode [cl-struct-package-desc git-auto-commit-mode (20131007 1423) "Emacs Minor mode to automatically commit and push" nil single "melpa" nil nil nil] [cl-struct-package-desc git-auto-commit-mode (4 2 2) "Emacs Minor mode to automatically commit and push" nil single "marmalade" nil nil nil])
  (zen-and-art-theme [cl-struct-package-desc zen-and-art-theme (20120622 737) "zen and art color theme for GNU Emacs 24" nil single "melpa" nil nil nil] [cl-struct-package-desc zen-and-art-theme (1 0 1) "zen and art color theme for GNU Emacs 24" nil single "marmalade" nil nil nil])
  (ujelly-theme [cl-struct-package-desc ujelly-theme (20131211 1552) "Ujelly theme for GNU Emacs 24 (deftheme)" nil single "melpa" nil nil nil] [cl-struct-package-desc ujelly-theme (1 0 35) "Ujelly theme for GNU Emacs 24 (deftheme)" nil single "marmalade" nil nil nil])
  (nyan-mode [cl-struct-package-desc nyan-mode (20120710 2200) "Nyan Cat shows position in current buffer in mode-line." nil tar "melpa" nil nil nil] [cl-struct-package-desc nyan-mode (0 1) "Nyan Cat shows position in current buffer in mode-line." nil single "marmalade" nil nil nil])
  (smart-mode-line [cl-struct-package-desc smart-mode-line (20140305 523) "A color coded smart mode-line." ((emacs (24 3)) (dash (2 2 0))) single "melpa" nil nil nil] [cl-struct-package-desc smart-mode-line (1 7 1) "A color coded smart mode-line." nil single "marmalade" nil nil nil])
  (zencoding-mode [cl-struct-package-desc zencoding-mode (20140213 22) "Unfold CSS-selector-like expressions to markup" nil single "melpa" nil nil nil] [cl-struct-package-desc zencoding-mode (0 5 1) "Unfold CSS-selector-like expressions to markup" nil single "marmalade" nil nil nil])
  (mouse+ [cl-struct-package-desc mouse+ (20131227 141) "Extensions to `mouse.el'." nil single "melpa" nil nil nil] [cl-struct-package-desc mouse+ (21 0) "Extensions to `mouse.el'." nil single "marmalade" nil nil nil])
  (isearch+ [cl-struct-package-desc isearch+ (20140110 1907) "Extensions to `isearch.el' (incremental search)." nil single "melpa" nil nil nil] [cl-struct-package-desc isearch+ (21 0) "Extensions to `isearch.el'." nil single "marmalade" nil nil nil])
  (openwith [cl-struct-package-desc openwith (20120531 1436) "Open files with external programs" nil single "melpa" nil nil nil] [cl-struct-package-desc openwith (20120531) "Open files with external programs" nil single "marmalade" nil nil nil])
  (mark-more-like-this [cl-struct-package-desc mark-more-like-this (1 0) "Mark additional regions in buffer matching current region." nil single "marmalade" nil nil nil])
  (mark-multiple [cl-struct-package-desc mark-multiple (20121118 754) "Sorta lets you mark several regions at once." nil tar "melpa" nil nil nil] [cl-struct-package-desc mark-multiple (1 0) "A library that sorta lets you mark several regions at once" nil single "marmalade" nil nil nil])
  (modeline-posn [cl-struct-package-desc modeline-posn (20140121 553) "Set up `mode-line-position'." nil single "melpa" nil nil nil] [cl-struct-package-desc modeline-posn (22 0) "Set up `mode-line-position'." nil single "marmalade" nil nil nil])
  (unfill [cl-struct-package-desc unfill (20131103 213) "The inverse of fill-paragraph and fill-region" nil single "melpa" nil nil nil] [cl-struct-package-desc unfill (0 1) "The inverse of fill-paragraph and fill-region" nil single "marmalade" nil nil nil])
  (ruby-tools [cl-struct-package-desc ruby-tools (20140113 45) "Collection of handy functions for ruby-mode." nil tar "melpa" nil nil nil] [cl-struct-package-desc ruby-tools (0 1 0) "Collection of handy functions for ruby-mode" nil single "marmalade" nil nil nil])
  (org-blog [cl-struct-package-desc org-blog (1 18 1 1) "create and publish a blog with org-mode" nil single "marmalade" nil nil nil])
  (frame-tag [cl-struct-package-desc frame-tag (20120527 136) "Minor mode that assigns a unique number to each frame for easy switching" nil single "melpa" nil nil nil] [cl-struct-package-desc frame-tag (0 1 0) "Minor mode that assigns a unique number to each frame for easy switching" nil single "marmalade" nil nil nil])
  (ascii [cl-struct-package-desc ascii (20130824 1200) "ASCII code display." nil single "melpa" nil nil nil] [cl-struct-package-desc ascii (3 1) "ASCII code display." nil single "marmalade" nil nil nil])
  (dircmp [cl-struct-package-desc dircmp (20130806 1157) "Compare and sync directories." nil tar "melpa" nil nil nil] [cl-struct-package-desc dircmp (1) "Compare and sync directories." nil single "marmalade" nil nil nil])
  (handlebars-mode [cl-struct-package-desc handlebars-mode (20131122 1406) "A major mode for editing Handlebars files." nil single "melpa" nil nil nil] [cl-struct-package-desc handlebars-mode (1 3) "A major mode for editing Handlebars files." nil single "marmalade" nil nil nil])
  (symbols-mode [cl-struct-package-desc symbols-mode (0 3) "List symbols of object files" nil single "marmalade" nil nil nil])
  (shell-here [cl-struct-package-desc shell-here (20120807 1913) "Open a shell relative to the working directory" nil single "melpa" nil nil nil] [cl-struct-package-desc shell-here (1 1) "Open a shell relative to the working directory" nil single "marmalade" nil nil nil])
  (key-chord [cl-struct-package-desc key-chord (20080915 2156) "map pairs of simultaneously pressed keys to commands" nil single "melpa" nil nil nil] [cl-struct-package-desc key-chord (0 5 20080915) "map pairs of simultaneously pressed keys to commands" nil single "marmalade" nil nil nil])
  (elisp-depend [cl-struct-package-desc elisp-depend (20120427 123) "Parse depend libraries of elisp file." nil single "melpa" nil nil nil] [cl-struct-package-desc elisp-depend (1 0 2) "Parse depend libraries of elisp file." nil single "marmalade" nil nil nil])
  (color-theme-buffer-local [cl-struct-package-desc color-theme-buffer-local (20120702 1336) "Install color-themes by buffer." nil single "melpa" nil nil nil] [cl-struct-package-desc color-theme-buffer-local (0 0 2) "Install color-themes by buffer." nil single "marmalade" nil nil nil])
  (load-theme-buffer-local [cl-struct-package-desc load-theme-buffer-local (20120702 1336) "Install emacs24 color themes by buffer." nil single "melpa" nil nil nil] [cl-struct-package-desc load-theme-buffer-local (0 0 2) "Install emacs24 color themes by buffer." nil single "marmalade" nil nil nil])
  (oz [cl-struct-package-desc oz (16513) "Major mode for editing Oz programs" nil tar "marmalade" nil nil nil])
  (phantomjs [cl-struct-package-desc phantomjs (0 0 11) "Control phantomjs from Emacs			" nil tar "marmalade" nil nil nil])
  (jtags-extras [cl-struct-package-desc jtags-extras (0 3 0) "jtags related functionality for Java development" nil single "marmalade" nil nil nil])
  (jtags [cl-struct-package-desc jtags (20111208 1022) "enhanced tags functionality for Java development" nil tar "melpa" nil nil nil] [cl-struct-package-desc jtags (0 97) "enhanced tags functionality for Java development" nil single "marmalade" nil nil nil])
  (twilight-theme [cl-struct-package-desc twilight-theme (20120412 603) "Twilight theme for GNU Emacs 24 (deftheme)" nil single "melpa" nil nil nil] [cl-struct-package-desc twilight-theme (1 0 0) "Twilight theme for GNU Emacs 24 (deftheme)" nil single "marmalade" nil nil nil])
  (expectations-mode [cl-struct-package-desc expectations-mode (0 0 4) "Minor mode for expectations tests" ((nrepl (0 1 5)) (clojure-mode (1 11))) single "marmalade" nil nil nil])
  (anything-git-goto [cl-struct-package-desc anything-git-goto (0 1 0) "Quick listing of:" nil single "marmalade" nil nil nil])
  (ess [cl-struct-package-desc ess (20140304 2344) "No description available." nil tar "melpa" nil nil nil] [cl-struct-package-desc ess (5 14) "Edit and interact with statistical programs like R, S-Plus, SAS, Stata and JAGS" nil tar "marmalade" nil nil nil])
  (anything-exuberant-ctags [cl-struct-package-desc anything-exuberant-ctags (0 1 2) "Exuberant ctags anything.el interface" nil single "marmalade" nil nil nil])
  (yascroll [cl-struct-package-desc yascroll (20130320 1134) "Yet Another Scroll Bar Mode" nil single "melpa" nil nil nil] [cl-struct-package-desc yascroll (0 2 0) "Yet Another Scroll Bar Mode" nil single "marmalade" nil nil nil])
  (cycbuf [cl-struct-package-desc cycbuf (20131203 1237) "Cycle buffers, inspired by swbuff.el, swbuff-x.el, and bs.el" nil single "melpa" nil nil nil] [cl-struct-package-desc cycbuf (0 5 0) "Cycle buffers code by Martin Pohlack, inspired by" nil single "marmalade" nil nil nil])
  (shadchen [cl-struct-package-desc shadchen (1 0) "pattern matching for elisp" nil single "marmalade" nil nil nil])
  (jsshell [cl-struct-package-desc jsshell (2012 4 7) "Run a javascript command interpreter in emacs on Windows." nil single "marmalade" nil nil nil])
  (w32-registry [cl-struct-package-desc w32-registry (2012 4 6) "read the registry from elisp" nil single "marmalade" nil nil nil])
  (drag-stuff [cl-struct-package-desc drag-stuff (20140121 723) "Drag stuff (lines, words, region, etc...) around" nil tar "melpa" nil nil nil] [cl-struct-package-desc drag-stuff (0 0 4) "Drag stuff (lines, words, region, etc...) around" nil single "marmalade" nil nil nil])
  (idomenu [cl-struct-package-desc idomenu (20111122 1048) "imenu tag selection a la ido" nil single "melpa" nil nil nil] [cl-struct-package-desc idomenu (0 1) "imenu tag selection with ido" nil single "marmalade" nil nil nil])
  (align-cljlet [cl-struct-package-desc align-cljlet (20131016 2356) "Space align various Clojure forms" ((clojure-mode (1 11 5))) single "melpa" nil nil nil] [cl-struct-package-desc align-cljlet (0 3) "Space align various Clojure forms " ((clojure-mode (1 11 5))) single "marmalade" nil nil nil])
  (hungry-delete [cl-struct-package-desc hungry-delete (20120128 1153) "hungry delete minor mode" nil single "melpa" nil nil nil] [cl-struct-package-desc hungry-delete (1 0) "hungry delete minor mode" nil single "marmalade" nil nil nil])
  (smarter-compile [cl-struct-package-desc smarter-compile (2012 4 9) "a smarter wrapper for `compile'" nil single "marmalade" nil nil nil])
  (watch-buffer [cl-struct-package-desc watch-buffer (20120331 1344) "run a shell command when saving a buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc watch-buffer (1 0 1) "run a shell command when saving a buffer" nil single "marmalade" nil nil nil])
  (fly-jshint-wsh [cl-struct-package-desc fly-jshint-wsh (2 0 3) "use flymake with jshint on js code, on Windows" ((flymake (0 3))) single "marmalade" nil nil nil])
  (thesaurus [cl-struct-package-desc thesaurus (20121125 1937) "replace a word with a synonym looked up in a web service." nil single "melpa" nil nil nil] [cl-struct-package-desc thesaurus (2012 4 7) "replace a word with a synonym looked up in a web service." nil single "marmalade" nil nil nil])
  (dropdown-list [cl-struct-package-desc dropdown-list (20120329 1636) "Drop-down menu interface" nil single "melpa" nil nil nil] [cl-struct-package-desc dropdown-list (1 45) "Drop-down menu interface" nil single "marmalade" nil nil nil])
  (tfs [cl-struct-package-desc tfs (20120508 1820) "MS Team Foundation Server commands for Emacs." nil single "melpa" nil nil nil] [cl-struct-package-desc tfs (0 2 7) "MS Team Foundation Server commands for Emacs." nil single "marmalade" nil nil nil])
  (flymake-for-jslint-for-wsh [cl-struct-package-desc flymake-for-jslint-for-wsh (1 3 0) "use flymake with js code, on Windows" ((flymake (0 3))) single "marmalade" nil nil nil])
  (defaultcontent [cl-struct-package-desc defaultcontent (1 4) "a templating tool. Fill new files with default content." nil single "marmalade" nil nil nil])
  (flyphpcs [cl-struct-package-desc flyphpcs (1 0 1) "Flymake for PHP via PHP-CodeSniffer" nil single "marmalade" nil nil nil])
  (rfringe [cl-struct-package-desc rfringe (20110405 1520) "display the relative location of the region, in the fringe." nil single "melpa" nil nil nil] [cl-struct-package-desc rfringe (1 0 1) "indicate relative locations in the fringe" nil single "marmalade" nil nil nil])
  (jsshell-bundle [cl-struct-package-desc jsshell-bundle (2012 4 7) "JSShell generated bundle" nil single "marmalade" nil nil nil])
  (flymake-perlcritic [cl-struct-package-desc flymake-perlcritic (20120328 114) "Flymake handler for Perl to invoke Perl::Critic" ((flymake (0 3))) tar "melpa" nil nil nil] [cl-struct-package-desc flymake-perlcritic (1 0 3) "Flymake handler for Perl to invoke Perl::Critic" ((flymake (0 3))) tar "marmalade" nil nil nil])
  (weather [cl-struct-package-desc weather (2012 3 27 2) "Get weather reports via worldweatheronline.com" nil single "marmalade" nil nil nil])
  (color-theme-dawn-night [cl-struct-package-desc color-theme-dawn-night (1 0) "color theme of dawn and night." nil single "marmalade" nil nil nil])
  (flex-autopair [cl-struct-package-desc flex-autopair (20120809 518) "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable." nil single "melpa" nil nil nil] [cl-struct-package-desc flex-autopair (0 3) "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable." nil single "marmalade" nil nil nil])
  (flymake-phpcs [cl-struct-package-desc flymake-phpcs (20140111 1932) "making flymake work with PHP CodeSniffer" ((flymake-easy (0 9))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-phpcs (1 0 5) "Flymake handler for PHP to invoke PHP-CodeSniffer" ((flymake (0 3))) tar "marmalade" nil nil nil])
  (twittering-mode [cl-struct-package-desc twittering-mode (20131211 1017) "Major mode for Twitter" nil single "melpa" nil nil nil] [cl-struct-package-desc twittering-mode (2 0 0) "Major mode for Twitter" nil single "marmalade" nil nil nil])
  (typopunct [cl-struct-package-desc typopunct (1 0) "Automatic typographical punctuation marks" nil single "marmalade" nil nil nil])
  (lorem-ipsum [cl-struct-package-desc lorem-ipsum (20051013 1756) "Insert dummy pseudo Latin text." nil single "melpa" nil nil nil] [cl-struct-package-desc lorem-ipsum (0 1) "Insert dummy pseudo Latin text." nil single "marmalade" nil nil nil])
  (bitlbee [cl-struct-package-desc bitlbee (20130328 1018) "Help get Bitlbee (http://www.bitlbee.org) up and running." nil single "melpa" nil nil nil] [cl-struct-package-desc bitlbee (1 0) "Help get Bitlbee (http://www.bitlbee.org) up and running" nil single "marmalade" nil nil nil])
  (auto-complete [cl-struct-package-desc auto-complete (20140208 653) "Auto Completion for GNU Emacs" ((popup (0 5 0))) tar "melpa" nil nil nil] [cl-struct-package-desc auto-complete (1 4) "Auto Completion for GNU Emacs" ((popup (0 5))) tar "marmalade" nil nil nil])
  (fuzzy [cl-struct-package-desc fuzzy (20131025 2343) "Fuzzy Matching" nil single "melpa" nil nil nil] [cl-struct-package-desc fuzzy (0 1) "Fuzzy Matching" nil single "marmalade" nil nil nil])
  (wrap-region [cl-struct-package-desc wrap-region (20140116 2320) "Wrap text with punctation or tag" ((dash (1 0 3))) single "melpa" nil nil nil] [cl-struct-package-desc wrap-region (0 7 1) "Wrap text with punctation or tag" nil single "marmalade" nil nil nil])
  (monokai-theme [cl-struct-package-desc monokai-theme (20140208 349) "A fruity color theme for Emacs." nil single "melpa" nil nil nil] [cl-struct-package-desc monokai-theme (0 0 10) "REQUIRES EMACS 24: Monokai Color Theme for Emacs." nil single "marmalade" nil nil nil])
  (real-auto-save [cl-struct-package-desc real-auto-save (0 3) "enable real auto save" nil single "marmalade" nil nil nil])
  (cljdoc [cl-struct-package-desc cljdoc (0 1 0) "eldoc mode for clojure" nil single "marmalade" nil nil nil])
  (igrep [cl-struct-package-desc igrep (20130824 1207) "An improved interface to `grep` and `find`" nil single "melpa" nil nil nil] [cl-struct-package-desc igrep (2 113) "An improved interface to `grep` and `find`" nil single "marmalade" nil nil nil])
  (emstar [cl-struct-package-desc emstar (1 4) "Casual game, like a brainy Pac-Man" nil tar "marmalade" nil nil nil])
  (rspec-mode [cl-struct-package-desc rspec-mode (20140223 1340) "Enhance ruby-mode for RSpec" ((ruby-mode (1 0)) (cl-lib (0 4))) tar "melpa" nil nil nil] [cl-struct-package-desc rspec-mode (1 7) "Enhance ruby-mode for RSpec" ((ruby-mode (1 0))) single "marmalade" nil nil nil])
  (evil-leader [cl-struct-package-desc evil-leader (20140307 1304) "let there be <leader>" ((evil (0))) single "melpa" nil nil nil] [cl-struct-package-desc evil-leader (0 4 1) "let there be <leader>" ((evil (0))) single "marmalade" nil nil nil])
  (dired+ [cl-struct-package-desc dired+ (20140216 1552) "Extensions to Dired." nil single "melpa" nil nil nil] [cl-struct-package-desc dired+ (21 2) "Extensions to Dired." nil single "marmalade" nil nil nil])
  (quack [cl-struct-package-desc quack (0 42) "enhanced support for editing and running Scheme code" nil single "marmalade" nil nil nil])
  (po-elscreen [cl-struct-package-desc po-elscreen (1 4 6) " Screen for Emacsen(this is not original. original is http://www.morishima.net/~naoto/elscreen-en/?lang=en)" nil single "marmalade" nil nil nil])
  (po\.elscreen [cl-struct-package-desc po\.elscreen (1 4 6) " Screen for Emacsen(this is not original)" nil single "marmalade" nil nil nil])
  (po\.foo [cl-struct-package-desc po\.foo (3 0 20) "Sass major mode" ((haml-mode (3 0 20))) single "marmalade" nil nil nil])
  (tango-2-theme [cl-struct-package-desc tango-2-theme (20120312 1325) "Tango 2 color theme for GNU Emacs 24" nil single "melpa" nil nil nil] [cl-struct-package-desc tango-2-theme (1 0 0) "Tango 2 color theme for GNU Emacs 24" nil single "marmalade" nil nil nil])
  (imgur [cl-struct-package-desc imgur (0 1) "imgur client for Emacs" ((anything (1 287))) single "marmalade" nil nil nil])
  (cacoo [cl-struct-package-desc cacoo (20120319 1659) "Minor mode for Cacoo : http://cacoo.com" ((concurrent (0 3 1))) tar "melpa" nil nil nil] [cl-struct-package-desc cacoo (2 1 2) "Minor mode for Cacoo : http://cacoo.com" ((concurrent (0 3 1))) tar "marmalade" nil nil nil])
  (color-theme [cl-struct-package-desc color-theme (20080305 34) "install color themes" nil tar "melpa" nil nil nil] [cl-struct-package-desc color-theme (6 5 5) "install color themes" nil single "marmalade" nil nil nil])
  (edbi [cl-struct-package-desc edbi (20130809 556) "Emacs Database Interface" ((concurrent (0 3 1)) (ctable (0 1 2)) (epc (0 1 1))) tar "melpa" nil nil nil] [cl-struct-package-desc edbi (0 1 1) "Emacs Database Interface" ((concurrent (0 3 1)) (ctable (0 1 1)) (epc (0 1 1))) tar "marmalade" nil nil nil])
  (epc [cl-struct-package-desc epc (20140301 1811) "A RPC stack for the Emacs Lisp" ((concurrent (0 3 1)) (ctable (0 1 2))) tar "melpa" nil nil nil] [cl-struct-package-desc epc (0 1 1) "A RPC stack for the Emacs Lisp" ((concurrent (0 3 1)) (ctable (0 1 1))) single "marmalade" nil nil nil])
  (ctable [cl-struct-package-desc ctable (20140304 1659) "Table component for Emacs Lisp" nil single "melpa" nil nil nil] [cl-struct-package-desc ctable (0 1 1) "Table component for Emacs Lisp" nil single "marmalade" nil nil nil])
  (concurrent [cl-struct-package-desc concurrent (20140303 1635) "Concurrent utility functions for emacs lisp" ((deferred (0 3 1))) single "melpa" nil nil nil] [cl-struct-package-desc concurrent (0 3 1) "Concurrent utility functions for emacs lisp" ((deferred (0 3 1))) single "marmalade" nil nil nil])
  (deferred [cl-struct-package-desc deferred (20140303 1634) "Simple asynchronous functions for emacs lisp" nil single "melpa" nil nil nil] [cl-struct-package-desc deferred (0 3 1) "Simple asynchronous functions for emacs lisp" nil single "marmalade" nil nil nil])
  (image-dired+ [cl-struct-package-desc image-dired+ (20130811 1741) "Image-dired extensions" nil single "melpa" nil nil nil] [cl-struct-package-desc image-dired+ (0 6 0) "Image-dired extensions" nil single "marmalade" nil nil nil])
  (color-theme-solarized [cl-struct-package-desc color-theme-solarized (20130307 1350) "Solarized themes for Emacs" ((color-theme (6 5 5))) tar "melpa" nil nil nil] [cl-struct-package-desc color-theme-solarized (20120301) "Solarized themes for Emacs" nil tar "marmalade" nil nil nil])
  (pastels-on-dark-theme [cl-struct-package-desc pastels-on-dark-theme (20120304 1022) "Pastels on Dark theme for Emacs 24" nil single "melpa" nil nil nil] [cl-struct-package-desc pastels-on-dark-theme (0 3) "Pastels on Dark theme for Emacs 24" nil single "marmalade" nil nil nil])
  (anything-show-completion [cl-struct-package-desc anything-show-completion (20091119) "Show selection in buffer for anything completion" nil single "marmalade" nil nil nil])
  (javap-mode [cl-struct-package-desc javap-mode (20120223 1408) "Javap major mode" nil single "melpa" nil nil nil] [cl-struct-package-desc javap-mode (9) "Javap major mode" nil single "marmalade" nil nil nil])
  (javap [cl-struct-package-desc javap (8) "Javap major mode" nil single "marmalade" nil nil nil])
  (ghci-completion [cl-struct-package-desc ghci-completion (20130310 836) "Completion for GHCi commands in inferior-haskell buffers" ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc ghci-completion (0 1 3) "Completion for GHCi commands in inferior-haskell buffers -*- lexical-binding: t; -*-" nil single "marmalade" nil nil nil])
  (ess-smart-underscore [cl-struct-package-desc ess-smart-underscore (20131229 1851) "Ess Smart Underscore" ((ess (0))) tar "melpa" nil nil nil] [cl-struct-package-desc ess-smart-underscore (0 79) "Ess Smart Underscore" nil single "marmalade" nil nil nil])
  (sws-mode [cl-struct-package-desc sws-mode (20120802 1052) "(S)ignificant (W)hite(S)pace mode" nil single "melpa" nil nil nil] [cl-struct-package-desc sws-mode (0 1) "SWS mode" nil single "marmalade" nil nil nil])
  (stylus-mode [cl-struct-package-desc stylus-mode (20120802 1052) "Major mode for editing .jade files" ((sws-mode (0))) single "melpa" nil nil nil] [cl-struct-package-desc stylus-mode (0 1) "Major mode for editing stylus templates." nil single "marmalade" nil nil nil])
  (jade-mode [cl-struct-package-desc jade-mode (20131018 1010) "Major mode for editing .jade files" ((sws-mode (0))) single "melpa" nil nil nil] [cl-struct-package-desc jade-mode (0 1) "Major mode for editing jade templates." nil single "marmalade" nil nil nil])
  (logito [cl-struct-package-desc logito (20120225 1255) "logging library for Emacs" ((eieio (1 3))) single "melpa" nil nil nil] [cl-struct-package-desc logito (0 1) "logging library for Emacs" ((eieio (1 3))) single "marmalade" nil nil nil])
  (sublime [cl-struct-package-desc sublime (0 0 7) "REQUIRES EMACS 24 - Sublime Text 2 Emulation for Emacs" ((coffee-mode (0 3 0)) (find-file-in-project (3 0)) (haml-mode (3 0 14)) (ido-ubiquitous (1 0)) (less-css-mode (0 6)) (magit (1 1 1)) (markdown-mode (1 8 1)) (monokai-theme (0 0 6)) (paredit (22)) (sass-mode (3 0 14)) (smex (1 1 2)) (yaml-mode (0 0 7)) (yasnippet (0 6 1))) tar "marmalade" nil nil nil])
  (tron-theme [cl-struct-package-desc tron-theme (12) "A theme loosely based on Tron: Legacy colors" nil single "marmalade" nil nil nil])
  (pivotal-tracker [cl-struct-package-desc pivotal-tracker (20140213 506) "Interact with Pivotal Tracker through its API" nil single "melpa" nil nil nil] [cl-struct-package-desc pivotal-tracker (1 2 0) "Interact with Pivotal Tracker through its API" nil single "marmalade" nil nil nil])
  (workspaces [cl-struct-package-desc workspaces (0 1) "Workspaces for Emacsen " nil single "marmalade" nil nil nil])
  (mediawiki [cl-struct-package-desc mediawiki (20130223 1141) "mediawiki frontend" nil single "melpa" nil nil nil] [cl-struct-package-desc mediawiki (2 2 3) "mediawiki frontend" nil single "marmalade" nil nil nil])
  (pc-mode [cl-struct-package-desc pc-mode (0 1) "major mode for editing PC code," nil single "marmalade" nil nil nil])
  (moinmoin-mode [cl-struct-package-desc moinmoin-mode (1 0) "a major mode to edit MoinMoin wiki pages" ((screen-lines (0 55))) single "marmalade" nil nil nil])
  (ctypes [cl-struct-package-desc ctypes (1 2) "Enhanced Font lock support for custom defined types." nil single "marmalade" nil nil nil])
  (screen-lines [cl-struct-package-desc screen-lines (0 55) "a minor mode for screen-line-based point motion" nil single "marmalade" nil nil nil])
  (drupal-mode [cl-struct-package-desc drupal-mode (20140304 1258) "Advanced minor mode for Drupal development" ((php-mode (1 5 0))) tar "melpa" nil nil nil] [cl-struct-package-desc drupal-mode (0 4 1) "Advanced minor mode for Drupal development" ((php-mode (1 5 0))) tar "marmalade" nil nil nil])
  (color-theme-monokai [cl-struct-package-desc color-theme-monokai (0 0 5) "Monokai Color Theme for Emacs." ((color-theme (6 5 5))) single "marmalade" nil nil nil])
  (track-closed-files [cl-struct-package-desc track-closed-files (0 1) "Keep track of recently closed files" nil single "marmalade" nil nil nil])
  (flymake-tuareg [cl-struct-package-desc flymake-tuareg (0 1) "A flymake handler for tuareg-mode files" nil tar "marmalade" nil nil nil])
  (flymake-d [cl-struct-package-desc flymake-d (0 1) "A flymake handler for d-mode files" nil single "marmalade" nil nil nil])
  (xlicense [cl-struct-package-desc xlicense (1 1) "Insert pre-defined license text" nil tar "marmalade" nil nil nil])
  (smooth-scroll [cl-struct-package-desc smooth-scroll (20130321 2114) "Minor mode for smooth scrolling and in-place scrolling." nil single "melpa" nil nil nil] [cl-struct-package-desc smooth-scroll (1 2) "Minor mode for smooth scrolling and in-place scrolling." nil single "marmalade" nil nil nil])
  (volatile-highlights [cl-struct-package-desc volatile-highlights (20130321 641) "Minor mode for visual feedback on some operations." nil single "melpa" nil nil nil] [cl-struct-package-desc volatile-highlights (1 10) "Minor mode for visual feedback on some operations." nil single "marmalade" nil nil nil])
  (slime-js [cl-struct-package-desc slime-js (0 0 1) "Slime extension for swank-js." ((slime-repl (20100404)) (slime (20100404))) single "marmalade" nil nil nil])
  (mo-git-blame [cl-struct-package-desc mo-git-blame (20140211 2349) "An interactive, iterative 'git blame' mode for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc mo-git-blame (0 1 0) "An interactive, iterative 'git blame' mode for Emacs" nil single "marmalade" nil nil nil])
  (multi-eshell [cl-struct-package-desc multi-eshell (20120608 1835) "Create and manage multiple shells within Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc multi-eshell (0 0 1) "makes it easier to use multiple shells within emacs" nil single "marmalade" nil nil nil])
  (test-case-mode [cl-struct-package-desc test-case-mode (20140123 1115) "unit test front-end" nil single "melpa" nil nil nil] [cl-struct-package-desc test-case-mode (0 1 9) "unit test front-end" nil single "marmalade" nil nil nil])
  (ack-and-a-half [cl-struct-package-desc ack-and-a-half (20130815 1917) "Yet another front-end for ack" nil single "melpa" nil nil nil] [cl-struct-package-desc ack-and-a-half (1 2 0) "Yet another front-end for ack" nil single "marmalade" nil nil nil])
  (expand-region [cl-struct-package-desc expand-region (20140127 112) "Increase selected region by semantic units." nil tar "melpa" nil nil nil] [cl-struct-package-desc expand-region (0 10 0) "Increase selected region by semantic units." nil tar "marmalade" nil nil nil])
  (haxe-mode [cl-struct-package-desc haxe-mode (20131004 142) "An Emacs major mode for Haxe" nil single "melpa" nil nil nil] [cl-struct-package-desc haxe-mode (0 3 1) "An Emacs major mode for haXe" nil single "marmalade" nil nil nil])
  (fancy-mode [cl-struct-package-desc fancy-mode (0 1) "Major mode for programming with the Fancy language." nil single "marmalade" nil nil nil])
  (popup [cl-struct-package-desc popup (20140207 1702) "Visual Popup User Interface" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc popup (0 5) "Visual Popup User Interface" nil single "marmalade" nil nil nil])
  (flymake [cl-struct-package-desc flymake (0 4 16) "a universal on-the-fly syntax checker" nil single "marmalade" nil nil nil])
  (slim-mode [cl-struct-package-desc slim-mode (20131202 2302) "Major mode for editing Slim files" nil single "melpa" nil nil nil] [cl-struct-package-desc slim-mode (1 1) "Major mode for editing Slim files" nil single "marmalade" nil nil nil])
  (ido-better-flex [cl-struct-package-desc ido-better-flex (0 0 2) "A better flex (fuzzy) algorithm for Ido." nil single "marmalade" nil nil nil])
  (unbound [cl-struct-package-desc unbound (20140307 928) "Find convenient unbound keystrokes" nil single "melpa" nil nil nil] [cl-struct-package-desc unbound (0 1) "find convenient unbound keystrokes" nil single "marmalade" nil nil nil])
  (thumb-through [cl-struct-package-desc thumb-through (20120118 2134) "Plain text reader of HTML documents" nil single "melpa" nil nil nil] [cl-struct-package-desc thumb-through (0 3) "Plain text reader of HTML documents" nil single "marmalade" nil nil nil])
  (erlang [cl-struct-package-desc erlang (20131025 6) "Erlang major mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc erlang (2 4 1) "Major modes for editing and running Erlang" nil single "marmalade" nil nil nil])
  (uci-mode [cl-struct-package-desc uci-mode (1 0 0) "Major mode for UCI configuration files" nil single "marmalade" nil nil nil])
  (pointback [cl-struct-package-desc pointback (20100210 752) "Restore window points when returning to buffers" nil single "melpa" nil nil nil] [cl-struct-package-desc pointback (0 2) "Restore window points when returning to buffers" nil single "marmalade" nil nil nil])
  (color-theme-molokai [cl-struct-package-desc color-theme-molokai (0 1) "Molokai color theme by Lloyd" nil single "marmalade" nil nil nil])
  (jump-char [cl-struct-package-desc jump-char (20130529 1652) "navigation by char" nil single "melpa" nil nil nil] [cl-struct-package-desc jump-char (0 1) "navigation by char" nil single "marmalade" nil nil nil])
  (highlight-80+ [cl-struct-package-desc highlight-80+ (1 0) "highlight characters beyond column 80" nil single "marmalade" nil nil nil])
  (magit-gh-pulls [cl-struct-package-desc magit-gh-pulls (20140121 2042) "GitHub pull requests extension for Magit" ((gh (0 4 3)) (magit (1 1 0)) (pcache (0 2 3)) (s (1 6 1))) single "melpa" nil nil nil] [cl-struct-package-desc magit-gh-pulls (0 3) "GitHub pull requests extension for Magit" ((gh (0 4 3)) (magit (1 1 0))) single "marmalade" nil nil nil])
  (eh-keybindings [cl-struct-package-desc eh-keybindings (0 0 1) "tuamshu's emacs keybindings" ((eh-functions (0 0 1)) (starter-kit-bindings (2 0 2))) tar "marmalade" nil nil nil])
  (eh-functions [cl-struct-package-desc eh-functions (0 0 1) "tuamshu's emacs functions" ((starter-kit (2 0 2))) tar "marmalade" nil nil nil])
  (eh-gnus [cl-struct-package-desc eh-gnus (0 0 6) "tuamshu's gnus configure" nil tar "marmalade" nil nil nil])
  (eh-basic [cl-struct-package-desc eh-basic (0 0 2) "tuamshu's emacs basic configure" ((starter-kit (2 0 2)) (browse-kill-ring (1 3 1))) tar "marmalade" nil nil nil])
  (org-mime [cl-struct-package-desc org-mime (20120112) "org html export for text/html MIME emails" nil single "marmalade" nil nil nil])
  (peep-open [cl-struct-package-desc peep-open (0 0 2) "PeepOpen plugin for emacs." nil single "marmalade" nil nil nil])
  (ctags-update [cl-struct-package-desc ctags-update (20131125 743) "(auto) update TAGS in parent directory using exuberant-ctags" nil single "melpa" nil nil nil] [cl-struct-package-desc ctags-update (0 1 2) "auto update TAGS in parent directory using exuberant-ctags -*- coding:utf-8 -*-" nil single "marmalade" nil nil nil])
  (color-theme-cobalt [cl-struct-package-desc color-theme-cobalt (0 0 2) "Cobalt Color Theme for Emacs" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (cl-format [cl-struct-package-desc cl-format (1 1) "CL format routine." nil tar "marmalade" nil nil nil])
  (color-theme-sanityinc-tomorrow [cl-struct-package-desc color-theme-sanityinc-tomorrow (20140220 26) "A version of Chris Kempson's various Tomorrow themes" nil tar "melpa" nil nil nil] [cl-struct-package-desc color-theme-sanityinc-tomorrow (1 10) "A version of Chris Kempson's various Tomorrow themes" nil tar "marmalade" nil nil nil])
  (rcirc-ucomplete [cl-struct-package-desc rcirc-ucomplete (1 0 1) "Unambiguous non-cycling completion for rcirc" nil single "marmalade" nil nil nil])
  (rcirc-color [cl-struct-package-desc rcirc-color (20140131 656) "color nicks" nil single "melpa" nil nil nil] [cl-struct-package-desc rcirc-color (0 2) "color nicks" nil single "marmalade" nil nil nil])
  (quickrun [cl-struct-package-desc quickrun (20140227 749) "Run commands quickly" nil single "melpa" nil nil nil] [cl-struct-package-desc quickrun (1 8 4) "Run commands quickly" nil single "marmalade" nil nil nil])
  (sauron [cl-struct-package-desc sauron (20130818 1134) "Track (erc/org/dbus/...) events and react to them." nil tar "melpa" nil nil nil] [cl-struct-package-desc sauron (0 8) "Track (erc/org/dbus/...) events and react to them." nil tar "marmalade" nil nil nil])
  (color-theme-library [cl-struct-package-desc color-theme-library (0 0 10) "The real color theme functions" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (git-commit [cl-struct-package-desc git-commit (0 1) "Major mode for editing git commit messages" nil single "marmalade" nil nil nil])
  (d-mode [cl-struct-package-desc d-mode (20140206 1054) "D Programming Language mode for (X)Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc d-mode (2 0 4) "D Programming Language mode for (X)Emacs" nil tar "marmalade" nil nil nil])
  (httpcode [cl-struct-package-desc httpcode (20121001 2045) "explains the meaning of an HTTP status code" nil single "melpa" nil nil nil] [cl-struct-package-desc httpcode (0 1) "explains the meaning of an HTTP status code" nil single "marmalade" nil nil nil])
  (simp [cl-struct-package-desc simp (20140213 1816) "Simple project definition, chiefly for file finding, and grepping" nil tar "melpa" nil nil nil] [cl-struct-package-desc simp (0 2 0) "Simple project definition, chiefly for project file finding and grepping." nil tar "marmalade" nil nil nil])
  (tidy [cl-struct-package-desc tidy (20111222 1756) "Interface to the HTML Tidy program" nil single "melpa" nil nil nil] [cl-struct-package-desc tidy (2 12) "Interface to the HTML Tidy program" nil single "marmalade" nil nil nil])
  (inf-groovy [cl-struct-package-desc inf-groovy (2 0) "minor-mode that adds some Grails project management to a grails project" nil single "marmalade" nil nil nil])
  (grails-mode [cl-struct-package-desc grails-mode (0 1) "minor-mode that adds some Grails project management to a grails project" nil single "marmalade" nil nil nil])
  (abl-mode [cl-struct-package-desc abl-mode (20140129 2334) "Python TDD minor mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc abl-mode (0 9 0) "Python TDD minor mode" nil single "marmalade" nil nil nil])
  (tabula-rasa-mode [cl-struct-package-desc tabula-rasa-mode (0 1 0) "Distraction free writing mode" nil single "marmalade" nil nil nil])
  (smartrep [cl-struct-package-desc smartrep (20140120 1313) "Support sequential operation which omitted prefix keys." nil single "melpa" nil nil nil] [cl-struct-package-desc smartrep (0 0 3) "Support sequential operation which omitted prefix keys." nil single "marmalade" nil nil nil])
  (sentence-highlight [cl-struct-package-desc sentence-highlight (20121026 1450) "highlight the current sentence" nil single "melpa" nil nil nil] [cl-struct-package-desc sentence-highlight (0 1) "highlight the current sentence" nil single "marmalade" nil nil nil])
  (bookmark+ [cl-struct-package-desc bookmark+ (20140308 336) "Bookmark+: extensions to standard library `bookmark.el'." nil tar "melpa" nil nil nil] [cl-struct-package-desc bookmark+ (20111214) "Bookmark Plus" nil tar "marmalade" nil nil nil])
  (otp [cl-struct-package-desc otp (1 0) "a one-time password creator" nil single "marmalade" nil nil nil])
  (org-cua-dwim [cl-struct-package-desc org-cua-dwim (20120202 2134) "Org-mode and Cua mode compatibility layer" nil single "melpa" nil nil nil] [cl-struct-package-desc org-cua-dwim (0 5) "Org-mode and Cua mode compatibility layer" nil single "marmalade" nil nil nil])
  (tintin-mode [cl-struct-package-desc tintin-mode (1 0 0) "Mayor mode for editing tintin++ scripts" nil single "marmalade" nil nil nil])
  (flymake-css [cl-struct-package-desc flymake-css (20121104 1104) "Flymake support for css using csslint" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-css (0 3) "Flymake support for css using csslint" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (etags-table [cl-struct-package-desc etags-table (20130824 1157) "Set tags table(s) based on current file" nil single "melpa" nil nil nil] [cl-struct-package-desc etags-table (1 1) "Set tags table(s) based on current file" nil single "marmalade" nil nil nil])
  (etags-select [cl-struct-package-desc etags-select (1 13) "Select from multiple tags" nil single "marmalade" nil nil nil])
  (solarized-theme [cl-struct-package-desc solarized-theme (20140310 30) "The Solarized color theme, ported to Emacs." nil tar "melpa" nil nil nil] [cl-struct-package-desc solarized-theme (1 0 0) "The Solarized color theme, ported to Emacs." nil tar "marmalade" nil nil nil])
  (zenburn-theme [cl-struct-package-desc zenburn-theme (20140309 2358) "A low contrast color theme for Emacs." nil single "melpa" nil nil nil] [cl-struct-package-desc zenburn-theme (2 1) "A low contrast color theme for Emacs." nil single "marmalade" nil nil nil])
  (typing [cl-struct-package-desc typing (20121026 2118) "The Typing Of Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc typing (1 1 4) "A game for fast typers, inspired by The Typing Of The Dead." nil single "marmalade" nil nil nil])
  (flymake-csslint [cl-struct-package-desc flymake-csslint (1 1 0) "making flymake work with CSSLint" ((flymake (0 3))) tar "marmalade" nil nil nil])
  (vimgolf [cl-struct-package-desc vimgolf (20120228 550) "VimGolf interface for the One True Editor" nil single "melpa" nil nil nil] [cl-struct-package-desc vimgolf (0 9 2) "VimGolf interface for the One True Editor" nil single "marmalade" nil nil nil])
  (nginx-mode [cl-struct-package-desc nginx-mode (20131223 44) "major mode for editing nginx config files" nil single "melpa" nil nil nil] [cl-struct-package-desc nginx-mode (1 1) "major mode for editing nginx config files" nil single "marmalade" nil nil nil])
  (key-combo [cl-struct-package-desc key-combo (20131205 1338) "map key sequence to commands" nil tar "melpa" nil nil nil] [cl-struct-package-desc key-combo (1 5 1) "map key sequence to commands" nil single "marmalade" nil nil nil])
  (j-mode [cl-struct-package-desc j-mode (20140121 1125) "Major mode for editing J programs" nil tar "melpa" nil nil nil] [cl-struct-package-desc j-mode (0 3) "Major mode for editing J programs" nil single "marmalade" nil nil nil])
  (win-switch [cl-struct-package-desc win-switch (20130202 937) "fast, dynamic bindings for window-switching/resizing" nil single "melpa" nil nil nil] [cl-struct-package-desc win-switch (1 0 8) "fast, dynamic bindings for window-switching/resizing" nil single "marmalade" nil nil nil])
  (ssh-config-mode [cl-struct-package-desc ssh-config-mode (20120513 2233) "Mode for fontification of ~/.ssh/config" nil single "melpa" nil nil nil] [cl-struct-package-desc ssh-config-mode (1 13) "Mode for fontification of ~/.ssh/config" nil single "marmalade" nil nil nil])
  (nlet [cl-struct-package-desc nlet (1 10) "schemes 'named let' for emacs." nil single "marmalade" nil nil nil])
  (perl-myvar [cl-struct-package-desc perl-myvar (1 25) "Declare lexicaly scoped vars as my()." nil single "marmalade" nil nil nil])
  (dna-mode [cl-struct-package-desc dna-mode (20130821 1105) "a major mode for editing dna sequences" nil tar "melpa" nil nil nil] [cl-struct-package-desc dna-mode (1 44) "a major mode for editing dna sequences" nil single "marmalade" nil nil nil])
  (color-theme-gruber-darker [cl-struct-package-desc color-theme-gruber-darker (1) "Gruber Darker color theme for Emacs by Jason Blevins" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (find-things-fast [cl-struct-package-desc find-things-fast (20120920 1804) "Find things fast, leveraging the power of git" nil single "melpa" nil nil nil] [cl-struct-package-desc find-things-fast (20111123) "An emacs mode to find things fast and move around in a project quickly" nil tar "marmalade" nil nil nil])
  (idle-require [cl-struct-package-desc idle-require (20090715 1503) "load elisp libraries while Emacs is idle" nil single "melpa" nil nil nil] [cl-struct-package-desc idle-require (1 0) "load elisp libraries while Emacs is idle" nil single "marmalade" nil nil nil])
  (mocker [cl-struct-package-desc mocker (20131006 934) "mocking framework for emacs" ((eieio (1 3)) (el-x (0 2 4))) single "melpa" nil nil nil] [cl-struct-package-desc mocker (0 3 0) "mocking framework for emacs" ((eieio (1 3)) (el-x (0 2 4))) single "marmalade" nil nil nil])
  (pcache [cl-struct-package-desc pcache (20131201 1159) "persistent caching for Emacs" ((eieio (1 3))) single "melpa" nil nil nil] [cl-struct-package-desc pcache (0 2 4) "persistent caching for Emacs" ((eieio (1 3))) single "marmalade" nil nil nil])
  (org2blog [cl-struct-package-desc org2blog (20130707 323) "Blog from Org mode to wordpress" ((org (7 8)) (xml-rpc (1 6 8)) (metaweblog (0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc org2blog (0 5) "Blog from Org mode to wordpress" ((org (7 7)) (xml-rpc (1 6 8))) tar "marmalade" nil nil nil])
  (el-autoyas [cl-struct-package-desc el-autoyas (20120918 617) "Automatically create Emacs-Lisp Yasnippets" nil tar "melpa" nil nil nil] [cl-struct-package-desc el-autoyas (0 5) "Automatically create Emacs-Lisp Yasnippets" nil single "marmalade" nil nil nil])
  (wcheck-mode [cl-struct-package-desc wcheck-mode (20130613 808) "General interface for text checkers" nil single "melpa" nil nil nil] [cl-struct-package-desc wcheck-mode (2013 6 25) "General interface for text checkers" nil tar "marmalade" nil nil nil])
  (n3-mode [cl-struct-package-desc n3-mode (20130116 1429) "mode for Notation 3" nil single "melpa" nil nil nil] [cl-struct-package-desc n3-mode (20071215) "mode for Notation 3" nil single "marmalade" nil nil nil])
  (project-mode [cl-struct-package-desc project-mode (1 0) "Define code projects. Full-text search, etc." ((levenshtein (1 0))) single "marmalade" nil nil nil])
  (boxquote [cl-struct-package-desc boxquote (20081011 1326) "Quote text with a semi-box." nil single "melpa" nil nil nil] [cl-struct-package-desc boxquote (1 23) "Quote text with a semi-box." nil single "marmalade" nil nil nil])
  (hippie-expand-slime [cl-struct-package-desc hippie-expand-slime (20130907 132) "Hook slime's completion into hippie-expand" nil single "melpa" nil nil nil] [cl-struct-package-desc hippie-expand-slime (0 1) "Hook slime's completion into hippie-expand" nil single "marmalade" nil nil nil])
  (move-text [cl-struct-package-desc move-text (20140307 1644) "Move current line or region with M-up or M-down." nil single "melpa" nil nil nil] [cl-struct-package-desc move-text (1 0) "Move current line or region with M-up or M-down." nil single "marmalade" nil nil nil])
  (mwe-log-commands [cl-struct-package-desc mwe-log-commands (20100703 541) "log keyboard commands to buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc mwe-log-commands (20041106) "log keyboard commands to buffer" nil single "marmalade" nil nil nil])
  (sml-modeline [cl-struct-package-desc sml-modeline (0 5) "Show position in a scrollbar like way in mode-line" nil single "marmalade" nil nil nil])
  (mldonkey [cl-struct-package-desc mldonkey (0 0 4) "Multi-networks peer-to-peer client." nil tar "marmalade" nil nil nil])
  (wget [cl-struct-package-desc wget (1 94) "Emacs-wget is an interface program of GNU wget on Emacs." nil tar "marmalade" nil nil nil])
  (centered-cursor-mode [cl-struct-package-desc centered-cursor-mode (20131121 1237) "cursor stays vertically centered" nil single "melpa" nil nil nil] [cl-struct-package-desc centered-cursor-mode (0 5 1) "cursor stays vertically centered" nil single "marmalade" nil nil nil])
  (evernote-mode [cl-struct-package-desc evernote-mode (0 41) "Evernote client for Emacs" nil tar "marmalade" nil nil nil])
  (rect-mark [cl-struct-package-desc rect-mark (1 4) "Mark a rectangle of text with highlighting." nil single "marmalade" nil nil nil])
  (pretty-lambdada [cl-struct-package-desc pretty-lambdada (20131227 148) "Show the word `lambda' as the Greek letter." nil single "melpa" nil nil nil] [cl-struct-package-desc pretty-lambdada (22 0) "Show the word `lambda' as the Greek letter." nil single "marmalade" nil nil nil])
  (ruby-block [cl-struct-package-desc ruby-block (20131211 331) "highlight matching block" nil single "melpa" nil nil nil] [cl-struct-package-desc ruby-block (0 0 11) "highlight matching block" nil single "marmalade" nil nil nil])
  (clojure-project-mode [cl-struct-package-desc clojure-project-mode (1 0) "Extends project-mode for Clojure projects" ((project-mode (1 0))) single "marmalade" nil nil nil])
  (gopher [cl-struct-package-desc gopher (0 0 2) "easily access and navigate Gopher servers" nil single "marmalade" nil nil nil])
  (levenshtein [cl-struct-package-desc levenshtein (20051013 1756) "Edit distance between two strings." nil single "melpa" nil nil nil] [cl-struct-package-desc levenshtein (1 0) "Edit distance between two strings." nil single "marmalade" nil nil nil])
  (peepopen [cl-struct-package-desc peepopen (0 1 0) "Graphical file chooser for Emacs on Mac OS X." nil single "marmalade" nil nil nil])
  (jenkins-watch [cl-struct-package-desc jenkins-watch (20121004 1626) "Watch continuous integration build status" nil single "melpa" nil nil nil] [cl-struct-package-desc jenkins-watch (1 2) "Watch continuous integration build status -*- indent-tabs-mode: t; tab-width: 8 -*-" nil single "marmalade" nil nil nil])
  (creole [cl-struct-package-desc creole (20130802 122) "A parser for the Creole Wiki language" ((noflet (0 0 3)) (kv (0 0 17))) single "melpa" nil nil nil] [cl-struct-package-desc creole (1 0 3) "A parser for the Creole Wiki language" ((noflet (0 0 3)) (kv (0 0 17))) single "marmalade" nil nil nil])
  (iy-go-to-char [cl-struct-package-desc iy-go-to-char (20130901 729) "Go to next CHAR which is similar to \"f\" and \"t\" in vim" nil single "melpa" nil nil nil] [cl-struct-package-desc iy-go-to-char (1 0) "Go to next CHAR which is similar to \"f\" in vim" nil single "marmalade" nil nil nil])
  (emacsd-tile [cl-struct-package-desc emacsd-tile (0 1) "tiling windows for emacs" nil single "marmalade" nil nil nil])
  (lineno [cl-struct-package-desc lineno (0 1) "Alternate mode to display line numbers." nil single "marmalade" nil nil nil])
  (citrus-mode [cl-struct-package-desc citrus-mode (0 0 2) "Major mode for editing Citrus files" nil single "marmalade" nil nil nil])
  (jabber [cl-struct-package-desc jabber (20140225 131) "A Jabber client for Emacs." nil tar "melpa" nil nil nil] [cl-struct-package-desc jabber (0 8 90) "A Jabber client for Emacs." nil tar "marmalade" nil nil nil])
  (rudel [cl-struct-package-desc rudel (0 3) "A collaborative editing framework for Emacs" ((eieio (1 4))) tar "marmalade" nil nil nil])
  (pysmell [cl-struct-package-desc pysmell (0 7 2) "Complete python code using heuristic static analysis" nil single "marmalade" nil nil nil])
  (pymacs [cl-struct-package-desc pymacs (0 25) "Interface between Emacs Lisp and Python" nil single "marmalade" nil nil nil])
  (gtags [cl-struct-package-desc gtags (3 3) "gtags facility for Emacs" nil single "marmalade" nil nil nil])
  (window-number [cl-struct-package-desc window-number (20140124 302) "Select windows by numbers." nil single "melpa" nil nil nil] [cl-struct-package-desc window-number (1 0 1) "Jump to a window by number" nil single "marmalade" nil nil nil])
  (member-function [cl-struct-package-desc member-function (0 3 1) "expand member functions for C++ classes" nil single "marmalade" nil nil nil])
  (recursive-narrow [cl-struct-package-desc recursive-narrow (20111019 1608) "narrow-to-region that operates recursively" nil single "melpa" nil nil nil] [cl-struct-package-desc recursive-narrow (1 0) "narrow-to-region that operates recursively" nil single "marmalade" nil nil nil])
  (loccur [cl-struct-package-desc loccur (20131022 219) "Performs an occur-like folding in current buffer." nil single "melpa" nil nil nil] [cl-struct-package-desc loccur (1 1 1) "Perform an occur-like folding in current buffer" nil single "marmalade" nil nil nil])
  (guess-offset [cl-struct-package-desc guess-offset (0 1 1) "Automatically determine c-basic-offset" nil single "marmalade" nil nil nil])
  (command-frequency [cl-struct-package-desc command-frequency (1 1) "Track command frequencies" nil single "marmalade" nil nil nil])
  (cache [cl-struct-package-desc cache (20111019 1600) "implementation of a hash table whose key-value pairs expire" nil single "melpa" nil nil nil] [cl-struct-package-desc cache (0 1) "implementation of a hash table whose key-value pairs expire" nil single "marmalade" nil nil nil])
  (pastebin [cl-struct-package-desc pastebin (20101125 1955) "A simple interface to the www.pastebin.com webservice" nil single "melpa" nil nil nil] [cl-struct-package-desc pastebin (0 1) "A simple interface to the www.pastebin.com webservice" nil single "marmalade" nil nil nil])
  (pager [cl-struct-package-desc pager (20100330 1131) "windows-scroll commands" nil single "melpa" nil nil nil] [cl-struct-package-desc pager (2 0) "windows-scroll commands" nil single "marmalade" nil nil nil])
  (p4 [cl-struct-package-desc p4 (20140308 1048) "Simple Perforce-Emacs Integration" nil single "melpa" nil nil nil] [cl-struct-package-desc p4 (11 0) "Perforce-Emacs Integration Library" nil single "marmalade" nil nil nil])
  (gccsense [cl-struct-package-desc gccsense (0 2) "GCCSense client for Emacs" nil single "marmalade" nil nil nil])
  (doc-mode [cl-struct-package-desc doc-mode (0 2) "convenient editing of in-code documentation" nil single "marmalade" nil nil nil])
  (flymake-jshint [cl-struct-package-desc flymake-jshint (20140115 1040) "making flymake work with JSHint" ((flymake-easy (0 8))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-jshint (1 0) "making flymake work with JSHint" nil single "marmalade" nil nil nil])
  (flymake-php [cl-struct-package-desc flymake-php (20121104 1102) "A flymake handler for php-mode files" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-php (0 5) "A flymake handler for php-mode files" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (rinari [cl-struct-package-desc rinari (20131117 737) "Rinari Is Not A Rails IDE" ((ruby-mode (1 0)) (inf-ruby (2 2 5)) (ruby-compilation (0 16)) (jump (2 0))) single "melpa" nil nil nil] [cl-struct-package-desc rinari (2 10) "Rinari Is Not A Rails IDE" ((ruby-mode (1 0)) (inf-ruby (2 2 1)) (ruby-compilation (0 8)) (jump (2 0))) single "marmalade" nil nil nil])
  (ruby-compilation [cl-struct-package-desc ruby-compilation (20130429 611) "run a ruby process in a compilation buffer" ((inf-ruby (2 2 1))) single "melpa" nil nil nil] [cl-struct-package-desc ruby-compilation (0 17) "run a ruby process in a compilation buffer" ((inf-ruby (2 2 1))) single "marmalade" nil nil nil])
  (scheme-complete [cl-struct-package-desc scheme-complete (20130220 403) "Smart tab completion for Scheme in Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc scheme-complete (0 8 2) "Smart tab completion for Emacs" nil single "marmalade" nil nil nil])
  (winpoint [cl-struct-package-desc winpoint (20131023 1013) "Remember buffer positions per-window, not per buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc winpoint (1 4) "Remember buffer positions per-window, not per buffer" nil single "marmalade" nil nil nil])
  (macro-math [cl-struct-package-desc macro-math (20130328 904) "in-buffer mathematical operations" nil single "melpa" nil nil nil] [cl-struct-package-desc macro-math (1 0) "in-buffer mathematical operations" nil single "marmalade" nil nil nil])
  (javadoc-help [cl-struct-package-desc javadoc-help (1 0) "Javadoc-Help.  Look up Java class on online javadocs in browser." nil single "marmalade" nil nil nil])
  (save-visited-files [cl-struct-package-desc save-visited-files (20131224 1528) "save opened files across sessions" nil single "melpa" nil nil nil] [cl-struct-package-desc save-visited-files (1 3) "save opened files across sessions" nil single "marmalade" nil nil nil])
  (tabkey2 [cl-struct-package-desc tabkey2 (1 40) "Use second tab key pressed for what you want" nil single "marmalade" nil nil nil])
  (regex-tool [cl-struct-package-desc regex-tool (20131104 1434) "A regular expression evaluation tool for programmers" nil single "melpa" nil nil nil] [cl-struct-package-desc regex-tool (1 2) "A regular expression evaluation tool for programmers" nil single "marmalade" nil nil nil])
  (flymake-sass [cl-struct-package-desc flymake-sass (20140308 325) "Flymake handler for sass and scss files" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-sass (0 6) "Flymake handler for sass files" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (wikidoc [cl-struct-package-desc wikidoc (0 8 1) "use elisp doc strings to make other documentation" nil single "marmalade" nil nil nil])
  (pytest [cl-struct-package-desc pytest (0 2 1) "Easy Python test running in Emacs" nil single "marmalade" nil nil nil])
  (mic-paren [cl-struct-package-desc mic-paren (20120716 1647) "advanced highlighting of matching parentheses" nil single "melpa" nil nil nil] [cl-struct-package-desc mic-paren (3 8) "advanced highlighting of matching parentheses" nil single "marmalade" nil nil nil])
  (highline [cl-struct-package-desc highline (7 2 2) "minor mode to highlight current line in buffer" nil single "marmalade" nil nil nil])
  (apache-mode [cl-struct-package-desc apache-mode (20080905 553) "major mode for editing Apache configuration files" nil single "melpa" nil nil nil] [cl-struct-package-desc apache-mode (2 0) "major mode for editing Apache configuration files" nil single "marmalade" nil nil nil])
  (color-theme-colorful-obsolescence [cl-struct-package-desc color-theme-colorful-obsolescence (0 0 1) "Colorful Obsolescence theme designed for partially transparent windows" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-active [cl-struct-package-desc color-theme-active (0 0 1) "Active theme inspired by jEdit theme of the same name" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-wombat+ [cl-struct-package-desc color-theme-wombat+ (0 0 2) "wombat with improvements and many more faces" ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-wombat [cl-struct-package-desc color-theme-wombat (0 0 1) "The wombat color theme for Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-blackboard [cl-struct-package-desc color-theme-blackboard (0 0 2) "Blackboard Colour Theme for Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (dart-mode [cl-struct-package-desc dart-mode (20130906 1244) "Major mode for editing Dart files" nil single "melpa" nil nil nil] [cl-struct-package-desc dart-mode (0 9) "Major mode for editing Dart files" nil single "marmalade" nil nil nil])
  (flymake-jslint [cl-struct-package-desc flymake-jslint (20130613 202) "A flymake handler for javascript using jslint" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-jslint (0 10) "A flymake handler for javascript using jslint" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (rcirc-notify [cl-struct-package-desc rcirc-notify (20130905 203) "libnotify popups" nil single "melpa" nil nil nil] [cl-struct-package-desc rcirc-notify (0 6) "libnotify popups" nil single "marmalade" nil nil nil])
  (ac-ja [cl-struct-package-desc ac-ja (0 0 1) "auto-complete-mode source for Japanese " nil single "marmalade" nil nil nil])
  (flymake-shell [cl-struct-package-desc flymake-shell (20121104 1100) "A flymake syntax-checker for shell scripts" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-shell (0 8) "A flymake syntax-checker for shell scripts" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (smart-tab [cl-struct-package-desc smart-tab (20130317 1157) "Intelligent tab completion and indentation." nil single "melpa" nil nil nil] [cl-struct-package-desc smart-tab (0 3) "Intelligent tab completion and indentation." nil single "marmalade" nil nil nil])
  (session [cl-struct-package-desc session (20120510 1700) "use variables, registers and buffer places across sessions" nil single "melpa" nil nil nil] [cl-struct-package-desc session (2 2 1) "use variables, registers and buffer places across sessions" nil single "marmalade" nil nil nil])
  (popwin [cl-struct-package-desc popwin (20140309 745) "Popup Window Manager." nil single "melpa" nil nil nil] [cl-struct-package-desc popwin (0 4) "Popup Window Manager." nil single "marmalade" nil nil nil])
  (crontab-mode [cl-struct-package-desc crontab-mode (20090510 1355) "Mode for editing crontab files" nil single "melpa" nil nil nil] [cl-struct-package-desc crontab-mode (1 2) "Mode for editing crontab files" nil single "marmalade" nil nil nil])
  (dsvn [cl-struct-package-desc dsvn (20130120 1257) "Subversion interface" nil single "melpa" nil nil nil] [cl-struct-package-desc dsvn (922257) "Subversion interface" nil single "marmalade" nil nil nil])
  (hl-sexp [cl-struct-package-desc hl-sexp (20101130 443) "highlight the current sexp" nil single "melpa" nil nil nil] [cl-struct-package-desc hl-sexp (1 0 0) "highlight the current sexp" nil single "marmalade" nil nil nil])
  (scratch [cl-struct-package-desc scratch (20120830 1028) "Mode-specific scratch buffers" nil tar "melpa" nil nil nil] [cl-struct-package-desc scratch (20110708) "Mode-specific scratch buffers" nil single "marmalade" nil nil nil])
  (elisp-cache [cl-struct-package-desc elisp-cache (1 15) "Faster emacs startup through byte-compiling." nil single "marmalade" nil nil nil])
  (vc-darcs [cl-struct-package-desc vc-darcs (20090617 1105) "a VC backend for darcs" nil single "melpa" nil nil nil] [cl-struct-package-desc vc-darcs (1 12) "a VC backend for darcs" nil single "marmalade" nil nil nil])
  (ac-slime [cl-struct-package-desc ac-slime (20131005 326) "An auto-complete source using slime completions" nil single "melpa" nil nil nil] [cl-struct-package-desc ac-slime (0 5) "An auto-complete source using slime completions" nil single "marmalade" nil nil nil])
  (lua-mode [cl-struct-package-desc lua-mode (20140306 2249) "a major-mode for editing Lua scripts" nil single "melpa" nil nil nil] [cl-struct-package-desc lua-mode (20110428) "a major-mode for editing Lua scripts" nil single "marmalade" nil nil nil])
  (elnode [cl-struct-package-desc elnode (20140203 1506) "The Emacs webserver." ((web (0 1 4)) (dash (1 1 0)) (noflet (0 0 7)) (s (1 5 0)) (creole (0 8 14)) (fakir (0 1 6)) (db (0 0 5)) (kv (0 0 17))) tar "melpa" nil nil nil] [cl-struct-package-desc elnode (0 9 9 7 6) "The Emacs webserver." ((web (0 1 4)) (dash (1 1 0)) (noflet (0 0 7)) (s (1 5 0)) (creole (0 8 14)) (fakir (0 1 6)) (db (0 0 5)) (kv (0 0 17))) tar "marmalade" nil nil nil])
  (ahg [cl-struct-package-desc ahg (20140214 503) "Alberto's Emacs interface for Mercurial (Hg)" nil single "melpa" nil nil nil] [cl-struct-package-desc ahg (0 99) "Alberto's Emacs interface for Mercurial (Hg)" nil single "marmalade" nil nil nil])
  (org-email [cl-struct-package-desc org-email (1 0) "use org for an email database -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (ghc [cl-struct-package-desc ghc (20140112 2021) "Sub mode for Haskell mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc ghc (1 10 2) "Happy Haskell programming on Emacs" ((haskell-mode (2 8 0))) tar "marmalade" nil nil nil])
  (color-theme-actress [cl-struct-package-desc color-theme-actress (0 2 2) "A dark color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (csharp-mode [cl-struct-package-desc csharp-mode (20130824 1200) "C# mode derived mode" nil single "melpa" nil nil nil] [cl-struct-package-desc csharp-mode (0 8 6) "C# mode derived mode" nil single "marmalade" nil nil nil])
  (dedicated [cl-struct-package-desc dedicated (20090428 1231) "A very simple minor mode for dedicated buffers" nil single "melpa" nil nil nil] [cl-struct-package-desc dedicated (1 0 0) "A very simple minor mode for dedicated buffers" nil single "marmalade" nil nil nil])
  (projectile [cl-struct-package-desc projectile (20140308 541) "Manage and navigate projects in Emacs easily" ((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4))) single "melpa" nil nil nil] [cl-struct-package-desc projectile (0 10 0) "Manage and navigate projects in Emacs easily" ((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4))) single "marmalade" nil nil nil])
  (lolcode-mode [cl-struct-package-desc lolcode-mode (20111002 147) "Major mode for editing LOLCODE" nil single "melpa" nil nil nil] [cl-struct-package-desc lolcode-mode (0 2) "Major mode for editing LOLCODE" nil single "marmalade" nil nil nil])
  (evil-numbers [cl-struct-package-desc evil-numbers (20121108 1738) "increment/decrement numbers like in vim" nil single "melpa" nil nil nil] [cl-struct-package-desc evil-numbers (0 3) "increment/decrement numbers like in vim" nil single "marmalade" nil nil nil])
  (desktop [cl-struct-package-desc desktop (0 1) "save partial status of Emacs when killed" nil single "marmalade" nil nil nil])
  (sr-speedbar [cl-struct-package-desc sr-speedbar (20131207 2049) "Same frame speedbar" nil single "melpa" nil nil nil] [cl-struct-package-desc sr-speedbar (0 1 8) "Same frame speedbar" nil single "marmalade" nil nil nil])
  (xml-rpc [cl-struct-package-desc xml-rpc (20130423 1356) "An elisp implementation of clientside XML-RPC" nil single "melpa" nil nil nil] [cl-struct-package-desc xml-rpc (1 6 8) "An elisp implementation of clientside XML-RPC" nil single "marmalade" nil nil nil])
  (textmate [cl-struct-package-desc textmate (20110816 1446) "TextMate minor mode for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc textmate (5) "TextMate minor mode for Emacs" nil single "marmalade" nil nil nil])
  (cmake-mode [cl-struct-package-desc cmake-mode (20140217 659) "major-mode for editing CMake sources" nil single "melpa" nil nil nil] [cl-struct-package-desc cmake-mode (20110824) "Major mode for editing CMake sources." nil single "marmalade" nil nil nil])
  (wisp-mode [cl-struct-package-desc wisp-mode (20140226 214) "Tools for wisp: the Whitespace-to-Lisp preprocessor" nil single "melpa" nil nil nil] [cl-struct-package-desc wisp-mode (0 1 5) "Tools for wisp: the Whitespace-to-Lisp preprocessor" nil single "marmalade" nil nil nil])
  (jira [cl-struct-package-desc jira (20131210 1822) "Connect to JIRA issue tracking software" nil single "melpa" nil nil nil] [cl-struct-package-desc jira (0 3 3) "Connect to JIRA issue tracking software" nil single "marmalade" nil nil nil])
  (windsize [cl-struct-package-desc windsize (20110728 1336) "Simple, intuitive window resizing" nil single "melpa" nil nil nil] [cl-struct-package-desc windsize (0 1) "Simple, intuitive window resizing" nil single "marmalade" nil nil nil])
  (dtrt-indent [cl-struct-package-desc dtrt-indent (20130301 855) "Adapt to foreign indentation offsets" nil tar "melpa" nil nil nil] [cl-struct-package-desc dtrt-indent (0 2 0) "Adapt to foreign indentation offsets" nil single "marmalade" nil nil nil])
  (caml [cl-struct-package-desc caml (20130904 812) "No description available." nil tar "melpa" nil nil nil] [cl-struct-package-desc caml (3 12 0 1) "OCaml code editing commands for Emacs" nil tar "marmalade" nil nil nil])
  (ido-yes-or-no [cl-struct-package-desc ido-yes-or-no (1 1) "Use Ido to answer yes-or-no questions" ((ido (0))) single "marmalade" nil nil nil])
  (markdown-mode [cl-struct-package-desc markdown-mode (20131210 700) "Emacs Major mode for Markdown-formatted text files" nil single "melpa" nil nil nil] [cl-struct-package-desc markdown-mode (2 0) "Emacs Major mode for Markdown-formatted text files" nil single "marmalade" nil nil nil])
  (flymake-haml [cl-struct-package-desc flymake-haml (20130324 351) "A flymake handler for haml files" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-haml (0 7) "A flymake handler for haml files" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (flymake-coffee [cl-struct-package-desc flymake-coffee (20130828 258) "A flymake handler for coffee script" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-coffee (0 12) "A flymake handler for coffee script" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (yasnippet-bundle [cl-struct-package-desc yasnippet-bundle (0 6 1) "Yet another snippet extension (Auto compiled bundle)" nil single "marmalade" nil nil nil])
  (starter-kit-eshell [cl-struct-package-desc starter-kit-eshell (20121001 1714) "Saner defaults and goodies: eshell tweaks" nil single "melpa" nil nil nil] [cl-struct-package-desc starter-kit-eshell (2 0 3) "Saner defaults and goodies: eshell tweaks" nil single "marmalade" nil nil nil])
  (fsvn [cl-struct-package-desc fsvn (0 9 13) "Another frontend of subversion." nil tar "marmalade" nil nil nil])
  (django-theme [cl-struct-package-desc django-theme (20131022 202) "Custom face theme for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc django-theme (1 3 0) "Custom face theme for Emacs" nil single "marmalade" nil nil nil])
  (flymake-ruby [cl-struct-package-desc flymake-ruby (20121104 1059) "A flymake handler for ruby-mode files" ((flymake-easy (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc flymake-ruby (0 8) "A flymake handler for ruby-mode files" ((flymake-easy (0 1))) single "marmalade" nil nil nil])
  (clojurescript-mode [cl-struct-package-desc clojurescript-mode (0 5) "Major mode for ClojureScript code" nil single "marmalade" nil nil nil])
  (pony-mode [cl-struct-package-desc pony-mode (20140127 846) "Minor mode for working with Django Projects" nil tar "melpa" nil nil nil] [cl-struct-package-desc pony-mode (0 2) "Minor mode for working with Django Projects" nil tar "marmalade" nil nil nil])
  (deft [cl-struct-package-desc deft (20131027 757) "quickly browse, filter, and edit plain text notes" nil single "melpa" nil nil nil] [cl-struct-package-desc deft (0 3) "quickly browse, filter, and edit plain text notes" nil single "marmalade" nil nil nil])
  (gimme [cl-struct-package-desc gimme (2 1) "The XMMS2 interface we all love! Check out http://gimmeplayer.org for more info." nil tar "marmalade" nil nil nil])
  (color-theme-dg [cl-struct-package-desc color-theme-dg (0 1 0) "A black and green color theme for Emacs." ((color-theme (6 6 0))) single "marmalade" nil nil nil])
  (dizzee [cl-struct-package-desc dizzee (20111009 616) "A more pleasant way to manage your project's subprocesses in Emacs." nil tar "melpa" nil nil nil] [cl-struct-package-desc dizzee (0 1 1) "A more pleasant way to manage your project's subprocesses in Emacs." nil tar "marmalade" nil nil nil])
  (bigint [cl-struct-package-desc bigint (1 0 0) "A simple bigint package for emacs" nil single "marmalade" nil nil nil])
  (ido-ubiquitous [cl-struct-package-desc ido-ubiquitous (20140225 1639) "Use ido (nearly) everywhere." ((emacs (24 1))) single "melpa" nil nil nil] [cl-struct-package-desc ido-ubiquitous (2 10) "Use ido (nearly) everywhere." ((emacs (24 1))) single "marmalade" nil nil nil])
  (whole-line-or-region [cl-struct-package-desc whole-line-or-region (20110901 130) "operate on current line if region undefined" nil single "melpa" nil nil nil] [cl-struct-package-desc whole-line-or-region (1 3 1) "operate on current line if region undefined" nil single "marmalade" nil nil nil])
  (org-magit [cl-struct-package-desc org-magit (20120820 1156) "basic support for magit links" ((magit (0 8)) (org (6 1))) single "melpa" nil nil nil] [cl-struct-package-desc org-magit (0 2 0) "basic support for magit links" ((magit (0 8)) (org (6 1))) single "marmalade" nil nil nil])
  (erc-hl-nicks [cl-struct-package-desc erc-hl-nicks (20130114 1348) "ERC nick highlighter that ignores uniquifying chars when colorizing" nil single "melpa" nil nil nil] [cl-struct-package-desc erc-hl-nicks (1 3 1) "ERC nick highlighter that ignores uniquifying chars when colorizing" nil single "marmalade" nil nil nil])
  (elisp-slime-nav [cl-struct-package-desc elisp-slime-nav (20140116 405) "Make M-. and M-, work in elisp like they do in slime" ((cl-lib (0 2))) single "melpa" nil nil nil] [cl-struct-package-desc elisp-slime-nav (0 7) "Make M-. and M-, work in elisp like they do in slime" ((cl-lib (0 2))) single "marmalade" nil nil nil])
  (color-theme-sanityinc-solarized [cl-struct-package-desc color-theme-sanityinc-solarized (20140220 27) "A version of Ethan Schoonover's Solarized themes" nil tar "melpa" nil nil nil] [cl-struct-package-desc color-theme-sanityinc-solarized (2 25) "A version of Ethan Schoonover's Solarized themes" nil tar "marmalade" nil nil nil])
  (ibuffer-vc [cl-struct-package-desc ibuffer-vc (20130924 608) "Group ibuffer's list by VC project, or show VC status" ((cl-lib (0 2))) single "melpa" nil nil nil] [cl-struct-package-desc ibuffer-vc (0 7) "Group ibuffer's list by VC project, or show VC status" ((cl-lib (0 2))) single "marmalade" nil nil nil])
  (magithub [cl-struct-package-desc magithub (0 2) "Magit extensions for using GitHub" ((magit (0 8)) (json (1 2))) single "marmalade" nil nil nil])
  (js-comint [cl-struct-package-desc js-comint (20080530 757) "Run javascript in an inferior process window." nil single "melpa" nil nil nil] [cl-struct-package-desc js-comint (0 0 1) "Run javascript in an inferior process window." nil single "marmalade" nil nil nil])
  (pp-c-l [cl-struct-package-desc pp-c-l (20131227 147) "Display Control-l characters in a pretty way" nil single "melpa" nil nil nil] [cl-struct-package-desc pp-c-l (1 0) "Display Control-l characters in a pretty way" nil single "marmalade" nil nil nil])
  (tuareg [cl-struct-package-desc tuareg (20140115 1030) "OCaml mode for Emacs." ((caml (3 12 0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc tuareg (2 0 8) "OCaml mode for Emacs" ((caml (3 12 0 1))) tar "marmalade" nil nil nil])
  (confluence [cl-struct-package-desc confluence (20130814 535) "Emacs mode for interacting with confluence wikis" ((xml-rpc (1 6 4))) tar "melpa" nil nil nil] [cl-struct-package-desc confluence (1 6) "Confluence major mode" ((xml-rpc (1 6 7))) tar "marmalade" nil nil nil])
  (fastnav [cl-struct-package-desc fastnav (20120211 657) "Fast navigation and editing routines." nil single "melpa" nil nil nil] [cl-struct-package-desc fastnav (1 0 7) "Fast navigation and editing routines." nil single "marmalade" nil nil nil])
  (midje-mode [cl-struct-package-desc midje-mode (20131019 1357) "Minor mode for running Midje tests in emacs" ((cider (0 1 4)) (clojure-mode (1 0))) tar "melpa" nil nil nil] [cl-struct-package-desc midje-mode (0 1 2) "Minor mode for running Midje tests in emacs, see: https://github.com/dnaumov/midje-mode" ((slime (1 0)) (clojure-mode (1 0))) tar "marmalade" nil nil nil])
  (pylint [cl-struct-package-desc pylint (20121112 435) "minor mode for running `pylint'" nil single "melpa" nil nil nil] [cl-struct-package-desc pylint (1 0) "run the python pylint checker putting hits in a grep buffer" nil single "marmalade" nil nil nil])
  (pyflakes [cl-struct-package-desc pyflakes (1 0) "run the python pyflakes checker putting hits in a grep buffer" nil single "marmalade" nil nil nil])
  (grin [cl-struct-package-desc grin (20110805 2358) "run grin and grind (python replacements for grep and find) putting hits in a grep buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc grin (1 0) "run grin and grind (python replacements for grep and find) putting hits in a grep buffer" nil single "marmalade" nil nil nil])
  (cppcheck [cl-struct-package-desc cppcheck (1 0) "run cppcheck putting hits in a grep buffer" nil single "marmalade" nil nil nil])
  (pep8 [cl-struct-package-desc pep8 (1 2) "run the python pep8 checker putting hits in a grep buffer" nil single "marmalade" nil nil nil])
  (httpd [cl-struct-package-desc httpd (1 0 1) "HTTP/1.0 web server for emacs" nil single "marmalade" nil nil nil])
  (ruby-test-mode [cl-struct-package-desc ruby-test-mode (20140220 1118) "Minor mode for Behaviour and Test Driven" ((ruby-mode (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc ruby-test-mode (1 7) "Minor mode for Behaviour and Test Driven" ((ruby-mode (1 0))) single "marmalade" nil nil nil])
  (closure-lint-mode [cl-struct-package-desc closure-lint-mode (20101118 1324) "minor mode for the Closure Linter" nil single "melpa" nil nil nil] [cl-struct-package-desc closure-lint-mode (0 1) "minor mode for the Closure Linter" nil single "marmalade" nil nil nil])
  (workgroups [cl-struct-package-desc workgroups (20110726 941) "workgroups for windows (for Emacs)" nil single "melpa" nil nil nil] [cl-struct-package-desc workgroups (0 2 0) "workgroups for windows (for Emacs)" nil single "marmalade" nil nil nil])
  (python-pylint [cl-struct-package-desc python-pylint (1 1) "minor mode for running `pylint'" nil single "marmalade" nil nil nil])
  (python-pep8 [cl-struct-package-desc python-pep8 (1 1) "minor mode for running `pep8'" nil single "marmalade" nil nil nil])
  (dired-details+ [cl-struct-package-desc dired-details+ (20131226 1832) "Enhancements to library `dired-details+.el'." ((dired-details (0))) single "melpa" nil nil nil] [cl-struct-package-desc dired-details+ (1 0) "Enhancements to library `dired-details+.el'." nil single "marmalade" nil nil nil])
  (dired-details [cl-struct-package-desc dired-details (20130824 1158) "make file details hide-able in dired" nil single "melpa" nil nil nil] [cl-struct-package-desc dired-details (1 3 1) "make file details hide-able in dired" nil single "marmalade" nil nil nil])
  (feature-mode [cl-struct-package-desc feature-mode (20140225 459) "Major mode for editing Gherkin (i.e. Cucumber) user stories" nil tar "melpa" nil nil nil] [cl-struct-package-desc feature-mode (0 4) "Major mode for editing Gherkin (i.e. Cucumber) user stories" nil tar "marmalade" nil nil nil])
  (highlight-indentation [cl-struct-package-desc highlight-indentation (20131207 835) "Minor modes for highlighting indentation" nil single "melpa" nil nil nil] [cl-struct-package-desc highlight-indentation (0 5 0) "Function for highlighting indentation" nil single "marmalade" nil nil nil])
  (scss-mode [cl-struct-package-desc scss-mode (20130105 1411) "Major mode for editing SCSS files" nil single "melpa" nil nil nil] [cl-struct-package-desc scss-mode (0 5 0) "Major mode for editing SCSS files" nil single "marmalade" nil nil nil])
  (virtualenv [cl-struct-package-desc virtualenv (20140220 1501) "Virtualenv for Python" nil single "melpa" nil nil nil] [cl-struct-package-desc virtualenv (1 2) "Virtualenv for Python  -*- coding: utf-8 -*-" nil single "marmalade" nil nil nil])
  (offlineimap [cl-struct-package-desc offlineimap (20130331 741) "Run OfflineIMAP from Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc offlineimap (0 1) "Run OfflineIMAP from Emacs" nil single "marmalade" nil nil nil])
  (dpaste [cl-struct-package-desc dpaste (20120823 1136) "Emacs integration for dpaste.com" nil single "melpa" nil nil nil] [cl-struct-package-desc dpaste (0 2) "Emacs integration for dpaste.com" nil single "marmalade" nil nil nil])
  (nose [cl-struct-package-desc nose (20140228 650) "Easy Python test running in Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc nose (0 1 1) "Easy Python test running in Emacs" nil single "marmalade" nil nil nil])
  (color-theme-dpaste [cl-struct-package-desc color-theme-dpaste (0 0 1) "Dpaste color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-github [cl-struct-package-desc color-theme-github (0 0 3) "Github color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-tango [cl-struct-package-desc color-theme-tango (0 0 2) "Tango palette color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (color-theme-railscasts [cl-struct-package-desc color-theme-railscasts (0 0 2) "Railscasts color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (bm [cl-struct-package-desc bm (20140303 1532) "Visible bookmarks in buffer." nil single "melpa" nil nil nil] [cl-struct-package-desc bm (1 53) "Visible bookmarks in buffer." nil single "marmalade" nil nil nil])
  (color-theme-eclipse [cl-struct-package-desc color-theme-eclipse (0 0 2) "Eclipse color theme for GNU Emacs." ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (mustache-mode [cl-struct-package-desc mustache-mode (20111003 1103) "A major mode for editing Mustache files." nil single "melpa" nil nil nil] [cl-struct-package-desc mustache-mode (1 2) "A major mode for editing Mustache files." nil single "marmalade" nil nil nil])
  (hl-sentence [cl-struct-package-desc hl-sentence (20110815 954) "highlight a sentence based on customizable face" nil single "melpa" nil nil nil] [cl-struct-package-desc hl-sentence (2) "highlight a sentence based on customizable face" nil single "marmalade" nil nil nil])
  (slime-ritz [cl-struct-package-desc slime-ritz (20130218 1537) "slime extensions for ritz" nil single "melpa" nil nil nil] [cl-struct-package-desc slime-ritz (0 6 0) "slime extensions for ritz" nil single "marmalade" nil nil nil])
  (starter-kit-bindings [cl-struct-package-desc starter-kit-bindings (20120101 1955) "Saner defaults and goodies: bindings" ((starter-kit (2 0 2))) single "melpa" nil nil nil] [cl-struct-package-desc starter-kit-bindings (2 0 2) "Saner defaults and goodies: bindings" ((starter-kit (2 0 2))) single "marmalade" nil nil nil])
  (erefactor [cl-struct-package-desc erefactor (20140119 901) "Emacs-Lisp refactoring utilities" nil single "melpa" nil nil nil] [cl-struct-package-desc erefactor (0 6 10) "Emacs-Lisp refactoring utilities" nil single "marmalade" nil nil nil])
  (gather [cl-struct-package-desc gather (20140115 552) "Gather string in buffer." nil single "melpa" nil nil nil] [cl-struct-package-desc gather (1 0 4) "Gather string in buffer." nil single "marmalade" nil nil nil])
  (pcsv [cl-struct-package-desc pcsv (20131110 750) "Parser of csv" nil single "melpa" nil nil nil] [cl-struct-package-desc pcsv (1 3 3) "Parser of csv -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (langtool [cl-struct-package-desc langtool (20130920 407) "Grammar check utility using LanguageTool" nil single "melpa" nil nil nil] [cl-struct-package-desc langtool (1 2 1) "Grammar check utility using LanguageTool" nil single "marmalade" nil nil nil])
  (wgrep [cl-struct-package-desc wgrep (20131209 659) "Writable grep buffer and apply the changes to files" nil single "melpa" nil nil nil] [cl-struct-package-desc wgrep (2 1 3) "Writable grep buffer and apply the changes to files" nil single "marmalade" nil nil nil])
  (oddmuse [cl-struct-package-desc oddmuse (20090222) "edit pages on an Oddmuse wiki" nil single "marmalade" nil nil nil])
  (python [cl-struct-package-desc python (20120402) "Python's flying circus support for Emacs" nil single "marmalade" nil nil nil])
  (calfw-gcal [cl-struct-package-desc calfw-gcal (20120111 200) "edit Google calendar for calfw.el." nil tar "melpa" nil nil nil] [cl-struct-package-desc calfw-gcal (0 0 1) "edit Google calendar for calfw.el." nil single "marmalade" nil nil nil])
  (color-theme-ir-black [cl-struct-package-desc color-theme-ir-black (1 0 1) "pastel color theme " ((color-theme (6 6 1))) single "marmalade" nil nil nil])
  (alpha [cl-struct-package-desc alpha (1 0) "increase frame transparency" nil single "marmalade" nil nil nil])
  (fill-column-indicator [cl-struct-package-desc fill-column-indicator (20140302 1809) "Graphically indicate the fill column" nil tar "melpa" nil nil nil] [cl-struct-package-desc fill-column-indicator (1 86) "Graphically indicate the fill column" nil single "marmalade" nil nil nil])
  (vala-mode [cl-struct-package-desc vala-mode (0 1) "Vala mode derived mode" nil single "marmalade" nil nil nil])
  (gh [cl-struct-package-desc gh (20140121 2038) "A GitHub library for Emacs" ((eieio (1 3)) (pcache (0 2 4)) (logito (0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc gh (0 8 0) "A GitHub library for Emacs" ((eieio (1 3)) (pcache (0 2 4)) (logito (0 1))) tar "marmalade" nil nil nil])
  (wiki-nav [cl-struct-package-desc wiki-nav (20131106 706) "Simple file navigation using [[WikiStrings]]" ((button-lock (1 0 0)) (nav-flash (1 0 0))) single "melpa" nil nil nil] [cl-struct-package-desc wiki-nav (1 0 0) "Simple file navigation using [[WikiStrings]]" ((button-lock (1 0 0)) (nav-flash (1 0 0))) single "marmalade" nil nil nil])
  (button-lock [cl-struct-package-desc button-lock (20131106 706) "Clickable text defined by regular expression" nil single "melpa" nil nil nil] [cl-struct-package-desc button-lock (1 0 0) "Clickable text defined by regular expression" nil single "marmalade" nil nil nil])
  (perlcritic [cl-struct-package-desc perlcritic (1 10) "minor mode for Perl::Critic integration" nil single "marmalade" nil nil nil])
  (graphviz-dot-mode [cl-struct-package-desc graphviz-dot-mode (20140303 1301) "Mode for the dot-language used by graphviz (att)." nil single "melpa" nil nil nil] [cl-struct-package-desc graphviz-dot-mode (0 3 7) "Mode for the dot-language used by graphviz (att)." nil single "marmalade" nil nil nil])
  (prolog [cl-struct-package-desc prolog (1 22) "major mode for editing and running Prolog (and Mercury) code" nil single "marmalade" nil nil nil])
  (yaml-mode [cl-struct-package-desc yaml-mode (20130310 2101) "Major mode for editing YAML files" nil single "melpa" nil nil nil] [cl-struct-package-desc yaml-mode (0 0 9) "Major mode for editing YAML files" nil single "marmalade" nil nil nil])
  (switch-window [cl-struct-package-desc switch-window (20130914 640) "A *visual* way to choose a window to switch to" nil single "melpa" nil nil nil] [cl-struct-package-desc switch-window (0 9) "A *visual* way to choose a window to switch to" nil single "marmalade" nil nil nil])
  (rainbow-delimiters [cl-struct-package-desc rainbow-delimiters (20131015 404) "Highlight nested parens, brackets, braces a different color at each depth." nil single "melpa" nil nil nil] [cl-struct-package-desc rainbow-delimiters (1 3 4) "Highlight nested parens, brackets, braces a different color at each depth." nil single "marmalade" nil nil nil])
  (magit-simple-keys [cl-struct-package-desc magit-simple-keys (1 0 0) "simple keybindings for Magit" ((magit (1 0 0))) single "marmalade" nil nil nil])
  (json [cl-struct-package-desc json (1 2) "JavaScript Object Notation parser / generator" nil single "marmalade" nil nil nil])
  (keyfreq [cl-struct-package-desc keyfreq (20131109 926) "track command frequencies" nil single "melpa" nil nil nil] [cl-struct-package-desc keyfreq (0 0 3) "track command frequencies" ((json (1 2))) single "marmalade" nil nil nil])
  (scala-mode [cl-struct-package-desc scala-mode (20131018 1325) "Major mode for editing Scala code." nil tar "melpa" nil nil nil] [cl-struct-package-desc scala-mode (0 0 2) "Scala major mode" nil tar "marmalade" nil nil nil])
  (slime-clj [cl-struct-package-desc slime-clj (0 1 5) "slime extensions for swank-clj" nil single "marmalade" nil nil nil])
  (znc [cl-struct-package-desc znc (20130811 2058) "ZNC + ERC" ((cl-lib (0 2)) (erc (5 3))) single "melpa" nil nil nil] [cl-struct-package-desc znc (0 0 2) "ZNC + ERC " ((cl (2 2)) (erc (5 3))) single "marmalade" nil nil nil])
  (haskell-mode [cl-struct-package-desc haskell-mode (20140309 342) "A Haskell editing mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc haskell-mode (13 7) "A Haskell editing mode" nil tar "marmalade" nil nil nil])
  (protobuf-mode [cl-struct-package-desc protobuf-mode (20091217 1755) "major mode for editing protocol buffers." nil single "melpa" nil nil nil] [cl-struct-package-desc protobuf-mode (0 3) "major mode for editing protocol buffers." nil single "marmalade" nil nil nil])
  (inf-ruby [cl-struct-package-desc inf-ruby (20140306 1941) "Run a Ruby process in a buffer" nil single "melpa" nil nil nil] [cl-struct-package-desc inf-ruby (2 3 2) "Run a Ruby process in a buffer" nil single "marmalade" nil nil nil])
  (idle-highlight-mode [cl-struct-package-desc idle-highlight-mode (20120920 948) "highlight the word the point is on" nil single "melpa" nil nil nil] [cl-struct-package-desc idle-highlight-mode (1 1 2) "highlight the word the point is on" nil single "marmalade" nil nil nil])
  (find-file-in-git-repo [cl-struct-package-desc find-file-in-git-repo (0 1 2) "Utility to find files in a git repo" nil single "marmalade" nil nil nil])
  (swank-cdt [cl-struct-package-desc swank-cdt (1 0 1) "swank-cdt helper functions" nil single "marmalade" nil nil nil])
  (mode-compile [cl-struct-package-desc mode-compile (2 29) " Smart command for compiling files" nil single "marmalade" nil nil nil])
  (maxframe [cl-struct-package-desc maxframe (20120725 639) "maximize the emacs frame based on display size" nil single "melpa" nil nil nil] [cl-struct-package-desc maxframe (0 5 1) "maximize the emacs frame based on display size" nil single "marmalade" nil nil nil])
  (geben [cl-struct-package-desc geben (20100330 343) "DBGp protocol frontend, a script debugger" nil tar "melpa" nil nil nil] [cl-struct-package-desc geben (0 26) "A remote debugging environment for Emacs." nil tar "marmalade" nil nil nil])
  (starter-kit-ruby [cl-struct-package-desc starter-kit-ruby (20120202 1132) "Saner defaults and goodies for Ruby" ((inf-ruby (2 2 3)) (starter-kit (2 0 1))) single "melpa" nil nil nil] [cl-struct-package-desc starter-kit-ruby (2 0 3) "Saner defaults and goodies for Ruby" ((inf-ruby (2 2 3)) (starter-kit (2 0 1))) single "marmalade" nil nil nil])
  (starter-kit-js [cl-struct-package-desc starter-kit-js (20111009 2054) "Saner defaults and goodies for Javascript" ((starter-kit (2 0 1))) single "melpa" nil nil nil] [cl-struct-package-desc starter-kit-js (2 0 1) "Saner defaults and goodies for Javascript" ((starter-kit (2 0 1))) single "marmalade" nil nil nil])
  (starter-kit-lisp [cl-struct-package-desc starter-kit-lisp (20120504 1225) "Saner defaults and goodies for lisp languages" ((starter-kit (2 0 2)) (elisp-slime-nav (0 1))) single "melpa" nil nil nil] [cl-struct-package-desc starter-kit-lisp (2 0 3) "Saner defaults and goodies for lisp languages" ((starter-kit (2 0 2)) (elisp-slime-nav (0 1))) single "marmalade" nil nil nil])
  (starter-kit [cl-struct-package-desc starter-kit (20130904 1547) "Saner defaults and goodies." ((paredit (22)) (idle-highlight-mode (1 1 1)) (find-file-in-project (3 0)) (smex (1 1 2)) (ido-ubiquitous (0 3)) (magit (0 8 1))) tar "melpa" nil nil nil] [cl-struct-package-desc starter-kit (2 0 3) "Saner defaults and goodies." ((paredit (22)) (idle-highlight-mode (1 1 1)) (find-file-in-project (3 0)) (smex (1 1 1)) (ido-ubiquitous (0 3)) (magit (0 8 1))) tar "marmalade" nil nil nil])
  (color-theme-complexity [cl-struct-package-desc color-theme-complexity (0 1 0) "A black and green color theme for Emacs." ((color-theme (6 6 0))) single "marmalade" nil nil nil])
  (r-autoyas [cl-struct-package-desc r-autoyas (20140101 710) "Provides automatically created yasnippets for R function argument lists." ((ess (0)) (yasnippet (0 8 0))) tar "melpa" nil nil nil] [cl-struct-package-desc r-autoyas (0 28) "Provides automatically created yasnippets for R function argument lists." nil single "marmalade" nil nil nil])
  (slime-fuzzy [cl-struct-package-desc slime-fuzzy (20100404) "Fuzzy symbol completion for Slime" ((slime (20100404))) single "marmalade" nil nil nil])
  (clojure-test-mode [cl-struct-package-desc clojure-test-mode (20131227 805) "Minor mode for Clojure tests" ((clojure-mode (1 7)) (cider (0 4 0))) single "melpa" nil nil nil] [cl-struct-package-desc clojure-test-mode (3 0 0) "Minor mode for Clojure tests" ((clojure-mode (1 7)) (cider (0 4 0))) single "marmalade" nil nil nil])
  (org-outlook [cl-struct-package-desc org-outlook (20121212 1458) "Outlook org" nil tar "melpa" nil nil nil] [cl-struct-package-desc org-outlook (0 3) "Outlook org" nil single "marmalade" nil nil nil])
  (sumatra-forward [cl-struct-package-desc sumatra-forward (2008 10 8) "Provides Sumatra Forward search" nil single "marmalade" nil nil nil])
  (elein [cl-struct-package-desc elein (20120120 316) "running leiningen commands from emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc elein (0 2 2) "running leiningen commands from emacs" nil single "marmalade" nil nil nil])
  (android-mode [cl-struct-package-desc android-mode (20131104 748) "Minor mode for Android application development" nil single "melpa" nil nil nil] [cl-struct-package-desc android-mode (0 2 5) "Minor mode for Android application development" nil single "marmalade" nil nil nil])
  (tabbar-ruler [cl-struct-package-desc tabbar-ruler (20130701 2153) "Pretty tabbar, autohide, use both tabbar/ruler" ((tabbar (2 0 1))) tar "melpa" nil nil nil] [cl-struct-package-desc tabbar-ruler (0 40) "Pretty tabbar, autohide, use both tabbar/ruler" ((tabbar (2 0 1))) single "marmalade" nil nil nil])
  (tabbar [cl-struct-package-desc tabbar (20140208 905) "No description available." nil tar "melpa" nil nil nil] [cl-struct-package-desc tabbar (2 0 1) "Display a tab bar in the header line  -*-no-byte-compile: t; -*-" nil single "marmalade" nil nil nil])
  (key-choices [cl-struct-package-desc key-choices (0 201) "Key Choices -- Also Viper has different colors in different modes" ((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1))) single "marmalade" nil nil nil])
  (pos-tip [cl-struct-package-desc pos-tip (20121128 615) "Show tooltip at point" nil single "melpa" nil nil nil] [cl-struct-package-desc pos-tip (0 4 5) "Show tooltip at point -*- coding: utf-8 -*-" nil single "marmalade" nil nil nil])
  (linum-off [cl-struct-package-desc linum-off (0 1) "Provides an interface for turning line-numbering off" nil single "marmalade" nil nil nil])
  (lib-requires [cl-struct-package-desc lib-requires (20131227 130) "Commands to list Emacs Lisp library dependencies." nil single "melpa" nil nil nil] [cl-struct-package-desc lib-requires (21 0) "Commands to list Emacs Lisp library dependencies." nil single "marmalade" nil nil nil])
  (header2 [cl-struct-package-desc header2 (20140113 1618) "Support for creation and update of file headers." nil single "melpa" nil nil nil] [cl-struct-package-desc header2 (21 0) "Support for creation and update of file headers." nil single "marmalade" nil nil nil])
  (cygwin-mount [cl-struct-package-desc cygwin-mount (2001) "Teach EMACS about cygwin styles and mount points." nil single "marmalade" nil nil nil])
  (cursor-chg [cl-struct-package-desc cursor-chg (20131226 1824) "Change cursor dynamically, depending on the context." nil single "melpa" nil nil nil] [cl-struct-package-desc cursor-chg (20 1) "Change cursor dynamically, depending on the context." nil single "marmalade" nil nil nil])
  (color-theme-vim-insert-mode [cl-struct-package-desc color-theme-vim-insert-mode (0 1) "Color theme VIM insert mode" nil single "marmalade" nil nil nil])
  (col-highlight [cl-struct-package-desc col-highlight (20131226 1817) "Highlight the current column." ((vline (0))) single "melpa" nil nil nil] [cl-struct-package-desc col-highlight (22 0) "Highlight the current column." ((vline (1 10))) single "marmalade" nil nil nil])
  (hl-line+ [cl-struct-package-desc hl-line+ (20131226 1913) "Extensions to hl-line.el." nil single "melpa" nil nil nil] [cl-struct-package-desc hl-line+ (22 0) "Extensions to hl-line.el." nil single "marmalade" nil nil nil])
  (vline [cl-struct-package-desc vline (20120108 1245) "show vertical line (column highlighting) mode." nil single "melpa" nil nil nil] [cl-struct-package-desc vline (1 10) "show vertical line (column highlighting) mode." nil single "marmalade" nil nil nil])
  (crosshairs [cl-struct-package-desc crosshairs (20131226 1823) "Highlight the current line and column." ((hl-line+ (0)) (col-highlight (0)) (vline (0))) single "melpa" nil nil nil] [cl-struct-package-desc crosshairs (22 0) "Highlight the current line and column." nil single "marmalade" nil nil nil])
  (w32-browser [cl-struct-package-desc w32-browser (20131227 208) "Run Windows application associated with a file." nil single "melpa" nil nil nil] [cl-struct-package-desc w32-browser (21 0) "Run Windows application associated with a file." nil single "marmalade" nil nil nil])
  (fuzzy-match [cl-struct-package-desc fuzzy-match (20131226 1850) "fuzzy matching" nil single "melpa" nil nil nil] [cl-struct-package-desc fuzzy-match (1 4) "fuzzy matching" nil single "marmalade" nil nil nil])
  (fold-dwim-org [cl-struct-package-desc fold-dwim-org (20131203 551) "Fold DWIM bound to org key-strokes." ((fold-dwim (1 2))) single "melpa" nil nil nil] [cl-struct-package-desc fold-dwim-org (0 5) "Fold DWIM bound to org key-strokes." ((fold-dwim (1 2))) single "marmalade" nil nil nil])
  (fold-dwim [cl-struct-package-desc fold-dwim (20140208 837) "Unified user interface for Emacs folding modes" nil single "melpa" nil nil nil] [cl-struct-package-desc fold-dwim (1 2) "Unified user interface for Emacs folding modes" nil single "marmalade" nil nil nil])
  (el-swank-fuzzy [cl-struct-package-desc el-swank-fuzzy (20130824 1157) "fuzzy symbol completion." nil single "melpa" nil nil nil] [cl-struct-package-desc el-swank-fuzzy (0 1) "fuzzy symbol completion." nil single "marmalade" nil nil nil])
  (ipython [cl-struct-package-desc ipython (2927) "Adds support for IPython to python-mode.el" nil single "marmalade" nil nil nil])
  (anything-obsolete [cl-struct-package-desc anything-obsolete (0 1) "obsolete functions of anything" nil single "marmalade" nil nil nil])
  (anything-complete [cl-struct-package-desc anything-complete (1 86) "completion with anything" nil single "marmalade" nil nil nil])
  (color-theme-emacs-revert-theme [cl-struct-package-desc color-theme-emacs-revert-theme (0 1) "Color-theme revert to emacs colors" nil single "marmalade" nil nil nil])
  (color-file-completion [cl-struct-package-desc color-file-completion (1 0 1) "add colors to file completion" nil single "marmalade" nil nil nil])
  (anything-ipython [cl-struct-package-desc anything-ipython (0 1 2009) " Ipython anything" nil single "marmalade" nil nil nil])
  (anything-el-swank-fuzzy [cl-struct-package-desc anything-el-swank-fuzzy (0 1 2009) "anything-sources for el-swank-fuzzy.el" nil single "marmalade" nil nil nil])
  (anything-R [cl-struct-package-desc anything-R (0 1 2010) "anything-sources and some utilities for GNU R." nil single "marmalade" nil nil nil])
  (cdlatex [cl-struct-package-desc cdlatex (4 0) "Fast input methods for LaTeX environments and math" nil single "marmalade" nil nil nil])
  (powershell [cl-struct-package-desc powershell (20130824 1206) "run powershell as an inferior shell in emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc powershell (0 2 1) "run powershell as an inferior shell in emacs" nil single "marmalade" nil nil nil])
  (anything-extension [cl-struct-package-desc anything-extension (0 2) "Extension functions for anything.el" nil single "marmalade" nil nil nil])
  (org-table-comment [cl-struct-package-desc org-table-comment (0 2) " Org table comment modes." nil single "marmalade" nil nil nil])
  (ntcmd [cl-struct-package-desc ntcmd (1 0) "major mode for editing cmd scripts" nil single "marmalade" nil nil nil])
  (textmate-to-yas [cl-struct-package-desc textmate-to-yas (20130509 854) "Import Textmate macros into yasnippet syntax" nil tar "melpa" nil nil nil] [cl-struct-package-desc textmate-to-yas (0 21) "Import Textmate macros into yasnippet syntax" nil single "marmalade" nil nil nil])
  (yas-jit [cl-struct-package-desc yas-jit (0 8 3) "Loads Yasnippets on demand (makes start up faster)" nil single "marmalade" nil nil nil])
  (rw-language-and-country-codes [cl-struct-package-desc rw-language-and-country-codes (0 1) "Language & Country Codes" nil single "marmalade" nil nil nil])
  (rw-ispell [cl-struct-package-desc rw-ispell (0 1) "additional functions for ispell.el" nil single "marmalade" nil nil nil])
  (rw-hunspell [cl-struct-package-desc rw-hunspell (0 2) "special functions for Hunspell in ispell.el" nil single "marmalade" nil nil nil])
  (predictive [cl-struct-package-desc predictive (0 19 5) "Predictive Mode (Contains Dependencies)" nil tar "marmalade" nil nil nil])
  (synonyms [cl-struct-package-desc synonyms (20131227 159) "Look up synonyms for a word or phrase in a thesaurus." nil single "melpa" nil nil nil] [cl-struct-package-desc synonyms (1 0) "Look up synonyms for a word or phrase in a thesaurus." nil single "marmalade" nil nil nil])
  (lacarte [cl-struct-package-desc lacarte (20140201 2051) "Execute menu items as commands, with completion." nil single "melpa" nil nil nil] [cl-struct-package-desc lacarte (22 0) "Execute menu items as commands, with completion." nil single "marmalade" nil nil nil])
  (icomplete+ [cl-struct-package-desc icomplete+ (20140305 1858) "Extensions to `icomplete.el'." nil single "melpa" nil nil nil] [cl-struct-package-desc icomplete+ (21 0) "Extensions to `icomplete.el'." nil single "marmalade" nil nil nil])
  (hexrgb [cl-struct-package-desc hexrgb (20131226 1855) "Functions to manipulate colors, including RGB hex strings." nil single "melpa" nil nil nil] [cl-struct-package-desc hexrgb (21 0) "Functions to manipulate colors, including RGB hex strings." nil single "marmalade" nil nil nil])
  (speck [cl-struct-package-desc speck (2010 5 25) "minor mode for spell checking" nil single "marmalade" nil nil nil])
  (ecb [cl-struct-package-desc ecb (20140215 114) "a code browser for Emacs" nil tar "melpa" nil nil nil] [cl-struct-package-desc ecb (2 40) "Emacs Code Browser" nil tar "marmalade" nil nil nil])
  (nsis-mode [cl-struct-package-desc nsis-mode (20130723 1928) "NSIS-mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc nsis-mode (0 44) "NSIS-mode" nil single "marmalade" nil nil nil])
  (auto-indent-mode [cl-struct-package-desc auto-indent-mode (20131220 1220) "Auto indent Minor mode" nil tar "melpa" nil nil nil] [cl-struct-package-desc auto-indent-mode (0 123) "Auto indent Minor mode" nil single "marmalade" nil nil nil])
  (gnuplot [cl-struct-package-desc gnuplot (20130206 1701) "drive gnuplot from within emacs" nil tar "melpa" nil nil nil] [cl-struct-package-desc gnuplot (0 6 0) "drive gnuplot from within emacs" nil single "marmalade" nil nil nil])
  (parenface [cl-struct-package-desc parenface (20140303 1740) "Provide a face for parens in lispy modes." nil tar "melpa" nil nil nil] [cl-struct-package-desc parenface (1 1) "Provide a face for parens in lisp modes." nil single "marmalade" nil nil nil])
  (multi-term [cl-struct-package-desc multi-term (20140116 2214) "Managing multiple terminal buffers in Emacs." nil single "melpa" nil nil nil] [cl-struct-package-desc multi-term (0 8 8) "Managing multiple terminal buffers in Emacs." nil single "marmalade" nil nil nil])
  (flymake-cursor [cl-struct-package-desc flymake-cursor (20130822 1032) "displays flymake error msg in minibuffer after delay" nil single "melpa" nil nil nil] [cl-struct-package-desc flymake-cursor (1 0 2) "Show flymake messages in the minibuffer after delay" ((flymake (0 3))) tar "marmalade" nil nil nil])
  (mac-key-mode [cl-struct-package-desc mac-key-mode (2010 1 3) "provide mac-style key bindings on Carbon Emacs" nil single "marmalade" nil nil nil])
  (http-twiddle [cl-struct-package-desc http-twiddle (20121117 812) "send & twiddle & resend HTTP requests" nil single "melpa" nil nil nil] [cl-struct-package-desc http-twiddle (1 0) "send & twiddle & resend HTTP requests" nil single "marmalade" nil nil nil])
  (goto-last-change [cl-struct-package-desc goto-last-change (20121115 1014) "Move point through buffer-undo-list positions" nil single "melpa" nil nil nil] [cl-struct-package-desc goto-last-change (1 2) "Move point through buffer-undo-list positions -*-unibyte: t; coding: iso-8859-1;-*-" nil single "marmalade" nil nil nil])
  (project [cl-struct-package-desc project (1 0) "Keep track of the current project" nil single "marmalade" nil nil nil])
  (find-file-in-project [cl-struct-package-desc find-file-in-project (20140221 557) "Find files in a project quickly." nil single "melpa" nil nil nil] [cl-struct-package-desc find-file-in-project (3 2) "Find files in a project quickly." nil single "marmalade" nil nil nil])
  (full-ack [cl-struct-package-desc full-ack (20130423 1304) "a front-end for ack" nil single "melpa" nil nil nil] [cl-struct-package-desc full-ack (0 2 3) "a front-end for ack" nil single "marmalade" nil nil nil])
  (c-eldoc [cl-struct-package-desc c-eldoc (20130821 1146) "helpful description of the arguments to C functions" nil single "melpa" nil nil nil] [cl-struct-package-desc c-eldoc (0 5) "helpful description of the arguments to C functions" nil single "marmalade" nil nil nil])
  (php-mode [cl-struct-package-desc php-mode (20131203 1308) "Major mode for editing PHP code" nil single "melpa" nil nil nil] [cl-struct-package-desc php-mode (1 5 0) "major mode for editing PHP code" nil single "marmalade" nil nil nil])
  (dired-single [cl-struct-package-desc dired-single (20130824 1200) "Reuse the current dired buffer to visit another directory" nil single "melpa" nil nil nil] [cl-struct-package-desc dired-single (1 7 0) "reuse the current dired buffer to visit another directory" nil single "marmalade" nil nil nil])
  (buffer-move [cl-struct-package-desc buffer-move (20130923 1653) "Swap buffers without typing C-x b on each window" nil single "melpa" nil nil nil] [cl-struct-package-desc buffer-move (0 4) "swap buffers between windows" nil single "marmalade" nil nil nil])
  (browse-kill-ring [cl-struct-package-desc browse-kill-ring (20131116 2113) "interactively insert items from kill-ring" nil single "melpa" nil nil nil] [cl-struct-package-desc browse-kill-ring (1 3 1) "interactively insert items from kill-ring -*- coding: utf-8 -*-" nil single "marmalade" nil nil nil])
  (color-theme-twilight [cl-struct-package-desc color-theme-twilight (0 1) "Twilight Colour Theme for Emacs." nil single "marmalade" nil nil nil])
  (highlight-symbol [cl-struct-package-desc highlight-symbol (20131103 1336) "automatic and manual symbol highlighting" nil single "melpa" nil nil nil] [cl-struct-package-desc highlight-symbol (1 1) "automatic and manual symbol highlighting" nil single "marmalade" nil nil nil])
  (gist [cl-struct-package-desc gist (20131109 2155) "Emacs integration for gist.github.com" ((eieio (1 3)) (gh (0 7 2)) (tabulated-list (0))) single "melpa" nil nil nil] [cl-struct-package-desc gist (1 1 1) "Emacs integration for gist.github.com" ((eieio (1 3)) (gh (0 7 2)) (tabulated-list (0))) single "marmalade" nil nil nil])
  (closure-template-html-mode [cl-struct-package-desc closure-template-html-mode (0 1) "highlighting for google closure templates" nil single "marmalade" nil nil nil])
  (anything-match-plugin [cl-struct-package-desc anything-match-plugin (1 27) "Humane match plug-in for anything" nil single "marmalade" nil nil nil])
  (anything-config [cl-struct-package-desc anything-config (0 4 1) "Predefined configurations for `anything.el'" nil single "marmalade" nil nil nil])
  (anything [cl-struct-package-desc anything (20130605 1746) "open anything / QuickSilver-like candidate-selection framework" nil tar "melpa" nil nil nil] [cl-struct-package-desc anything (1 287) "open anything / QuickSilver-like candidate-selection framework" nil single "marmalade" nil nil nil])
  (rvm [cl-struct-package-desc rvm (20140109 319) "Emacs integration for rvm" nil single "melpa" nil nil nil] [cl-struct-package-desc rvm (1 3 0) "Emacs integration for rvm" nil single "marmalade" nil nil nil])
  (highlight-parentheses [cl-struct-package-desc highlight-parentheses (20130523 852) "highlight surrounding parentheses" nil single "melpa" nil nil nil] [cl-struct-package-desc highlight-parentheses (1 0 1) "highlight surrounding parentheses" nil single "marmalade" nil nil nil])
  (autopair [cl-struct-package-desc autopair (20131206 1059) "Automagically pair braces and quotes like TextMate" ((cl-lib (0 3))) single "melpa" nil nil nil] [cl-struct-package-desc autopair (0 3) "Automagically pair braces and quotes like TextMate" nil single "marmalade" nil nil nil])
  (descbinds-anything [cl-struct-package-desc descbinds-anything (1 5) "Yet Another `describe-bindings' with `anything'." ((anything (1 287))) single "marmalade" nil nil nil])
  (keywiz [cl-struct-package-desc keywiz (1 4) "Emacs key sequence quiz" nil single "marmalade" nil nil nil])
  (notify [cl-struct-package-desc notify (2010 8 20) "notification front-end" nil single "marmalade" nil nil nil])
  (diminish [cl-struct-package-desc diminish (20091203 1012) "Diminished modes are minor modes with no modeline display" nil single "melpa" nil nil nil] [cl-struct-package-desc diminish (0 44) "Diminished modes are minor modes with no modeline display" nil single "marmalade" nil nil nil])
  (mactag [cl-struct-package-desc mactag (0 0 1) "Mode for automatically handle multiple tags files with Mactag rubygem" nil single "marmalade" nil nil nil])
  (enclose [cl-struct-package-desc enclose (20121008 914) "Enclose cursor within punctuation pairs." nil tar "melpa" nil nil nil] [cl-struct-package-desc enclose (0 0 2) "Enclose cursor within punctuation pairs" nil single "marmalade" nil nil nil])
  (guru-mode [cl-struct-package-desc guru-mode (20140103 1545) "Become an Emacs guru" nil single "melpa" nil nil nil] [cl-struct-package-desc guru-mode (0 2) "Become an Emacs guru   -*- lexical-binding:t -*-" nil single "marmalade" nil nil nil])
  (html-script-src [cl-struct-package-desc html-script-src (20120403 1115) "Insert <script src=\"..\"> for popular JavaScript libraries" nil single "melpa" nil nil nil] [cl-struct-package-desc html-script-src (0 0 2) "Insert <script src=\"..\"> for popular JavaScript libraries" nil single "marmalade" nil nil nil])
  (yari [cl-struct-package-desc yari (20140206 611) "Yet Another RI interface for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc yari (0 7) "Yet Another RI interface for Emacs" nil single "marmalade" nil nil nil])
  (marmalade [cl-struct-package-desc marmalade (0 0 4) "Elisp interface for the Emacs Lisp package server." ((furl (0 0 2))) single "marmalade" nil nil nil])
  (furl [cl-struct-package-desc furl (20110112 1707) "Friendly URL retrieval" nil single "melpa" nil nil nil] [cl-struct-package-desc furl (0 0 2) "Friendly URL retrieval" nil single "marmalade" nil nil nil])
  (htmlize [cl-struct-package-desc htmlize (20130207 1202) "Convert buffer text and decorations to HTML." nil single "melpa" nil nil nil] [cl-struct-package-desc htmlize (1 39) "Convert buffer text and decorations to HTML." nil single "marmalade" nil nil nil])
  (durendal [cl-struct-package-desc durendal (0 2) "A bucket of tricks for Clojure and Slime." ((clojure-mode (1 7)) (slime (20100404)) (paredit (22))) single "marmalade" nil nil nil])
  (magit [cl-struct-package-desc magit (20140306 1400) "control Git from Emacs" ((cl-lib (0 3)) (git-commit-mode (0 14 0)) (git-rebase-mode (0 14 0))) tar "melpa" nil nil nil] [cl-struct-package-desc magit (1 2 0) "Control Git from Emacs." nil tar "marmalade" nil nil nil])
  (idle-highlight [cl-struct-package-desc idle-highlight (1 0) "highlight the word the point is on" nil single "marmalade" nil nil nil])
  (web [cl-struct-package-desc web (20140208 559) "useful HTTP client" nil single "melpa" nil nil nil] [cl-struct-package-desc web (0 4 1) "useful HTTP client -*- lexical-binding: t -*-" nil single "marmalade" nil nil nil])
  (slime-repl [cl-struct-package-desc slime-repl (20100404) "Read-Eval-Print Loop written in Emacs Lisp" ((slime (20100404))) single "marmalade" nil nil nil])
  (slime [cl-struct-package-desc slime (20140309 1356) "Superior Lisp Interaction Mode for Emacs" ((cl-lib (0 5))) tar "melpa" nil nil nil] [cl-struct-package-desc slime (20100404 1) "Superior Lisp Interaction Mode for Emacs" nil single "marmalade" nil nil nil])
  (perspective [cl-struct-package-desc perspective (20131004 1658) "switch between named \"perspectives\" of the editor" nil single "melpa" nil nil nil] [cl-struct-package-desc perspective (1 9) "switch between named \"perspectives\" of the editor" nil single "marmalade" nil nil nil])
  (paredit [cl-struct-package-desc paredit (20140128 1248) "minor mode for editing parentheses" nil single "melpa" nil nil nil] [cl-struct-package-desc paredit (22) "minor mode for editing parentheses  -*- Mode: Emacs-Lisp -*-" nil single "marmalade" nil nil nil])
  (haml-mode [cl-struct-package-desc haml-mode (20140206 600) "Major mode for editing Haml files" ((ruby-mode (1 0))) single "melpa" nil nil nil] [cl-struct-package-desc haml-mode (3 1 5) "Major mode for editing Haml files" ((ruby-mode (1 0))) single "marmalade" nil nil nil])
  (yasnippet [cl-struct-package-desc yasnippet (20140306 5) "Yet another snippet extension for Emacs." nil tar "melpa" nil nil nil] [cl-struct-package-desc yasnippet (0 8 0) "Yet another snippet extension for Emacs." nil tar "gnu" nil ((:keywords quote ("convenience" "emulation")) (:url . "http://github.com/capitaomorte/yasnippet")) nil] [cl-struct-package-desc yasnippet (0 6 1) "Yasnippet template engine" nil tar "marmalade" nil nil nil])
  (xclip [cl-struct-package-desc xclip (1 3) "use xclip to copy&paste" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/xclip.html") (:keywords quote ("convenience" "tools"))) nil])
  (windresize [cl-struct-package-desc windresize (0 1) "Resize windows interactively" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/windresize.html") (:keywords quote ("window"))) nil])
  (websocket [cl-struct-package-desc websocket (20140104 1438) "Emacs WebSocket client and server" nil single "melpa" nil nil nil] [cl-struct-package-desc websocket (1 1) "Emacs WebSocket client and server" nil tar "gnu" nil ((:keywords quote ("communication" "websocket" "server")) (:url . "http://elpa.gnu.org/packages/websocket.html")) nil] [cl-struct-package-desc websocket (1 0) "Emacs WebSocket client and server" nil single "marmalade" nil nil nil])
  (vlf [cl-struct-package-desc vlf (20140223 818) "View Large Files" nil tar "melpa" nil nil nil] [cl-struct-package-desc vlf (1 5) "View Large Files" nil tar "gnu" nil ((:keywords quote ("large files" "utilities")) (:url . "https://github.com/m00natic/vlfi")) nil])
  (uni-confusables [cl-struct-package-desc uni-confusables (0 1) "Unicode confusables table" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/uni-confusables.html")) nil])
  (undo-tree [cl-struct-package-desc undo-tree (20140110 616) "Treat undo history as a tree" nil single "melpa" nil nil nil] [cl-struct-package-desc undo-tree (0 6 5) "Treat undo history as a tree" nil single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("convenience" "files" "undo" "redo" "history" "tree"))) nil] [cl-struct-package-desc undo-tree (0 3 1) "Treat undo history as a tree" nil single "marmalade" nil nil nil])
  (trie [cl-struct-package-desc trie (0 2 6) "Trie data structure" ((tNFA (0 1 1)) (heap (0 3))) single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("extensions" "matching" "data structures trie" "ternary search tree" "tree" "completion" "regexp"))) nil])
  (tNFA [cl-struct-package-desc tNFA (0 1 1) "Tagged non-deterministic finite-state automata" ((queue (0 1))) single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("extensions" "matching" "data structures tnfa" "nfa" "dfa" "finite state automata" "automata" "regexp"))) nil])
  (svg-clock [cl-struct-package-desc svg-clock (0 5) "Analog clock using Scalable Vector Graphics" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/svg-clock.html") (:keywords quote ("demo" "svg" "clock"))) nil])
  (sokoban [cl-struct-package-desc sokoban (1 23) "Play the Sokoban game in emacs" nil single "marmalade" nil nil nil] [cl-struct-package-desc sokoban (1 4) "Implementation of Sokoban for Emacs." nil tar "gnu" nil ((:keywords quote ("games")) (:url . "http://elpa.gnu.org/packages/sokoban.html")) nil])
  (sml-mode [cl-struct-package-desc sml-mode (6 4) "Major mode for editing (Standard) ML" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/sml-mode.html") (:keywords quote ("sml"))) nil])
  (smart-operator [cl-struct-package-desc smart-operator (20051013 1756) "Beautify the operators in codes" nil single "melpa" nil nil nil] [cl-struct-package-desc smart-operator (4 0) "Insert operators with surrounding spaces smartly" nil single "gnu" nil ((:url . "http://xwl.appspot.com/ref/smart-operator.el") (:keywords quote nil)) nil] [cl-struct-package-desc smart-operator (1 9 20110812) "Insert operators with surrounding spaces smartly" nil single "marmalade" nil nil nil])
  (sisu-mode [cl-struct-package-desc sisu-mode (3 0 3) "Major mode for SiSU markup text" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/sisu-mode.html") (:keywords quote ("text" "processes" "tools"))) nil])
  (shen-mode [cl-struct-package-desc shen-mode (0 1) "A major mode for editing shen source code" nil tar "gnu" nil ((:keywords quote ("languages" "shen")) (:url . "http://elpa.gnu.org/packages/shen-mode.html")) nil])
  (register-list [cl-struct-package-desc register-list (0 1) "Interactively list/edit registers" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/register-list.html") (:keywords quote ("register"))) nil])
  (rainbow-mode [cl-struct-package-desc rainbow-mode (0 9) "Colorize color names in buffers" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/rainbow-mode.html") (:keywords quote ("faces"))) nil])
  (queue [cl-struct-package-desc queue (0 1) "Queue data structure" nil single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("extensions" "data structures" "queue"))) nil])
  (quarter-plane [cl-struct-package-desc quarter-plane (0 1) "Minor mode for quarter-plane style editing" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/quarter-plane.html") (:keywords quote ("convenience" "wp"))) nil])
  (org [cl-struct-package-desc org (20140310) "Outline-based notes management and organizer" nil tar "gnu" nil nil nil])
  (omn-mode [cl-struct-package-desc omn-mode (1 0) "Support for OWL Manchester Notation" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/omn-mode.html") (:keywords quote nil)) nil])
  (oauth2 [cl-struct-package-desc oauth2 (0 10) "OAuth 2.0 Authorization Protocol" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/oauth2.html") (:keywords quote ("comm"))) nil])
  (num3-mode [cl-struct-package-desc num3-mode (1 2) "highlight groups of digits in long numbers" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/num3-mode.html") (:keywords quote ("faces" "minor-mode"))) nil])
  (notes-mode [cl-struct-package-desc notes-mode (1 30) "Indexing system for on-line note-taking" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/notes-mode.html")) nil])
  (nlinum [cl-struct-package-desc nlinum (1 2) "Show line numbers in the margin" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/nlinum.html") (:keywords quote ("convenience"))) nil])
  (nhexl-mode [cl-struct-package-desc nhexl-mode (0 1) "Minor mode to edit files via hex-dump format" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html") (:keywords quote ("data"))) nil])
  (muse [cl-struct-package-desc muse (3 20) "Authoring and publishing tool for Emacs" nil tar "gnu" nil ((:keywords quote ("hypermedia")) (:url . "http://mwolson.org/projects/EmacsMuse.html")) nil])
  (minimap [cl-struct-package-desc minimap (20140201 1209) "Minimap sidebar for Emacs" nil single "melpa" nil nil nil] [cl-struct-package-desc minimap (1 1) "Sidebar showing a \"mini-map\" of a buffer" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/minimap.html") (:keywords quote nil)) nil] [cl-struct-package-desc minimap (1 0) "Sidebar showing a \"mini-map\" of a buffer" nil single "marmalade" nil nil nil])
  (memory-usage [cl-struct-package-desc memory-usage (0 2) "Analyze the memory usage of Emacs in various ways" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/memory-usage.html") (:keywords quote ("maint"))) nil])
  (markchars [cl-struct-package-desc markchars (0 2 0) "Mark chars fitting certain characteristics" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/markchars.html") (:keywords quote nil)) nil])
  (load-dir [cl-struct-package-desc load-dir (0 0 3) "Load all Emacs Lisp files in a given directory" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/load-dir.html") (:keywords quote ("lisp" "files" "convenience"))) nil])
  (lmc [cl-struct-package-desc lmc (1 3) "Little Man Computer in Elisp" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/lmc.html") (:keywords quote nil)) nil])
  (lex [cl-struct-package-desc lex (1 1) "Lexical analyser construction" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/lex.html")) nil])
  (jumpc [cl-struct-package-desc jumpc (3 0) "jump to previous insertion points" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/jumpc.html") (:keywords quote nil)) nil])
  (js2-mode [cl-struct-package-desc js2-mode (20140120 2003) "Improved JavaScript editing mode" ((emacs (24 1))) tar "melpa" nil nil nil] [cl-struct-package-desc js2-mode (20140114) "Improved JavaScript editing mode" ((emacs (24 1))) tar "gnu" nil ((:keywords quote ("languages" "javascript")) (:url . "https://github.com/mooz/js2-mode/")) nil])
  (jgraph-mode [cl-struct-package-desc jgraph-mode (1 0) "Major mode for Jgraph files" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html") (:keywords quote ("tex" "wp"))) nil])
  (ioccur [cl-struct-package-desc ioccur (2 4) "Incremental occur" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/ioccur.html") (:keywords quote nil)) nil] [cl-struct-package-desc ioccur (0 2) "Incremental occur." nil single "marmalade" nil nil nil])
  (heap [cl-struct-package-desc heap (0 3) "Heap (a.k.a. priority queue) data structure" nil single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("extensions" "data structures" "heap" "priority queue"))) nil])
  (gnugo [cl-struct-package-desc gnugo (2 3 1) "play GNU Go in a buffer" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://elpa.gnu.org/packages/gnugo.html")) nil] [cl-struct-package-desc gnugo (2 2 12) "Play a game of Go against gnugo" nil single "marmalade" nil nil nil])
  (ggtags [cl-struct-package-desc ggtags (20140307 343) "emacs frontend to GNU Global source code tagging system" ((emacs (24)) (cl-lib (0 5))) single "melpa" nil nil nil] [cl-struct-package-desc ggtags (0 7 12) "emacs frontend to GNU Global source code tagging system" ((emacs (24))) single "gnu" nil ((:url . "https://github.com/leoliu/ggtags") (:keywords quote ("tools" "convenience"))) nil])
  (f90-interface-browser [cl-struct-package-desc f90-interface-browser (1 1) "Parse and browse f90 interfaces" nil single "gnu" nil ((:url . "http://github.com/wence-/f90-iface/") (:keywords quote nil)) nil])
  (epoch-view [cl-struct-package-desc epoch-view (0 0 1) "Minor mode to visualize epoch timestamps" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/epoch-view.html") (:keywords quote ("data" "timestamp" "epoch" "unix"))) nil])
  (enwc [cl-struct-package-desc enwc (1 0) "The Emacs Network Client" nil tar "gnu" nil ((:keywords quote ("enwc" "network" "wicd" "manager" "nm")) (:url . "http://elpa.gnu.org/packages/enwc.html")) nil])
  (eldoc-eval [cl-struct-package-desc eldoc-eval (20140126 8) "Enable eldoc support when minibuffer is in use." nil single "melpa" nil nil nil] [cl-struct-package-desc eldoc-eval (0 1) "Enable eldoc support when minibuffer is in use." nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/eldoc-eval.html") (:keywords quote nil)) nil])
  (ediprolog [cl-struct-package-desc ediprolog (1 0) "Emacs Does Interactive Prolog" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/ediprolog.html") (:keywords quote ("languages" "processes"))) nil])
  (docbook [cl-struct-package-desc docbook (0 1) "Info-like viewer for DocBook" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/docbook.html") (:keywords quote ("docs" "help"))) nil])
  (djvu [cl-struct-package-desc djvu (0 5) "Edit and view Djvu files via djvused" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/djvu.html") (:keywords quote ("files" "wp"))) nil])
  (diff-hl [cl-struct-package-desc diff-hl (20140212 438) "Highlight uncommitted changes" ((cl-lib (0 2))) tar "melpa" nil nil nil] [cl-struct-package-desc diff-hl (1 5 3) "Highlight uncommitted changes" ((cl-lib (0 2))) tar "gnu" nil ((:keywords quote ("vc" "diff")) (:url . "https://github.com/dgutov/diff-hl")) nil])
  (dict-tree [cl-struct-package-desc dict-tree (0 12 8) "Dictionary data structure" ((trie (0 2 5)) (tNFA (0 1 1)) (heap (0 3))) single "gnu" nil ((:url . "http://www.dr-qubit.org/emacs.php") (:keywords quote ("extensions" "matching" "data structures trie" "tree" "dictionary" "completion" "regexp"))) nil])
  (debbugs [cl-struct-package-desc debbugs (0 6) "SOAP library to access debbugs servers" nil tar "gnu" nil ((:keywords quote ("comm" "hypermedia")) (:url . "http://elpa.gnu.org/packages/debbugs.html")) nil])
  (csv-mode [cl-struct-package-desc csv-mode (1 2) "Major mode for editing comma/char separated values" nil single "gnu" nil ((:url . "http://centaur.maths.qmul.ac.uk/Emacs/") (:keywords quote ("convenience"))) nil])
  (company [cl-struct-package-desc company (20140304 2155) "Modular in-buffer completion framework" nil tar "melpa" nil nil nil] [cl-struct-package-desc company (0 7) "Modular in-buffer completion framework" nil tar "gnu" nil ((:keywords quote ("abbrev" "convenience" "matching")) (:url . "http://company-mode.github.io/")) nil])
  (coffee-mode [cl-struct-package-desc coffee-mode (20140308 529) "Major mode to edit CoffeeScript files in Emacs" ((emacs (24 1)) (cl-lib (0 5))) single "melpa" nil nil nil] [cl-struct-package-desc coffee-mode (0 4 1 1) "Major mode for CoffeeScript files" nil single "gnu" nil ((:url . "http://github.com/defunkt/coffee-mode") (:keywords quote ("coffeescript" "major" "mode"))) nil] [cl-struct-package-desc coffee-mode (0 3 0) "Major mode to edit CoffeeScript files in Emacs" nil single "marmalade" nil nil nil])
  (cl-lib [cl-struct-package-desc cl-lib (0 5) "Properly prefixed CL functions and macros" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/cl-lib.html") (:keywords quote nil)) nil])
  (auctex [cl-struct-package-desc auctex (11 87 3) "Integrated environment for *TeX*" nil tar "gnu" nil ((:keywords quote nil) (:url . "http://www.gnu.org/software/auctex/")) nil])
  (all [cl-struct-package-desc all (1 0) "Edit all lines matching a given regexp" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/all.html") (:keywords quote ("matching"))) nil])
  (adaptive-wrap [cl-struct-package-desc adaptive-wrap (0 5) "Smart line-wrapping with wrap-prefix" nil single "gnu" nil ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html") (:keywords quote nil)) nil])
  (ack [cl-struct-package-desc ack (1 3) "Interface to ack-like source code search tools" nil tar "gnu" nil ((:keywords quote ("tools" "processes" "convenience")) (:url . "https://github.com/leoliu/ack-el")) nil])
 )
