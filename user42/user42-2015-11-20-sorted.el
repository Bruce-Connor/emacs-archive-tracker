'(
  (ac-tex-ref [cl-struct-package-desc ac-tex-ref (3) "auto-complete for tex-mode \\ref and \\cite labels" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ac-tex-ref/index.html")) nil])
  (accjournal [cl-struct-package-desc accjournal (8) "double entry journal accounting" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/accjournal/index.html")) nil])
  (align-let [cl-struct-package-desc align-let (13) "align expressions in a lisp \"let\"" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/align-let/index.html")) nil])
  (arc-lzh-exe [cl-struct-package-desc arc-lzh-exe (8) "archive-mode support for LHa self-extracting .exe" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/arc-lzh-exe/index.html")) nil])
  (areabrowse [cl-struct-package-desc areabrowse (4) "browse diku mud .are area files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/areabrowse/index.html")) nil])
  (aumix-mode [cl-struct-package-desc aumix-mode (7) "run the aumix program in a buffer" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/aumix-mode/index.html")) nil])
  (bytecomp-simplify [cl-struct-package-desc bytecomp-simplify (18) "byte compile warnings for simplifications" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/bytecomp-simplify/index.html")) nil])
  (checkdoc-autoload [cl-struct-package-desc checkdoc-autoload (3) "check for various autoload cookies" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/checkdoc-autoload/index.html")) nil])
  (checkdoc-batch [cl-struct-package-desc checkdoc-batch (7) "batch report of M-x checkdoc things" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/checkdoc-batch/index.html")) nil])
  (checkdoc-keywords [cl-struct-package-desc checkdoc-keywords (7) "check for known values in Keywords header" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/checkdoc-keywords/index.html")) nil])
  (checkdoc-url-buttonize [cl-struct-package-desc checkdoc-url-buttonize (2) "check URL `' linking in docstrings" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/checkdoc-url-buttonize/index.html")) nil])
  (cl-loop-aplist [cl-struct-package-desc cl-loop-aplist (5) "cl loop macro alist and plist support" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/cl-loop-aplist/index.html")) nil])
  (compilation-always-kill [cl-struct-package-desc compilation-always-kill (6) "kill compilation without prompting" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-always-kill/index.html")) nil])
  (compilation-emacs21-batch [cl-struct-package-desc compilation-emacs21-batch (6) "error regexps for emacs21 byte compiler" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-emacs21-batch/index.html")) nil])
  (compilation-ledger [cl-struct-package-desc compilation-ledger (3) "error regexps for ledger" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-ledger/index.html")) nil])
  (compilation-onewin [cl-struct-package-desc compilation-onewin (4) "whole-frame window for compile buffer" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-onewin/index.html")) nil])
  (compilation-perl [cl-struct-package-desc compilation-perl (14) "extra error regexps for Perl" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-perl/index.html")) nil])
  (compilation-recenter-end [cl-struct-package-desc compilation-recenter-end (7) "compilation-mode window recentre" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-recenter-end/index.html")) nil])
  (compilation-weblint [cl-struct-package-desc compilation-weblint (6) "error regexps for weblint" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compilation-weblint/index.html")) nil])
  (compile-command-default [cl-struct-package-desc compile-command-default (13) "establish a default for M-x compile" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/compile-command-default/index.html")) nil])
  (completion-ignored-build [cl-struct-package-desc completion-ignored-build (13) "some built completion-ignored-extensions" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/completion-ignored-build/index.html")) nil])
  (copyright-both-ends [cl-struct-package-desc copyright-both-ends (5) "update copyright at start and end of file" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/copyright-both-ends/index.html")) nil])
  (diff-save-buffer [cl-struct-package-desc diff-save-buffer (15) "default filename when saving a diff." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/diff-save-buffer/index.html")) nil])
  (dired-visit-history [cl-struct-package-desc dired-visit-history (4) "add dired visited files to find-file history" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/dired-visit-history/index.html")) nil])
  (do-not-edit [cl-struct-package-desc do-not-edit (15) "read-only buffer for generated files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/do-not-edit/index.html")) nil])
  (elisp-docstring-preview [cl-struct-package-desc elisp-docstring-preview (5) "preview Emacs Lisp docstring" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/elisp-docstring-preview/index.html")) nil])
  (ffap-I-option [cl-struct-package-desc ffap-I-option (2) "recognise -I/usr/include/foo" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-I-option/index.html")) nil])
  (ffap-gcc-path [cl-struct-package-desc ffap-gcc-path (8) "get gcc's include path for ffap-c-path" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-gcc-path/index.html")) nil])
  (ffap-href [cl-struct-package-desc ffap-href (5) "find href URL/link anywhere in the tag" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-href/index.html")) nil])
  (ffap-include-start [cl-struct-package-desc ffap-include-start (11) "recognise C #include when at start of line" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-include-start/index.html")) nil])
  (ffap-makefile-vars [cl-struct-package-desc ffap-makefile-vars (5) "find file with makefile variables expanded" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-makefile-vars/index.html")) nil])
  (ffap-mml [cl-struct-package-desc ffap-mml (10) "find Gnus message MML attached file at point" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-mml/index.html")) nil])
  (ffap-perl-module [cl-struct-package-desc ffap-perl-module (24) "find perl module at point with ffap" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-perl-module/index.html")) nil])
  (ffap-pod-F [cl-struct-package-desc ffap-pod-F (5) "follow Perl pod F<filename>" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-pod-F/index.html")) nil])
  (ffap-rfc-directories [cl-struct-package-desc ffap-rfc-directories (9) "look for RFCs in local directories too (for Emacs 22)" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-rfc-directories/index.html")) nil])
  (ffap-rfc-space [cl-struct-package-desc ffap-rfc-space (12) "recognise RFC with a space, like \"RFC 1234\"" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ffap-rfc-space/index.html")) nil])
  (filladapt-pat [cl-struct-package-desc filladapt-pat (6) "add or remove some filladapt patterns" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/filladapt-pat/index.html")) nil])
  (formfeed-hline [cl-struct-package-desc formfeed-hline (5) "display formfeed with horizontal line" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/formfeed-hline/index.html")) nil])
  (gtk-look [cl-struct-package-desc gtk-look (28) "lookup Gtk and Gnome documentation." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/gtk-look/index.html")) nil])
  (gutenberg-coding [cl-struct-package-desc gutenberg-coding (15) "coding system for Project Gutenberg EBooks." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/gutenberg-coding/index.html")) nil])
  (help-xref-elfiles [cl-struct-package-desc help-xref-elfiles (4) "buttonize foo.el and .emacs filenames in docstrings" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/help-xref-elfiles/index.html")) nil])
  (html-coding [cl-struct-package-desc html-coding (13) "coding system from meta in html files (for Emacs 21)" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/html-coding/index.html")) nil])
  (html-sizes [cl-struct-package-desc html-sizes (16) "maintain file sizes shown for html links" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/html-sizes/index.html")) nil])
  (html-smarter-href [cl-struct-package-desc html-smarter-href (1) "smarter html-href-anchor reading" nil single "user42" nil ((:url . "http://www.geocities.com/user42_kevin/html-smarter-href/")) nil])
  (imagetext [cl-struct-package-desc imagetext (11) "show text parts of image files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/imagetext/index.html")) nil])
  (info-lookmore [cl-struct-package-desc info-lookmore (6) "more things for info-look.el" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/info-lookmore/index.html")) nil])
  (ispell-stopwords [cl-struct-package-desc ispell-stopwords (9) "use perl POD \"=for stopwords\" in ispell" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/ispell-stopwords/index.html")) nil])
  (jka-compr-dictzip [cl-struct-package-desc jka-compr-dictzip (2) "dictzip .dz for jka-compr" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/jka-compr-dictzip/index.html")) nil])
  (localedef-overlay [cl-struct-package-desc localedef-overlay (4) "mode for glibc locale definition files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/localedef-overlay/index.html")) nil])
  (mailcap-mode [cl-struct-package-desc mailcap-mode (4) "mailcap file editing mode" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/mailcap-mode/index.html")) nil])
  (make-mode-fillindent [cl-struct-package-desc make-mode-fillindent (5) "filling indented makefile comments" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/make-mode-fillindent/index.html")) nil])
  (makeinfo-info [cl-struct-package-desc makeinfo-info (9) "use Info-mode with makeinfo-buffer." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/makeinfo-info/index.html")) nil])
  (man-completion [cl-struct-package-desc man-completion (35) "completion for M-x man" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/man-completion/index.html")) nil])
  (man-preview [cl-struct-package-desc man-preview (10) "preview nroff man file source" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/man-preview/index.html")) nil])
  (mine-sweeper-auto [cl-struct-package-desc mine-sweeper-auto (6) "automated mine sweeping for mine-sweeper.el" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/mine-sweeper-auto/index.html")) nil])
  (mo-mode [cl-struct-package-desc mo-mode (14) "view and edit gettext .mo message files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/mo-mode/index.html")) nil])
  (nobreak-fade [cl-struct-package-desc nobreak-fade (9) "some functions for `fill-nobreak-predicate'" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/nobreak-fade/index.html")) nil])
  (nroff-filladapt [cl-struct-package-desc nroff-filladapt (5) "nroff comment prefixes for filladapt" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/nroff-filladapt/index.html")) nil])
  (oeis [cl-struct-package-desc oeis (8) "helpers for the Online Encyclopedia of Integer Sequences" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/oeis-el/index.html")) nil])
  (parasep [cl-struct-package-desc parasep (6) "more paragraph separators" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/parasep/index.html")) nil])
  (pcf2bdf [cl-struct-package-desc pcf2bdf (13) "view .pcf compiled font files as bdf" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/pcf2bdf/index.html")) nil])
  (perl-env-substitute [cl-struct-package-desc perl-env-substitute (3) "Perl style $ENV{VARNAME} in substitute-in-filename" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-env-substitute/index.html")) nil])
  (perl-pod-coding [cl-struct-package-desc perl-pod-coding (8) "coding system from =encoding in perl files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-pod-coding/index.html")) nil])
  (perl-pod-gt [cl-struct-package-desc perl-pod-gt (18) "helpers for Perl POD <> markup" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-pod-gt/index.html")) nil])
  (perl-pod-preview [cl-struct-package-desc perl-pod-preview (17) "preview perl pod documentation" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-pod-preview/index.html")) nil])
  (perl-quote [cl-struct-package-desc perl-quote (5) "helpers for Perl quoted strings" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-quote/index.html")) nil])
  (perl-use-utf8-coding [cl-struct-package-desc perl-use-utf8-coding (5) "coding system from \"use utf8\" in perl code" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/perl-use-utf8-coding/index.html")) nil])
  (pst-format [cl-struct-package-desc pst-format (8) "view perl Storable files as human readable text" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/pst-format/index.html")) nil])
  (quick-yes [cl-struct-package-desc quick-yes (9) "M-y to answer \"yes\" to `yes-or-no-p'." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/quick-yes/index.html")) nil])
  (scroll-1 [cl-struct-package-desc scroll-1 (9) "bind j and k to scroll the window up and down" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/scroll-1/index.html")) nil])
  (sh-autoconf [cl-struct-package-desc sh-autoconf (8) "autoconf flavour for sh-mode" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/sh-autoconf/index.html")) nil])
  (sqlite-dump [cl-struct-package-desc sqlite-dump (9) "view dump of sqlite database file" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/sqlite-dump/index.html")) nil])
  (startup-file-name-history [cl-struct-package-desc startup-file-name-history (5) "command line files into file-name-history" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/startup-file-name-history/index.html")) nil])
  (tcd-format [cl-struct-package-desc tcd-format (7) "view XTide .tcd tide constituent database files" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/tcd-format/index.html")) nil])
  (tex-math-preview [cl-struct-package-desc tex-math-preview (16) "preview TeX math expressions." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/tex-math-preview/index.html")) nil])
  (texinfo-nobreak [cl-struct-package-desc texinfo-nobreak (8) "texinfo line break workarounds for past makeinfo" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/texinfo-nobreak/index.html")) nil])
  (texinfo-warn [cl-struct-package-desc texinfo-warn (9) "warn about tabs and more in texinfo" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/texinfo-warn/index.html")) nil])
  (tty-format [cl-struct-package-desc tty-format (10) "text file backspacing and ANSI SGR as faces" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/tty-format/index.html")) nil])
  (unicode-disp [cl-struct-package-desc unicode-disp (11) "display-table fallbacks for some unicode chars" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/unicode-disp/index.html")) nil])
  (upstr [cl-struct-package-desc upstr (4) "up-list out of a string or TeX maths too" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/upstr/index.html")) nil])
  (variable-at-point-tick [cl-struct-package-desc variable-at-point-tick (4) "variable-at-point on a 'foo (for Emacs 23)" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/variable-at-point-tick/index.html")) nil])
  (weblint [cl-struct-package-desc weblint (5) "run the weblint program" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/weblint/index.html")) nil])
  (wx-look [cl-struct-package-desc wx-look (6) "lookup wxWidgets functions in its manual." nil single "user42" nil ((:url . "http://user42.tuxfamily.org/wx-look/index.html")) nil])
  (xml-coding [cl-struct-package-desc xml-coding (9) "coding system from tag in xml files (for Emacs 21)" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/xml-coding/index.html")) nil])
  (xtide [cl-struct-package-desc xtide (24) "XTide display in Emacs" nil single "user42" nil ((:url . "http://user42.tuxfamily.org/xtide/index.html")) nil])
 )
