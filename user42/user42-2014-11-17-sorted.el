'(
  (ac-tex-ref . [(2) nil "auto-complete for tex-mode \\ref and \\cite labels" single "user42"])
  (accjournal . [(6) nil "double entry journal accounting" single "user42"])
  (align-let . [(12) nil "align expressions in a lisp \"let\"" single "user42"])
  (arc-lzh-exe . [(7) nil "archive-mode support for LHa self-extracting .exe" single "user42"])
  (areabrowse . [(3) nil "browse diku mud .are area files" single "user42"])
  (aumix-mode . [(7) nil "run the aumix program in a buffer" single "user42"])
  (bytecomp-simplify . [(17) nil "byte compile warnings for simplifications" single "user42"])
  (checkdoc-autoload . [(2) nil "check for various autoload cookies" single "user42"])
  (checkdoc-batch . [(5) nil "batch report of M-x checkdoc things" single "user42"])
  (checkdoc-keywords . [(6) nil "check for known values in Keywords header" single "user42"])
  (checkdoc-url-buttonize . [(1) nil "check URL `' linking in docstrings" single "user42"])
  (cl-loop-aplist . [(4) nil "cl loop macro alist and plist support" single "user42"])
  (compilation-always-kill . [(5) nil "kill compilation without prompting" single "user42"])
  (compilation-emacs21-batch . [(4) nil "error regexps for emacs21 byte compiler" single "user42"])
  (compilation-ledger . [(1) nil "error regexps for ledger" single "user42"])
  (compilation-onewin . [(3) nil "whole-frame window for compile buffer" single "user42"])
  (compilation-perl . [(13) nil "extra error regexps for Perl" single "user42"])
  (compilation-recenter-end . [(6) nil "compilation-mode window recentre" single "user42"])
  (compilation-weblint . [(6) nil "error regexps for weblint" single "user42"])
  (compile-command-default . [(12) nil "establish a default for M-x compile" single "user42"])
  (completion-ignored-build . [(11) nil "some built completion-ignored-extensions" single "user42"])
  (copyright-both-ends . [(4) nil "update copyright at start and end of file" single "user42"])
  (diff-save-buffer . [(13) nil "default filename when saving a diff." single "user42"])
  (dired-visit-history . [(3) nil "add dired visited files to find-file history" single "user42"])
  (do-not-edit . [(14) nil "read-only buffer for generated files" single "user42"])
  (elisp-docstring-preview . [(4) nil "preview Emacs Lisp docstring" single "user42"])
  (ffap-I-option . [(1) nil "recognise -I/usr/include/foo" single "user42"])
  (ffap-gcc-path . [(8) nil "get gcc's include path for ffap-c-path" single "user42"])
  (ffap-href . [(3) nil "find href URL/link anywhere in the tag" single "user42"])
  (ffap-include-start . [(10) nil "recognise C #include when at start of line" single "user42"])
  (ffap-makefile-vars . [(4) nil "find file with makefile variables expanded" single "user42"])
  (ffap-mml . [(8) nil "find Gnus message MML attached file at point" single "user42"])
  (ffap-perl-module . [(22) nil "find perl module at point with ffap" single "user42"])
  (ffap-pod-F . [(4) nil "follow Perl pod F<filename>" single "user42"])
  (ffap-rfc-directories . [(8) nil "look for RFCs in local directories too" single "user42"])
  (ffap-rfc-space . [(10) nil "recognise RFC with a space, like \"RFC 1234\"" single "user42"])
  (filladapt-pat . [(5) nil "add or remove some filladapt patterns" single "user42"])
  (formfeed-hline . [(4) nil "display formfeed with horizontal line" single "user42"])
  (gtk-look . [(26) nil "lookup Gtk and Gnome documentation." single "user42"])
  (gutenberg-coding . [(14) nil "coding system for Project Gutenberg EBooks." single "user42"])
  (help-xref-elfiles . [(3) nil "buttonize foo.el and .emacs filenames in docstrings" single "user42"])
  (html-coding . [(12) nil "coding system from meta in html files (for Emacs 21)" single "user42"])
  (html-sizes . [(14) nil "maintain file sizes shown for html links" single "user42"])
  (html-smarter-href . [(1) nil "smarter html-href-anchor reading" single "user42"])
  (imagetext . [(10) nil "show text parts of image files" single "user42"])
  (info-lookmore . [(5) nil "more things for info-look.el" single "user42"])
  (ispell-stopwords . [(8) nil "use perl POD \"=for stopwords\" in ispell" single "user42"])
  (jka-compr-dictzip . [(1) nil "dictzip .dz for jka-compr" single "user42"])
  (localedef-overlay . [(3) nil "mode for glibc locale definition files" single "user42"])
  (mailcap-mode . [(3) nil "mailcap file editing mode" single "user42"])
  (make-mode-fillindent . [(4) nil "filling indented makefile comments" single "user42"])
  (makeinfo-info . [(8) nil "use Info-mode with makeinfo-buffer." single "user42"])
  (man-completion . [(33) nil "completion for M-x man" single "user42"])
  (man-preview . [(9) nil "preview nroff man file source" single "user42"])
  (mine-sweeper-auto . [(5) nil "automated mine sweeping for mine-sweeper.el" single "user42"])
  (mo-mode . [(13) nil "view and edit gettext .mo message files" single "user42"])
  (nobreak-fade . [(8) nil "some functions for `fill-nobreak-predicate'" single "user42"])
  (nroff-filladapt . [(3) nil "nroff comment prefixes for filladapt" single "user42"])
  (oeis . [(4) nil "helpers for the Online Encyclopedia of Integer Sequences" single "user42"])
  (parasep . [(4) nil "more paragraph separators" single "user42"])
  (pcf2bdf . [(13) nil "view .pcf compiled font files as bdf" single "user42"])
  (perl-env-substitute . [(1) nil "Perl style $ENV{VARNAME} in substitute-in-filename" single "user42"])
  (perl-pod-coding . [(7) nil "coding system from =encoding in perl files" single "user42"])
  (perl-pod-gt . [(18) nil "helpers for Perl POD <> markup" single "user42"])
  (perl-pod-preview . [(16) nil "preview perl pod documentation" single "user42"])
  (perl-quote . [(4) nil "helpers for Perl quoted strings" single "user42"])
  (perl-use-utf8-coding . [(4) nil "coding system from \"use utf8\" in perl code" single "user42"])
  (pst-format . [(7) nil "view perl Storable files as human readable text" single "user42"])
  (quick-yes . [(8) nil "M-y to answer \"yes\" to `yes-or-no-p'." single "user42"])
  (scroll-1 . [(8) nil "bind j and k to scroll the window up and down" single "user42"])
  (sh-autoconf . [(7) nil "autoconf flavour for sh-mode" single "user42"])
  (sqlite-dump . [(8) nil "view dump of sqlite database file" single "user42"])
  (startup-file-name-history . [(4) nil "command line files into file-name-history" single "user42"])
  (tcd-format . [(7) nil "view XTide .tcd tide constituent database files" single "user42"])
  (tex-math-preview . [(15) nil "preview TeX math expressions." single "user42"])
  (texinfo-nobreak . [(6) nil "texinfo line break workarounds" single "user42"])
  (texinfo-warn . [(8) nil "warn about tabs and more in texinfo" single "user42"])
  (tty-format . [(9) nil "text file backspacing and ANSI SGR as faces" single "user42"])
  (unicode-disp . [(10) nil "display-table fallbacks for some unicode chars" single "user42"])
  (upstr . [(2) nil "up-list out of a string too" single "user42"])
  (variable-at-point-tick . [(3) nil "variable-at-point on a 'foo (for Emacs 23)" single "user42"])
  (weblint . [(5) nil "run the weblint program" single "user42"])
  (wx-look . [(5) nil "lookup wxWidgets functions in its manual." single "user42"])
  (xml-coding . [(8) nil "coding system from tag in xml files (for Emacs 21)" single "user42"])
  (xtide . [(24) nil "XTide display in Emacs" single "user42"])
 )
