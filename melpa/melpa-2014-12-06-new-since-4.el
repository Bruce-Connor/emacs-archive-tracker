'(
  (2048-game . [(20140910 2243) nil "play 2048 in Emacs" single ((:url . "https://bitbucket.org/zck/2048.el")) "melpa"])
  (4clojure . [(20131014 1507) ((json (1 2)) (request (0 2 0))) "Open and evaluate 4clojure.com questions" single ((:keywords "languages" "data")) "melpa"])
  (@ . [(20140707 520) ((queue (0 1)) (emacs (24))) "multiple-inheritance prototype-based objects DSL" tar ((:url . "https://github.com/skeeto/at-el")) "melpa"])
  (ac-anaconda . [(20141110 1219) ((auto-complete (1 4 0)) (anaconda-mode (0 1 0)) (dash (2 6 0))) "Anaconda sources for auto-complete-mode" single ((:url . "https://github.com/proofit404/ac-anaconda")) "melpa"])
  (ac-c-headers . [(20131015 2339) nil "auto-complete source for C headers" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (ac-cake . [(20140315 929) ((cake (1 4 2)) (auto-complete (1 4 0))) "CakePHP Minor Mode auto-complete.el source" single ((:url . "http://code.101000lab.org")) "melpa"])
  (ac-cake2 . [(20140320 8) ((cake2 (1 1 2)) (auto-complete (1 4 0))) "CakePHP 2 Minor Mode auto-complete.el source" single ((:url . "http://code.101000lab.org")) "melpa"])
  (ac-capf . [(20140720 1817) ((auto-complete (1 4)) (cl-lib (0 5))) "auto-complete source with completion-at-point" single ((:url . "https://github.com/syohex/emacs-ac-capf")) "melpa"])
  (ac-cider . [(20141123 343) ((cider (0 8 0)) (auto-complete (1 4)) (cl-lib (0 3))) "Clojure auto-complete sources using CIDER" single ((:url . "https://github.com/clojure-emacs/ac-cider") (:keywords "languages" "clojure" "nrepl" "cider" "compliment")) "melpa"])
  (ac-dcd . [(20141124 15) ((auto-complete (1 3 1)) (flycheck-dmd-dub (0 7))) "Auto Completion source for dcd for GNU Emacs" single ((:url . "http://github.com/atilaneves/ac-dcd") (:keywords "languages")) "melpa"])
  (ac-emmet . [(20131015 858) ((emmet-mode (1 0 2)) (auto-complete (1 4))) "auto-complete sources for emmet-mode's snippets" single ((:url . "https://github.com/yasuyk/ac-emmet") (:keywords "completion" "convenience" "emmet")) "melpa"])
  (ac-etags . [(20131127 311) ((auto-complete (1 4))) "etags/ctags completion source for auto-complete" single ((:url . "https://github.com/syohex/emacs-ac-etags")) "melpa"])
  (ac-geiser . [(20130928 2347) ((geiser (0 5)) (auto-complete (1 4))) "Auto-complete backend for geiser" tar nil "melpa"])
  (ac-haskell-process . [(20141206 1138) ((auto-complete (1 4)) (haskell-mode (13))) "Haskell auto-complete source which uses the current haskell process" single ((:keywords "languages")) "melpa"])
  (ac-html . [(20141205 629) ((auto-complete (1 4))) "auto complete source for html tags and attributes" tar ((:url . "https://github.com/cheunghy/ac-html") (:keywords "html" "auto-complete" "rails" "ruby")) "melpa"])
  (ac-inf-ruby . [(20131115 350) ((inf-ruby (2 3 2)) (auto-complete (1 4))) "Enable auto-complete in inf-ruby sessions" single ((:keywords "languages" "tools")) "melpa"])
  (ac-ispell . [(20140702 1553) ((auto-complete (1 4))) "ispell completion source for auto-complete" single ((:url . "https://github.com/syohex/emacs-ac-ispell")) "melpa"])
  (ac-octave . [(20140702 802) ((auto-complete (1 4 0))) "An auto-complete source for Octave" single ((:url . "https://github.com/coldnew/ac-octave") (:keywords "octave" "auto-complete" "completion")) "melpa"])
  (ac-skk . [(20141130 1237) ((auto-complete (1 3 1)) (skk (15 2)) (tinysegmenter (0)) (cl-lib (0 5))) "auto-complete-mode source for DDSKK a.k.a Japanese input method" single ((:url . "https://github.com/myuhe/ac-skk.el") (:keywords "convenience" "auto-complete")) "melpa"])
  (ac-sly . [(20141003 11) ((sly (2 9)) (auto-complete (1 4)) (cl-lib (0 5))) "An auto-complete source using sly completions" single ((:url . "https://github.com/qoocku/ac-sly")) "melpa"])
  (ace-isearch . [(20141024 2256) ((ace-jump-mode (2 0)) (helm-swoop (1 4)) (emacs (24))) "A seamless bridge between isearch and ace-jump-mode" single ((:url . "https://github.com/tam17aki/ace-isearch")) "melpa"])
  (ace-jump-zap . [(20141024 745) ((ace-jump-mode (1 0))) "Character zapping, `ace-jump-mode` style" single ((:url . "https://github.com/waymondo/ace-jump-zap") (:keywords "convenience" "tools" "extensions")) "melpa"])
  (ace-link . [(20140404 2310) ((ace-jump-mode (2 0)) (noflet (0 0 10))) "Quickly follow links using `ace-jump-mode'" single ((:url . "https://github.com/abo-abo/ace-link") (:keywords "convenience" "links")) "melpa"])
  (ace-window . [(20141121 254) ((ace-jump-mode (2 0))) "Quickly switch windows using `ace-jump-mode'." single ((:url . "https://github.com/abo-abo/ace-window") (:keywords "cursor" "window" "location")) "melpa"])
  (achievements . [(20141114 1157) ((keyfreq (0 0 3))) "Achievements for emacs usage." tar nil "melpa"])
  (addressbook-bookmark . [(20141205 2108) ((emacs (24))) "An address book based on Standard Emacs bookmarks." single ((:url . "https://github.com/thierryvolpiatto/addressbook-bookmark")) "melpa"])
  (afternoon-theme . [(20140104 1059) ((emacs (24 1))) "Dark color theme with a deep blue background" single ((:url . "http://github.com/osener/emacs-afternoon-theme") (:keywords "themes")) "melpa"])
  (aggressive-indent . [(20141130 315) ((emacs (24 1)) (names (0 5)) (cl-lib (0 5))) "Minor mode to aggressively keep your code always indented" single ((:url . "http://github.com/Bruce-Connor/aggressive-indent-mode") (:keywords "indent" "lisp" "maint" "tools")) "melpa"])
  (alchemist . [(20141206 605) ((emacs (24))) "Elixir tooling integration into emacs" tar ((:url . "http://www.github.com/tonini/alchemist.el") (:keywords "languages" "mix" "elixir" "elixirc" "hex")) "melpa"])
  (alect-themes . [(20141129 2323) nil "Configurable color themes (light, dark and black) for Emacs 24" tar nil "melpa"])
  (amd-mode . [(20141107 409) ((projectile (0 10 0)) (s (1 9 0)) (f (0 16 2)) (dash (2 5 0)) (makey (0 3)) (js2-mode (20140114)) (js2-refactor (0 6 1))) "Minor mode for handling JavaScript AMD module requirements." single ((:keywords "javascript" "amd" "projectile")) "melpa"])
  (ample-regexps . [(20140707 1348) nil "ample regular expressions for Emacs" single ((:keywords "regexps" "extensions" "tools")) "melpa"])
  (ample-zen-theme . [(20131129 440) nil "AmpleZen Theme for Emacs 24" single ((:url . "https://github.com/mjwall/ample-zen") (:keywords "theme" "dark" "emacs 24")) "melpa"])
  (anaconda-mode . [(20141118 916) ((emacs (24)) (json-rpc (0 0 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" tar ((:url . "https://github.com/proofit404/anaconda-mode")) "melpa"])
  (anchored-transpose . [(20080905 554) nil "Transposes a phrase around an anchor phrase" single ((:keywords "tools" "convenience")) "melpa"])
  (ansible . [(20141202 130) ((s (1 9 0)) (f (0 16 2))) "Ansible minor mode" tar ((:url . "http://101000lab.org")) "melpa"])
  (ansible-doc . [(20141202 1006) ((emacs (24 1))) "Ansible documentation Minor Mode" single ((:url . "https://github.com/lunaryorn/ansible-doc.el") (:keywords "tools" "help")) "melpa"])
  (ant . [(20131227 2307) nil "helpers for compiling with ant" single ((:keywords "compilation" "ant" "java")) "melpa"])
  (anx-api . [(20140208 714) nil "Interact with the AppNexus API from Emacs." single ((:keywords "convenience" "json" "rest" "api" "appnexus")) "melpa"])
  (anyins . [(20131229 241) nil "Insert content at multiple places from shell command or kill-ring" single ((:url . "http://github.com/antham/anyins") (:keywords "insert" "rectangular")) "melpa"])
  (anything-exuberant-ctags . [(20140316 1637) ((anything (1 3 9))) "Exuberant ctags anything.el interface" single ((:url . "http://code.101000lab.org") (:keywords "anything" "exuberant ctags")) "melpa"])
  (anything-milkode . [(20140518 743) ((milkode (0 3)) (anything (1 3 9))) "Command line search with Milkode" single ((:keywords "milkode" "anything" "search" "grep" "jump" "keyword")) "melpa"])
  (anything-project . [(20141024 227) ((imakado (0 12)) (anything (1 3 9))) "finding any resource of a project" single ((:url . "https://github.com/imakado/anything-project") (:keywords "convenience")) "melpa"])
  (anything-prosjekt . [(20140129 4) ((prosjekt (0 3)) (anything (0))) "Anything integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (anything-replace-string . [(20140317 336) ((anything (1 3 9))) "`replace-string' and `query-replace' `anything.el' interface" single ((:url . "http://code.101000lab.org")) "melpa"])
  (anything-sage . [(20141005 413) ((cl-lib (0 5)) (anything (1 3 9)) (sage-shell-mode (0 0 1))) "An anything extension for sage-shell-mode." single ((:url . "https://github.com/stakemori/anything-sage") (:keywords "sage" "math" "anything")) "melpa"])
  (anzu . [(20141129 2221) ((cl-lib (0 5)) (emacs (24))) "Show number of matches in mode-line while searching" single ((:url . "https://github.com/syohex/emacs-anzu")) "melpa"])
  (aok . [(20130824 1127) nil "various useful ways to do `multi-occur'" single nil "melpa"])
  (apel . [(20141024 1642) nil "APEL (A Portable Emacs Library) provides support for portable Emacs Lisp programs" tar nil "melpa"])
  (apples-mode . [(20110120 2018) nil "Major mode for editing and executing AppleScript code" tar ((:keywords "applescript" "languages")) "melpa"])
  (apropos-fn+var . [(20140506 608) nil "Apropos for functions and variables" single ((:url . "http://www.emacswiki.org/apropos-fn+var.el") (:keywords "apropos")) "melpa"])
  (arduino-mode . [(20140108 1602) nil "Major mode for the Arduino language" single ((:keywords "languages" "arduino")) "melpa"])
  (aria2 . [(20141107 1517) ((emacs (24 4))) "Control aria2c commandline tool from Emacs" single ((:url . "https://bitbucket.org/ukaszg/aria2-mode") (:keywords "download" "bittorrent" "aria2")) "melpa"])
  (ariadne . [(20131117 911) ((bert (0 1))) "Ariadne plugin for Emacs" single ((:keywords "comm" "convenience" "processes")) "melpa"])
  (artbollocks-mode . [(20141205 850) nil "A minor mode to guide art writers." single ((:url . "https://github.com/sachac/artbollocks-mode")) "melpa"])
  (asn1-mode . [(20131218 420) ((emacs (24 3))) "ASN.1/GDMO mode for GNU Emacs" single ((:url . "https://github.com/kawabata/asn1-mode/") (:keywords "languages" "processes" "tools")) "melpa"])
  (auctex-lua . [(20130818 1120) nil "Lua editing support for AUCTeX" single ((:url . "http://github.com/vermiculus/auctex-lua") (:keywords "latex" "lua")) "melpa"])
  (aurel . [(20140627 631) nil "Search, get info, vote and download AUR packages" single ((:url . "https://github.com/alezost/aurel") (:keywords "tools")) "melpa"])
  (aurora-config-mode . [(20140520 203) nil "Major mode for Apache Aurora configuration files" single ((:url . "https://github.com/bdd/aurora-config.el") (:keywords "languages" "configuration")) "melpa"])
  (auto-complete-auctex . [(20140223 958) ((yasnippet (0 6 1)) (auto-complete (1 4))) "auto-completion for auctex" single nil "melpa"])
  (auto-complete-c-headers . [(20140325 835) ((auto-complete (1 4))) "An auto-complete source for C/C++ header files" single ((:keywords "c")) "melpa"])
  (auto-complete-chunk . [(20140225 146) ((auto-complete (1 4))) "Auto-completion for dot.separated.words." single ((:url . "https://github.com/tkf/auto-complete-chunk")) "melpa"])
  (auto-complete-exuberant-ctags . [(20140320 24) ((auto-complete (1 4 0))) "Exuberant ctags auto-complete.el source" single ((:url . "http://code.101000lab.org") (:keywords "anto-complete" "exuberant ctags")) "melpa"])
  (auto-complete-nxml . [(20140220 2058) ((auto-complete (1 4))) "do completion by auto-complete.el on nXML-mode" single ((:url . "https://github.com/aki2o/auto-complete-nxml") (:keywords "completion" "html" "xml")) "melpa"])
  (auto-complete-pcmp . [(20140226 2251) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide auto-complete sources using pcomplete results" single ((:url . "https://github.com/aki2o/auto-complete-pcmp") (:keywords "completion")) "melpa"])
  (auto-complete-rst . [(20140225 144) ((auto-complete (1 4))) "Auto-complete extension for ReST and Sphinx" tar ((:url . "https://github.com/tkf/auto-complete-rst")) "melpa"])
  (auto-complete-sage . [(20141005 415) ((auto-complete (1 4 0)) (sage-shell-mode (0 0 1))) "An auto-complete source for sage-shell-mode." single ((:url . "https://github.com/stakemori/auto-complete-sage") (:keywords "sage" "math" "auto-complete")) "melpa"])
  (auto-highlight-symbol . [(20130313 243) nil "Automatic highlighting current symbol minor mode" single ((:url . "http://github.com/gennad/auto-highlight-symbol/raw/master/auto-highlight-symbol.el") (:keywords "highlight" "face" "match" "convenience")) "melpa"])
  (auto-yasnippet . [(20140807 2343) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" single ((:url . "https://github.com/abo-abo/auto-yasnippet")) "melpa"])
  (autodisass-java-bytecode . [(20141017 1701) nil "Automatically disassemble Java bytecode" single ((:keywords "convenience" "data" "files")) "melpa"])
  (autodisass-llvm-bitcode . [(20140918 1110) nil "Automatically disassemble LLVM bitcode" single ((:keywords "convenience" "data" "files")) "melpa"])
  (autofit-frame . [(20140514 1527) ((fit-frame (0))) "Automatically resize one-window frames to fit" single ((:url . "http://www.emacswiki.org/autofit-frame.el") (:keywords "internal" "extensions" "convenience" "local")) "melpa"])
  (automargin . [(20131112 14) nil "add margins to windows not-splitted, and center them" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (autotest . [(20140714 1617) nil "ZenTest's autotest integration with emacs." single ((:url . "https://github.com/zenspider/elisp/blob/master/autotest.el") (:keywords "testing" "ruby" "convenience")) "melpa"])
  (autotetris-mode . [(20141114 846) ((cl-lib (0 5))) "automatically play tetris" single ((:url . "https://github.com/skeeto/autotetris-mode")) "melpa"])
  (babel . [(20131231 725) nil "interface to web translation services such as Babelfish" single ((:url . "http://github.com/juergenhoetzel/babel.el") (:keywords "translation" "web")) "melpa"])
  (badger-theme . [(20140716 1932) nil "A dark theme for Emacs 24." single ((:url . "https://github.com/ccann/badger-theme")) "melpa"])
  (bats-mode . [(20141115 701) nil "Emacs mode for editing and running Bats tests" single ((:url . "https://github.com/dougm/bats-mode") (:keywords "bats" "tests")) "melpa"])
  (bbdb- . [(20140221 1554) ((bbdb (20140123 1541)) (log4e (0 2 0)) (yaxception (0 1))) "provide interface for more easily search/choice than BBDB." single ((:url . "https://github.com/aki2o/bbdb-") (:keywords "bbdb" "news" "mail")) "melpa"])
  (bbdb-csv-import . [(20140802 442) ((pcsv (1 3 3)) (dash (2 5 0)) (bbdb (20140412 1949))) "import csv to bbdb version 3+" single ((:url . "https://gitlab.com/iankelling/bbdb-csv-import") (:keywords "csv" "util" "bbdb")) "melpa"])
  (beeminder . [(20140421 828) ((org (7))) "Emacs interface for Beeminder" single ((:url . "http://www.philnewton.net/code/beeminder-el/") (:keywords "beeminder")) "melpa"])
  (benchmark-init . [(20141004 609) nil "Benchmarks Emacs require and load calls" tar ((:keywords "benchmark")) "melpa"])
  (bert . [(20131117 214) nil "BERT serialization library for Emacs" single ((:keywords "comm" "data")) "melpa"])
  (better-registers . [(20140813 819) nil "facilities for more powerful registers" single ((:keywords "register" "macro")) "melpa"])
  (bibslurp . [(20130904 1053) ((s (1 6 0)) (dash (1 5 0))) "retrieve BibTeX entries from NASA ADS" single ((:url . "https://github.com/mkmcc/bibslurp") (:keywords "bibliography" "nasa ads")) "melpa"])
  (bibtex-utils . [(20140707 1057) nil "Provides utilities for extending BibTeX mode" single ((:url . "https://bitbucket.org/tws/bibtex-utils") (:keywords "bibtex")) "melpa"])
  (bison-mode . [(20141119 43) nil "Major mode for editing bison, yacc and lex files." single ((:keywords "bison-mode" "yacc-mode")) "melpa"])
  (blgrep . [(20140325 313) ((clmemo (20140321 715))) "Block grep" tar ((:keywords "tools" "convenience")) "melpa"])
  (bliss-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Bliss (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (bog . [(20141123 2318) ((dash (2 5 0))) "Extensions for research notes in Org mode" single ((:url . "https://github.com/kyleam/bog") (:keywords "bib" "outlines")) "melpa"])
  (bongo . [(20141117 712) nil "play music with Emacs" tar nil "melpa"])
  (boon . [(20141124 439) ((emacs (24 3)) (expand-region (0 10 0))) "Ergonomic Command Mode for Emacs." tar nil "melpa"])
  (boron-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Boron (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (bpe . [(20131227 2120) nil "Blog from Org mode to Blogger" single ((:url . "https://github.com/yuutayamada/bpe") (:keywords "blogger" "blog")) "melpa"])
  (bracketed-paste . [(20140222 1801) ((emacs (24 3))) "bracketed paste mode support within emacs -nw" single ((:keywords "terminals")) "melpa"])
  (brainfuck-mode . [(20140220 1855) ((langdoc (20130601 1450))) "Brainfuck mode for Emacs" single ((:url . "https://github.com/tom-tan/brainfuck-mode/") (:keywords "brainfuck" "langdoc")) "melpa"])
  (browse-kill-ring+ . [(20131226 1812) ((browse-kill-ring (0))) "Extensions to `browse-kill-ring.el'." single ((:url . "http://www.emacswiki.org/browse-kill-ring+.el") (:keywords "convenience")) "melpa"])
  (btc-ticker . [(20140313 641) ((json (1 2)) (request (0 2 0))) "Shows latest bitcoin price" single ((:keywords "news")) "melpa"])
  (bubbleberry-theme . [(20141017 244) ((emacs (24 1))) "A theme based on LightTable for Emacs24" single ((:url . "https://github.com/jasonm23/emacs-bubbleberry-theme")) "melpa"])
  (buffer-buttons . [(20131127 946) nil "Define, save, and load code-safe buttons in files for emacs" single ((:url . "https://github.com/rpav/buffer-buttons")) "melpa"])
  (busybee-theme . [(20130920 942) nil "port of vim's mustang theme" single ((:url . "http://github.com/mswift42/busybee-theme")) "melpa"])
  (cake . [(20140603 2131) ((cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP Minor Mode" tar ((:url . "https://github.com/k1LoW/emacs-cake")) "melpa"])
  (cake-inflector . [(20140415 158) ((s (1 9 0))) "Lazy porting CakePHP infrector.php to el" single ((:url . "https://github.com/k1LoW/emacs-cake-inflector")) "melpa"])
  (cake2 . [(20140626 542) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (ht (2 0)) (json (1 2)) (cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP2 Minor Mode" tar ((:url . "http://code.101000lab.org")) "melpa"])
  (cal-china-x . [(20140907 855) nil "Chinese calendar extras" single ((:url . "http://xwl.appspot.com/ref/cal-china-x.el")) "melpa"])
  (calmer-forest-theme . [(20130925 2210) nil "Darkish theme with green/orange tint" single ((:url . "https://github.com/caldwell/calmer-forest-theme")) "melpa"])
  (camcorder . [(20141129 707) ((emacs (24)) (names (20141119)) (cl-lib (0 5))) "Record screencasts in gif or other formats." single ((:url . "http://github.com/Bruce-Connor/camcorder.el") (:keywords "multimedia" "screencast")) "melpa"])
  (cask . [(20141109 309) ((s (1 8 0)) (dash (2 2 0)) (f (0 16 0)) (epl (0 5)) (shut-up (0 1 0)) (cl-lib (0 3)) (package-build (0 1))) "Cask: Project management for Emacs package development" tar ((:url . "http://github.com/cask/cask") (:keywords "speed" "convenience")) "melpa"])
  (caskxy . [(20140513 839) ((log4e (0 2 0)) (yaxception (0 1))) "Control Cask in Emacs" single ((:url . "https://github.com/aki2o/caskxy") (:keywords "convenience")) "melpa"])
  (cd-compile . [(20141108 1157) nil "run compile in a specific directory" single nil "melpa"])
  (cdb . [(20141201 754) nil "constant database (cdb) reader for Emacs Lisp" single ((:keywords "cdb")) "melpa"])
  (cdlatex . [(20140707 426) nil "Fast input methods for LaTeX environments and math" single ((:keywords "tex")) "melpa"])
  (cdnjs . [(20140217 1312) ((cl-lib (0 3)) (dash (2 5 0)) (deferred (0 3 2)) (f (0 16 0)) (pkg-info (0 4))) "A front end for http://cdnjs.com" single ((:url . "https://github.com/yasuyk/cdnjs.el") (:keywords "tools")) "melpa"])
  (cedit . [(20141120 717) nil "paredit-like commands for c-like languages" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (centered-window-mode . [(20140730 247) nil "Center the text when there's only one window" single ((:url . "https://github.com/ikame/centered-window-mode") (:keywords "faces" "windows")) "melpa"])
  (centimacro . [(20140306 627) nil "Assign multiple macros as global key bindings" single ((:url . "https://github.com/abo-abo/centimacro") (:keywords "macros")) "melpa"])
  (cerbere . [(20140418 715) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5))) "Unit testing in Emacs for several programming languages" tar ((:url . "https://github.com/nlamirault/cerbere") (:keywords "python" "go" "php" "tests" "tdd")) "melpa"])
  (cfengine-code-style . [(20131209 411) nil "C code style for CFEngine project." single ((:url . "https://github.com/cfengine/core")) "melpa"])
  (cg . [(20141106 208) nil "major mode for editing Constraint Grammar files" single ((:url . "http://beta.visl.sdu.dk/constraint_grammar.html") (:keywords "languages")) "melpa"])
  (chatwork . [(20141203 1632) nil "ChatWork client for Emacs" single ((:url . "https://github.com/ataka/chatwork") (:keywords "web")) "melpa"])
  (checkbox . [(20141116 1658) ((emacs (24)) (cl-lib (0 5))) "Quick manipulation of textual checkboxes" single ((:url . "http://github.com/camdez/checkbox.el") (:keywords "convenience")) "melpa"])
  (chef-mode . [(20111121 700) nil "minor mode for editing an opscode chef repository" single ((:keywords "chef" "knife")) "melpa"])
  (cherry-blossom-theme . [(20140930 1722) ((emacs (24 0))) "a soothing color theme for Emacs24." single ((:url . "https://github.com/byels/emacs-cherry-blossom-theme")) "melpa"])
  (chruby . [(20141126 57) nil "Emacs integration for chruby" single ((:url . "http://www.emacswiki.org/emacs/ChrubyEl") (:keywords "ruby" "chruby")) "melpa"])
  (cider . [(20141205 831) ((clojure-mode (3 0 0)) (cl-lib (0 5)) (dash (2 4 1)) (pkg-info (0 4)) (emacs (24)) (queue (0 1 1))) "Clojure Integrated Development Environment and REPL" tar ((:url . "http://www.github.com/clojure-emacs/cider") (:keywords "languages" "clojure" "cider")) "melpa"])
  (cider-decompile . [(20131116 1002) ((cider (0 3 0)) (javap-mode (9))) "decompilation extension for cider" single ((:url . "http://www.github.com/clojure-emacs/cider-decompile") (:keywords "languages" "clojure" "cider")) "melpa"])
  (cider-profile . [(20141120 625) ((cider (0 8 0))) "CIDER profiling support" single ((:url . "http://github.com/thunknyc/nrepl-profile") (:keywords "cider" "clojure" "profiling")) "melpa"])
  (cider-spy . [(20140831 2355) ((cider (0 5 0)) (dash (2 5 0)) (cl-lib (0 5))) "Spy on CIDER to get info" single ((:url . "http://www.github.com/jonpither/cider-spy") (:keywords "languages" "clojure" "cider" "nrepl")) "melpa"])
  (cl-lib-highlight . [(20140127 1312) ((cl-lib (0 3))) "full cl-lib font-lock highlighting" single ((:url . "https://github.com/skeeto/cl-lib-highlight")) "melpa"])
  (clang-format . [(20141125 1418) ((json (1 3))) "Format code using clang-format" single ((:keywords "tools" "c")) "melpa"])
  (clean-aindent-mode . [(20140615 1532) nil "Simple indent and unindent, trims indent white-space" single ((:url . "https://github.com/pmarinov/clean-aindent-mode") (:keywords "indentation" "whitespace" "backspace")) "melpa"])
  (clevercss . [(20131228 1755) nil "A major mode for editing CleverCSS files" single ((:keywords "languages" "css")) "melpa"])
  (clips-mode . [(20131012 1401) nil "Major mode for editing CLIPS code and REPL" tar nil "melpa"])
  (clmemo . [(20140321 715) nil "Change Log MEMO" tar ((:url . "https://github.com/ataka/clmemo") (:keywords "convenience")) "melpa"])
  (clojure-cheatsheet . [(20140316 1520) ((helm (1 5 3)) (cider (0 1 8))) "The Clojure Cheatsheet for Emacs" single ((:url . "https://github.com/krisajenkins/clojure-cheatsheet") (:keywords "clojure" "nrepl" "cheatsheet" "helm")) "melpa"])
  (clojure-mode-extra-font-locking . [(20140902 943) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" single ((:url . "http://github.com/clojure-emacs/clojure-mode") (:keywords "languages" "lisp")) "melpa"])
  (clojure-quick-repls . [(20141202 516) ((cider (0 8 1))) "Quickly create Clojure and ClojureScript repls for a project." single ((:url . "https://github.com/symfrog/clojure-quick-repls") (:keywords "languages" "clojure" "cider" "clojurescript")) "melpa"])
  (cmake-font-lock . [(20141107 1248) ((cmake-mode (0 0))) "Advanced, type aware, highlight support for CMake" single ((:url . "https://github.com/Lindydancer/cmake-font-lock") (:keywords "faces" "languages")) "melpa"])
  (cmake-ide . [(20141107 700) nil "No description available." single nil "melpa"])
  (cmake-mode . [(20141112 635) nil "major-mode for editing CMake sources" single nil "melpa"])
  (cmds-menu . [(20131226 1816) nil "`Recent Commands' submenu for the menu-bar `Tools' menu." single ((:url . "http://www.emacswiki.org/cmds-menu.el") (:keywords "convenience" "command" "menu")) "melpa"])
  (cobra-mode . [(20140116 1316) nil "Major mode for .NET-based Cobra language" single ((:url . "http://github.com/Nekroze/cobra-mode") (:keywords "languages")) "melpa"])
  (codebug . [(20140929 1437) nil "Interact with codebug" single ((:url . "http://www.shanedowling.com/")) "melpa"])
  (codesearch . [(20141019 625) ((dash (2 8 0))) "Easy access to the codesearch tools" single ((:url . "https://github.com/abingham/codesearch.el") (:keywords "tools" "development" "search")) "melpa"])
  (codic . [(20140822 348) ((cl-lib (0 5))) "Search Codic (codic.jp) naming dictionaries" tar ((:url . "https://github.com/syohex/emacs-codic")) "melpa"])
  (colemak-evil . [(20140508 1612) ((evil (1 0 8))) "Colemak-friendly keybindings for Evil." single ((:url . "https://github.com/patbl/colemak-evil")) "melpa"])
  (colonoscopy-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Colonoscopy (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (color-identifiers-mode . [(20140523 2358) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" single ((:url . "https://github.com/ankurdave/color-identifiers-mode") (:keywords "faces" "languages")) "melpa"])
  (colorsarenice-theme . [(20141202 532) ((emacs (24))) "A colorful color theme." tar nil "melpa"])
  (column-enforce-mode . [(20140902 949) nil "Highlight text that extends beyond a  column" single ((:url . "www.github.com/jordonbiondo/column-enforce-mode")) "melpa"])
  (command-log-mode . [(20140711 1843) nil "log keyboard commands to buffer" single ((:url . "https://github.com/lewang/command-log-mode") (:keywords "help")) "melpa"])
  (comment-dwim-2 . [(20141004 333) nil "An all-in-one comment command to rule them all" single ((:url . "https://github.com/remyferre/comment-dwim-2") (:keywords "convenience")) "melpa"])
  (company-anaconda . [(20141110 1236) ((company (0 8 0)) (anaconda-mode (0 1 0)) (cl-lib (0 5 0))) "Anaconda backend for company-mode" single ((:url . "https://github.com/proofit404/anaconda-mode")) "melpa"])
  (company-auctex . [(20141111 533) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Company-mode auto-completion for AUCTeX" single ((:url . "https://github.com/alexeyr/company-auctex/")) "melpa"])
  (company-c-headers . [(20140930 1102) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single ((:keywords "development" "company")) "melpa"])
  (company-edbi . [(20141110 1219) ((company (0 8 5)) (edbi (0 1 3)) (cl-lib (0 5 0)) (s (1 9 0))) "Edbi backend for company-mode" single ((:url . "https://github.com/proofit404/company-edbi")) "melpa"])
  (company-ghc . [(20141206 503) ((cl-lib (0 5)) (company (0 8 0)) (ghc (4 1 1)) (emacs (24))) "company-mode ghc-mod backend" single ((:url . "https://github.com/iquiw/company-ghc") (:keywords "haskell" "completion")) "melpa"])
  (company-go . [(20141024 2248) ((company (0 8 0))) "company-mode backend for Go (using gocode)" single ((:keywords "languages")) "melpa"])
  (company-irony . [(20140629 1118) ((emacs (24 1)) (company (0 8 0)) (irony (0 1 0)) (cl-lib (0 5))) "company-mode completion back-end for irony-mode" single ((:url . "https://github.com/Sarcasm/company-irony/") (:keywords "convenience")) "melpa"])
  (company-math . [(20141120 1654) ((company (0 8 0)) (math-symbol-lists (1 0))) "Completion back-ends for for math unicode symbols and latex tags" single ((:url . "https://github.com/vspinu/company-math") (:keywords "unicode" "symbols" "completion")) "melpa"])
  (company-tern . [(20141110 1220) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" single ((:url . "https://github.com/proofit404/company-tern")) "melpa"])
  (company-ycm . [(20140904 1117) ((ycm (0 1))) "company-ycm" single ((:keywords "abbrev")) "melpa"])
  (company-ycmd . [(20141205 600) ((ycmd (0 1)) (company (0 8 3)) (deferred (0 2 0)) (s (1 0 0))) "company-mode backend for ycmd" single ((:url . "https://github.com/abingham/emacs-ycmd")) "melpa"])
  (conkeror-minor-mode . [(20140705 1007) nil "Mode for editing conkeror javascript files." single ((:url . "http://github.com/BruceConnor/conkeror-minor-mode") (:keywords "programming" "tools")) "melpa"])
  (connection . [(20140717 2029) nil "TCP-based client connection" single ((:keywords "network")) "melpa"])
  (control-mode . [(20140218 607) nil "A \"control\" mode, similar to vim's \"normal\" mode" single ((:url . "https://github.com/stephendavidmarsh/control-mode") (:keywords "convenience" "emulations")) "melpa"])
  (cpputils-cmake . [(20141117 231) nil "Easy real time C++ syntax check and intellisense if you use CMake" tar nil "melpa"])
  (creds . [(20140510 1006) ((s (1 9 0)) (dash (2 5 0))) "A parser credentials file library (not limited to credentials entries)" tar nil "melpa"])
  (creole-mode . [(20130721 1750) nil "a markup mode for creole" single ((:url . "https://github.com/nicferrier/creole-mode") (:keywords "hypermedia" "wp")) "melpa"])
  (crm-custom . [(20140816 948) nil "Alternate `completing-read-multiple' that uses `completing-read'" single ((:url . "https://github.com/DarwinAwardWinner") (:keywords "completion" "minibuffer" "multiple elements")) "melpa"])
  (cryptsy-public-api . [(20141008 528) ((json (1 2))) "Library for working with the Cryptsy public API" single ((:keywords "cryptsy" "bitcoin" "litecoin" "dogecoin")) "melpa"])
  (css-eldoc . [(20140128 2337) nil "an eldoc-mode plugin for CSS source code" tar nil "melpa"])
  (cssh . [(20120823 1241) nil "clusterssh implementation for emacs" single ((:url . "http://tapoueh.org/emacs/cssh.html") (:keywords "clusterssh" "ssh" "cssh")) "melpa"])
  (ctl-mode . [(20131229 2316) nil "Major mode for editing GrADS script files" single ((:keywords "grads" "script" "major-mode")) "melpa"])
  (ctxmenu . [(20140303 1342) ((popup (20140205 103)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a context menu like right-click." tar ((:url . "https://github.com/aki2o/emacs-ctxmenu") (:keywords "popup")) "melpa"])
  (cucumber-goto-step . [(20131209 2119) ((pcre2el (1 5))) "Jump to cucumber step definition" single ((:url . "http://orthogonal.me")) "melpa"])
  (cuda-mode . [(20140704 1357) nil "NVIDIA CUDA Major Mode" single ((:keywords "c" "languages")) "melpa"])
  (cursor-test . [(20131207 932) ((emacs (24))) "testing library for cursor position in emacs." single ((:url . "https://github.com/ainame/cursor-test.el")) "melpa"])
  (cycbuf . [(20131203 1237) nil "Cycle buffers, inspired by swbuff.el, swbuff-x.el, and bs.el" single ((:url . "https://github.com/martinp26/cycbuf") (:keywords "files" "convenience" "buffer switching")) "melpa"])
  (cygwin-mount . [(20131111 2146) nil "Teach EMACS about cygwin styles and mount points." single ((:keywords "files" "mount" "cygwin")) "melpa"])
  (cypher-mode . [(20140807 950) nil "major mode for editing cypher scripts" single ((:url . "http://github.com/fxbois/cypher-mode") (:keywords "cypher" "graph")) "melpa"])
  (cython-mode . [(20140705 1229) nil "Major mode for editing Cython files" single nil "melpa"])
  (dactyl-mode . [(20140906 1025) nil "Major mode for editing Pentadactyl config files" single ((:url . "https://github.com/luxbock/dactyl-mode") (:keywords "languages" "vim")) "melpa"])
  (dakrone-theme . [(20140211 2045) nil "dakrone's custom dark theme" single ((:url . "https://github.com/dakrone/dakrone-theme") (:keywords "color" "themes" "this" "file" "is" "not" "part" "of" "gnu" "emacs.")) "melpa"])
  (darcula-theme . [(20141114 312) nil "Inspired by IntelliJ's Darcula theme" single ((:url . "https://github.com/fommil/darcula-theme-emacs") (:keywords "faces")) "melpa"])
  (dark-krystal-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Dark Krystal (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (dark-souls . [(20140314 428) nil "Prepare to die" single ((:url . "http://github.com/tomjakubowski/dark-souls.el") (:keywords "games")) "melpa"])
  (darkburn-theme . [(20141205 226) nil "A not-so-low contrast color theme for Emacs." single ((:url . "http://github.com/gorauskas/darkburn-theme")) "melpa"])
  (darkmine-theme . [(20140829 714) nil "Yet another emacs dark color theme." single ((:url . "https://github.com/pierre-lecocq/darkmine-theme")) "melpa"])
  (dash-functional . [(20141008 712) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single ((:keywords "lisp" "functions" "combinators")) "melpa"])
  (date-field . [(20141128 1705) ((dash (2 9 0)) (log4e (0 2 0)) (yaxception (0 3 2))) "Date widget" single ((:url . "https://github.com/aki2o/emacs-date-field") (:keywords "widgets")) "melpa"])
  (dayone . [(20131117 255) ((uuid (0 0 3)) (mustache (0 22)) (ht (1 5))) "Utility script for Day One" tar ((:url . "https://github.com/mori-dev/emacs-dayone") (:keywords "day one" "tools" "convenience")) "melpa"])
  (db-pg . [(20130131 1102) ((pg (0 12)) (db (0 0 6))) "A PostgreSQL adapter for emacs-db" single ((:keywords "data" "comm" "database" "postgresql")) "melpa"])
  (ddg . [(20140904 1410) nil "DuckDuckGo API for ELisp." single ((:url . "http://emacswiki.org/emacs/ddg.el")) "melpa"])
  (debpaste . [(20140617 2258) ((xml-rpc (1 6 7))) "Interface for getting/posting/deleting pastes from paste.debian.net" single ((:url . "http://github.com/alezost/debpaste.el") (:keywords "paste")) "melpa"])
  (debug-print . [(20140125 1619) ((emacs (24))) "A nice printf debugging environment by the way Gauche do" single ((:url . "https://github.com/kenoss/debug-print") (:keywords "extensions" "lisp" "tools" "maint")) "melpa"])
  (decl . [(20140903 6) ((dash (2 5 0)) (emacs (24 3)) (cl-lib (0 3))) "Enables you to organize your code in a declarative manner." single ((:url . "https://github.com/preetpalS/decl.el")) "melpa"])
  (dedukti-mode . [(20140929 731) nil "Major mode for Dedukti files" single nil "melpa"])
  (delight . [(20141128 1437) nil "A dimmer switch for your lighter text." single ((:url . "http://www.emacswiki.org/emacs/DelightedModes")) "melpa"])
  (demangle-mode . [(20141116 1829) ((emacs (24)) (cl-lib (0 1))) "Automatically demangle C++ symbols" single ((:url . "https://github.com/liblit/demangle-mode") (:keywords "c" "tools")) "melpa"])
  (demo-it . [(20140819 838) nil "Utility functions for creating demonstrations" single ((:keywords "abbrev")) "melpa"])
  (dictionary . [(20140717 2029) ((connection (1 10)) (link (1 10))) "Client for rfc2229 dictionary servers" single ((:keywords "interface" "dictionary")) "melpa"])
  (diffscuss-mode . [(20141014 1657) nil "Major mode for diffscuss files." single ((:keywords "tools")) "melpa"])
  (digistar-mode . [(20141021 1646) nil "major mode for Digistar scripts" single ((:keywords "languages")) "melpa"])
  (dim-autoload . [(20140309 1759) nil "dim complete autoload cookie lines" single ((:url . "http://github.com/tarsius/dim-autoload") (:keywords "convenience")) "melpa"])
  (dired-avfs . [(20141203 732) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "AVFS support for dired" single ((:keywords "files")) "melpa"])
  (dired-filter . [(20141203 820) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Ibuffer-like filtering for dired" single ((:keywords "files")) "melpa"])
  (dired-hacks-utils . [(20140711 1229) ((dash (2 5 0))) "Utilities and helpers for dired-hacks collection" single ((:keywords "files")) "melpa"])
  (dired-imenu . [(20140109 810) nil "imenu binding for dired mode" single ((:url . "https://github.com/DamienCassou/dired-imenu") (:keywords "dired" "imenu")) "melpa"])
  (dired-k . [(20141110 2035) ((cl-lib (0 5)) (emacs (24))) "highlight dired buffer by file size, modified time, git status" tar ((:url . "https://github.com/syohex/emacs-dired-k")) "melpa"])
  (dired-narrow . [(20140711 1226) ((dash (2 7 0)) (dired-hacks-utils (0 0 1))) "Live-narrowing of search results for dired" single ((:keywords "files")) "melpa"])
  (dired-open . [(20140319 508) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Open files from dired using using custom actions" single ((:keywords "files")) "melpa"])
  (dired-rainbow . [(20140719 705) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Extended file highlighting according to its type" single ((:keywords "files")) "melpa"])
  (dired-ranger . [(20141012 927) ((dash (2 7 0)) (dired-hacks-utils (0 0 1))) "Implementation of useful ranger features for dired" single ((:keywords "files")) "melpa"])
  (dired-sort . [(20090209 438) nil "Sort files in dired." single ((:url . "http://www.emacswiki.org/emacs/download/dired-sort.el") (:keywords "dired" "sort")) "melpa"])
  (dired-sort-menu+ . [(20131226 1833) ((dired-sort-menu (0))) "Extensions to `dired-sort-menu.el'" single ((:url . "http://www.emacswiki.org/dired-sort-menu+.el") (:keywords "directories" "diredp" "dired")) "melpa"])
  (dired-sort-menu . [(20130824 1207) nil "provide menu/dialogue for dired sort options" single ((:url . "http://centaur.maths.qmw.ac.uk/Emacs/") (:keywords "dired" "sort" "menu" "dialogue")) "melpa"])
  (dired-subtree . [(20141201 1320) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Insert subdirectories in a tree-like fashion" single ((:keywords "files")) "melpa"])
  (dired-toggle . [(20140907 1349) nil "provide a simple way to toggle dired buffer for current directory" single ((:url . "https://github.com/fasheng/dired-toggle") (:keywords "dired" "toggle")) "melpa"])
  (dired-toggle-sudo . [(20131022 626) nil "Browse directory with sudo privileges." single ((:keywords "emacs" "dired")) "melpa"])
  (direx-grep . [(20140515 806) ((direx (0 1 -3))) "Grep node of direx.el using incremental search like anything.el/helm.el" single ((:url . "https://github.com/aki2o/direx-grep") (:keywords "convenience")) "melpa"])
  (dirtree . [(20140129 832) ((tree-mode (1 1 1 1)) (windata (0))) "Directory tree views" single nil "melpa"])
  (dirtree-prosjekt . [(20140129 104) ((prosjekt (0 3)) (dirtree (0 1))) "dirtree integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (discover . [(20140103 1339) ((makey (0 3))) "discover more of Emacs" single nil "melpa"])
  (discover-js2-refactor . [(20140129 752) ((js2-refactor (20131221 501)) (discover (20140103 1339))) "Adds discover context menu for js2-refactor" single ((:keywords "js2-refactor" "discover")) "melpa"])
  (discover-my-major . [(20140510 1007) ((makey (0 2))) "Discover key bindings and their meaning for the current Emacs major mode" single ((:url . "https://github.com/steckerhalter/discover-my-major") (:keywords "discover" "help" "major-mode" "keys")) "melpa"])
  (display-theme . [(20140115 756) ((emacs (24))) "display current theme(s) at mode-line" single ((:url . "https://github.com/kawabata/emacs-display-theme/") (:keywords "tools")) "melpa"])
  (distinguished-theme . [(20140513 1150) nil "A dark and elegant theme for emacs." single ((:url . "https://github.com/Lokaltog/distinguished-theme")) "melpa"])
  (django-mode . [(20140207 1050) nil "Major mode for Django web framework." tar ((:keywords "languages")) "melpa"])
  (django-snippets . [(20131229 811) ((yasnippet (0 8 0))) "Yasnippets for django" tar ((:url . "https://github.com/myfreeweb/django-mode")) "melpa"])
  (dkdo . [(20131110 319) ((dkmisc (0 50)) (emacs (24 1))) "Do List major mode based on org-mode." tar nil "melpa"])
  (dklrt . [(20131110 541) ((dkmisc (0 50)) (ledger-mode (20130908 1357)) (emacs (24 1))) "Ledger Recurring Transactions." tar nil "melpa"])
  (dkmisc . [(20131110 315) ((emacs (24 1))) "Miscellaneous functions required by dk* packages." tar nil "melpa"])
  (docean . [(20141127 2014) ((emacs (24)) (cl-lib (0 5)) (request (0 2 0))) "Interact with DigitalOcean from Emacs." single ((:url . "https://github.com/emacs-pe/docean.el") (:keywords "convenience")) "melpa"])
  (dockerfile-mode . [(20140623 1007) nil "Major mode for editing Docker's Dockerfiles" single nil "melpa"])
  (dokuwiki-mode . [(20140130 936) nil "Major mode for DokuWiki document" single ((:url . "https://github.com/kbkbkbkb1/emacs-dokuwiki") (:keywords "dokuwiki")) "melpa"])
  (doremi . [(20131226 1835) nil "Do Re Mi: Incremental change using arrow keys or mouse wheel." single ((:url . "http://www.emacswiki.org/doremi.el") (:keywords "keys" "cycle" "repeat" "higher-order")) "melpa"])
  (doremi-cmd . [(20131226 1833) ((doremi (0))) "Miscellaneous Do Re Mi commands" single ((:url . "http://www.emacswiki.org/doremi-cmd.el") (:keywords "keys" "cycle" "repeat")) "melpa"])
  (doremi-frm . [(20141201 435) ((doremi (0)) (faces+ (0)) (frame-fns (0)) (hexrgb (0))) "Incrementally adjust face attributes and frame parameters." single ((:url . "http://www.emacswiki.org/doremi-frm.el") (:keywords "frames" "extensions" "convenience" "keys" "repeat" "cycle")) "melpa"])
  (doremi-mac . [(20131226 1835) nil "A macro for defining Do Re Mi commands." single ((:url . "http://www.emacswiki.org/doremi-mac.el") (:keywords "extensions" "convenience" "keys" "repeat" "cycle")) "melpa"])
  (dos . [(20140808 2135) nil "Major mode for editing Dos scripts" single ((:keywords "languages")) "melpa"])
  (download-region . [(20141002 801) ((cl-lib (0 3))) "Simple in-buffer download manager" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (downplay-mode . [(20140110 2058) nil "focus attention on a region of the buffer" single ((:url . "https://github.com/tobias/downplay-mode/")) "melpa"])
  (draft-mode . [(20140609 756) nil "Rough drafting for Emacs." single ((:url . "https://github.com/gaudecker/draft-mode") (:keywords "draft" "drafting")) "melpa"])
  (dtrt-indent . [(20140325 1330) nil "Adapt to foreign indentation offsets" tar ((:keywords "convenience" "files" "languages" "c")) "melpa"])
  (dts-mode . [(20141014 1409) nil "Major mode for Devicetree source code" single ((:keywords "languages")) "melpa"])
  (ducpel . [(20140418 2216) ((cl-lib (0 5))) "Logic game with sokoban elements" tar ((:url . "https://github.com/alezost/ducpel") (:keywords "games")) "melpa"])
  (dummyparens . [(20141009 324) nil "parenthesis auto-pairing and wrapping" single ((:url . "https://github.com/snosov1/dummyparens") (:keywords "dummyparens" "auto-pair" "wrapping")) "melpa"])
  (dvorak-mode . [(20141110 1220) nil "Switch to dvorak layout easily" single ((:url . "https://github.com/proofit404/dvorak-mode")) "melpa"])
  (e2wm-direx . [(20140815 1613) ((e2wm (1 2)) (direx (0 1 -3))) "Plugin of e2wm.el for direx.el" single ((:url . "https://github.com/aki2o/e2wm-direx") (:keywords "tools" "window manager" "convenience")) "melpa"])
  (e2wm-pkgex4pl . [(20140525 347) ((e2wm (1 2)) (plsense-direx (0 2 0))) "Plugin of e2wm.el for package explorer of Perl" single ((:url . "https://github.com/aki2o/e2wm-pkgex4pl") (:keywords "tools" "window manager" "perl")) "melpa"])
  (e2wm-sww . [(20140524 158) ((e2wm (1 2))) "Plugin of e2wm.el to switch plugin quickly" single ((:url . "https://github.com/aki2o/e2wm-sww") (:keywords "tools" "window manager")) "melpa"])
  (e2wm-term . [(20141009 608) ((e2wm (1 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perspective of e2wm.el for work in terminal" single ((:url . "https://github.com/aki2o/e2wm-term") (:keywords "tools" "window manager")) "melpa"])
  (easy-kill . [(20141001 847) ((emacs (24)) (cl-lib (0 5))) "kill & mark things easily" tar ((:url . "https://github.com/leoliu/easy-kill") (:keywords "killing" "convenience")) "melpa"])
  (easy-kill-extras . [(20140930 447) ((easy-kill (0 9 4))) "Extra functions for easy-kill." single ((:url . "https://github.com/knu/easy-kill-extras.el") (:keywords "killing" "convenience")) "melpa"])
  (edbi-database-url . [(20141110 1221) ((emacs (24)) (edbi (0 1 3))) "Run edbi with database url" single ((:url . "https://github.com/proofit404/edbi-database-url")) "melpa"])
  (edbi-django . [(20141110 1221) ((emacs (24)) (edbi (0 1 3)) (f (0 17 1))) "Run edbi with django settings" tar ((:url . "https://github.com/proofit404/edbi-django")) "melpa"])
  (edbi-sqlite . [(20141110 1222) ((emacs (24)) (edbi (0 1 3))) "Open sqlite files with edbi" single ((:url . "https://github.com/proofit404/edbi-sqlite")) "melpa"])
  (ede-compdb . [(20141003 1510) ((ede (1 2)) (semantic (2 2)) (cl-lib (0 4))) "Support for compilation database projects in EDE" single ((:keywords "development" "ninja" "build" "cedet" "ede")) "melpa"])
  (edit-indirect . [(20141202 545) ((emacs (24 3))) "Edit regions in separate buffers" single ((:url . "https://github.com/Fanael/edit-indirect")) "melpa"])
  (edts . [(20141119 445) ((auto-complete (1 3 1)) (auto-highlight-symbol (1 53)) (dash (1 5 0)) (eproject (1 5)) (erlang (2 4 1)) (f (0 16 0)) (popup (0 4))) "Erlang Development Tool Suite" tar nil "melpa"])
  (efire . [(20130811 1649) ((circe (1 2))) "Use campfire from Emacs" single ((:url . "https://github.com/capitaomorte/efire") (:keywords "convenience" "tools")) "melpa"])
  (eide . [(20141121 642) nil "IDE interface" tar nil "melpa"])
  (el-get . [(20141202 1906) nil "Manage the external elisp bits and pieces you depend upon" tar ((:url . "http://www.emacswiki.org/emacs/el-get") (:keywords "emacs" "package" "elisp" "install" "elpa" "git" "git-svn" "bzr" "cvs" "svn" "darcs" "hg" "apt-get" "fink" "pacman" "http" "http-tar" "emacswiki")) "melpa"])
  (el-spice . [(20140805 1138) ((thingatpt+ (0))) "Extra spice for emacs lisp programming" tar ((:url . "https://github.com/vedang/el-spice") (:keywords "languages" "extensions")) "melpa"])
  (el-sprunge . [(20140106 1739) ((web-server (20140105 2246)) (htmlize (20130207 1202)) (emacs (24 3))) "Command line paste server with Emacs highlighting" tar nil "melpa"])
  (el-spy . [(20131226 1208) nil "Mocking framework for Emacs lisp. It also support spy, proxy." single ((:url . "https://github.com/uk-ar/el-spy") (:keywords "test")) "melpa"])
  (el2markdown . [(20141031 1456) nil "Convert commentary section of elisp files to markdown." single ((:url . "https://github.com/Lindydancer/el2markdown")) "melpa"])
  (electric-spacing . [(20140929 1817) ((cl-lib (0 5))) "insert spaces automatically between user-defined patterns" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (elfeed . [(20141104 1857) ((emacs (24 1))) "an Emacs Atom/RSS feed reader" tar nil "melpa"])
  (elfeed-org . [(20141003 1543) ((elfeed (1 1 1)) (org (7))) "Configure elfeed with one or more org-mode files" single ((:url . "https://github.com/remyhonig/elfeed-org") (:keywords "news")) "melpa"])
  (elfeed-web . [(20140702 1626) ((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1))) "web interface to Elfeed" tar nil "melpa"])
  (elhome . [(20131202 1108) ((initsplit (20120630))) "A framework for a \"home\" Emacs configuration" tar ((:url . "http://github.com/demyanrogozhin/elhome") (:keywords "lisp")) "melpa"])
  (elisp-sandbox . [(20131116 1042) nil "Evaluate EmacsLisp expressions in a sandbox" single ((:url . "https://github.com/joelmccracken/elisp-sandbox") (:keywords "lisp")) "melpa"])
  (elixir-yasnippets . [(20141020 651) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar nil "melpa"])
  (elm-mode . [(20141202 916) nil "Major mode for Elm" tar ((:url . "https://github.com/jcollard/elm-mode")) "melpa"])
  (elmacro . [(20141109 724) ((s (1 9 0)) (dash (1 5 0)) (cl-lib (0 5))) "Convert keyboard macros to elisp" single ((:url . "https://github.com/Silex/elmacro") (:keywords "macro" "elisp" "convenience")) "melpa"])
  (elpa-mirror . [(20141025 2021) nil "ELPA mirror from locally installed packages is easy" tar nil "melpa"])
  (elscreen-mew . [(20140629 816) ((elscreen (20120413 807))) "ElScreen Add-On for Mew" single ((:url . "https://github.com/masutaka/elscreen-mew")) "melpa"])
  (elwm . [(20140217 528) ((dash (1 1 0))) "Minimalistic window manager for emacs" single ((:url . "https://github.com/Fuco1/elwm") (:keywords "docs")) "melpa"])
  (elx . [(20140310 1049) ((emacs (24 3 50))) "extract information from Emacs Lisp libraries" single ((:url . "https://github.com/tarsius/elx") (:keywords "docs" "libraries" "packages")) "melpa"])
  (emacsagist . [(20140331 1130) ((cl-lib (0 5))) "Search Packagist.org packages without leaving Emacs" single ((:url . "http://github.com/echosa/emacsagist") (:keywords "tools")) "melpa"])
  (emacsql . [(20140525 1615) ((emacs (24 3)) (cl-lib (0 3)) (finalize (1 0 0)) (pg (0 12))) "high-level SQL database front-end" tar ((:url . "https://github.com/skeeto/emacsql")) "melpa"])
  (emms-info-mediainfo . [(20131223 500) ((emms (0))) "Info-method for EMMS using medianfo" single ((:keywords "multimedia" "processes")) "melpa"])
  (emms-soundcloud . [(20131221 345) ((emms (20131016)) (json (1 2))) "EMMS source for Soundcloud audio sharing platform" single ((:url . "http://github.com/osener/emms-soundcloud") (:keywords "emms" "soundcloud")) "melpa"])
  (emoji-display . [(20140117 213) nil "emoji displaying module" single ((:url . "https://github.com/ikazuhiro/emoji-display") (:keywords "emoji")) "melpa"])
  (engine-mode . [(20140512 1325) nil "Define and query search engines from within Emacs." single ((:url . "https://github.com/hrs/engine-mode/engine-mode.el")) "melpa"])
  (ensime . [(20141204 118) ((s (1 3 0)) (dash (2 8 0)) (popup (0 5 0)) (auto-complete (1 4 0)) (scala-mode2 (0 21)) (sbt-mode (0 3))) "ENhanced Scala Interaction Mode for Emacs" tar nil "melpa"])
  (epl . [(20140823 609) ((cl-lib (0 3))) "Emacs Package Library" single ((:url . "http://github.com/cask/epl") (:keywords "convenience")) "melpa"])
  (epresent . [(20140904 1953) nil "Simple presentation mode for Emacs Org-mode" single ((:keywords "gui")) "melpa"])
  (eprime-mode . [(20140513 1116) nil "An E-prime checking mode for Emacs" single ((:url . "https://github.com/AndrewHynes/eprime-mode") (:keywords "e-prime" "english" "grammar")) "melpa"])
  (erc-colorize . [(20140808 220) nil "Per user colorization of whole message" single ((:url . "https://github.com/thisirs/erc-colorize.git") (:keywords "erc" "convenience")) "melpa"])
  (erc-crypt . [(20140316 651) nil "Symmetric Encryption for ERC" single ((:keywords "application")) "melpa"])
  (erc-view-log . [(20140227 1239) nil "Major mode for viewing ERC logs" single ((:url . "http://github.com/Niluge-KiWi/erc-view-log/raw/master/erc-view-log.el") (:keywords "erc" "viewer" "logs" "colors")) "melpa"])
  (erc-youtube . [(20140827 1056) ((erc (5 3))) "Show received youtube urls in the ERC buffer" single ((:keywords "multimedia")) "melpa"])
  (ert-async . [(20140908 138) nil "Async support for ERT" single ((:url . "http://github.com/rejeep/ert-async.el") (:keywords "test")) "melpa"])
  (ert-junit . [(20140830 1521) ((ert (0))) "JUnit XML reports from ert results" single ((:url . "http://bitbucket.org/olanilsson/ert-junit") (:keywords "tools" "test" "unittest" "ert")) "melpa"])
  (ert-modeline . [(20140115 215) ((s (1 3 1)) (dash (1 2 0)) (emacs (24 1)) (projectile (0 9 1))) "displays ert test results in the modeline." single ((:keywords "tools" "tests" "convenience")) "melpa"])
  (es-mode . [(20141117 944) nil "A major mode for editing Elasticsearch queries" tar ((:url . "http://www.github.com/dakrone/es-mode") (:keywords "elasticsearch")) "melpa"])
  (es-windows . [(20140211 104) ((cl-lib (0 3)) (emacs (24))) "Window-management utilities" single ((:url . "https://github.com/sabof/es-windows")) "melpa"])
  (eshell-prompt-extras . [(20141110 151) nil "Display extra information for your eshell prompt." single ((:keywords "eshell" "prompt")) "melpa"])
  (esqlite . [(20140310 308) ((pcsv (1 3 3))) "Manipulate sqlite file from Emacs" single ((:url . "https://github.com/mhayashi1120/Emacs-esqlite/raw/master/esqlite.el") (:keywords "data")) "melpa"])
  (esqlite-helm . [(20140121 623) ((esqlite (0 2 0)) (helm (20131207 845))) "Define helm source for sqlite database" single ((:url . "https://github.com/mhayashi1120/Emacs-esqlite/raw/master/esqlite-helm.el") (:keywords "data")) "melpa"])
  (ess-smart-underscore . [(20131229 1851) ((ess (0))) "Ess Smart Underscore" tar ((:url . "http://github.com/mlf176f2/ess-smart-underscore.el") (:keywords "ess" "underscore")) "melpa"])
  (etags-select . [(20130824 1200) nil "Select from multiple tags" single ((:keywords "etags" "tags" "tag" "select")) "melpa"])
  (eval-in-repl . [(20141204 1810) ((dash (0 0 0)) (paredit (0 0 0))) "Consistent ESS-like eval interface for various REPLs" tar nil "melpa"])
  (eval-sexp-fu . [(20131230 1351) ((highlight (0))) "Tiny functionality enhancements for evaluating sexps." single ((:keywords "lisp" "highlight" "convenience")) "melpa"])
  (evil-args . [(20140329 1429) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." single ((:url . "http://github.com/wcsmith/evil-args") (:keywords "evil" "vim-emulation")) "melpa"])
  (evil-easymotion . [(20141205 1244) ((emacs (24)) (cl-lib (0 5)) (ace-jump-mode (20140616 115)) (noflet (20141102 654))) "A port of vim's easymotion to emacs" single ((:url . "https://github.com/pythonnut/evil-easymotion.el") (:keywords "convenience" "evil")) "melpa"])
  (evil-escape . [(20141202 1946) ((emacs (24)) (evil (1 0 9)) (key-chord (0 6))) "Customizable key sequence to escape from insert state and everything else." single ((:url . "https://github.com/syl20bnr/evil-escape") (:keywords "convenience" "editing" "evil")) "melpa"])
  (evil-exchange . [(20141127 2243) ((evil (1 0 7)) (cl-lib (0 3))) "Exchange text more easily within Evil" single ((:url . "http://github.com/Dewdrops/evil-exchange") (:keywords "evil" "plugin")) "melpa"])
  (evil-god-state . [(20141116 1855) ((evil (1 0 8)) (god-mode (2 12 0))) "use god-mode keybindings in evil-mode" single ((:url . "https://github.com/gridaphobe/evil-god-state") (:keywords "evil" "leader" "god-mode")) "melpa"])
  (evil-indent-textobject . [(20130831 1519) ((evil (0))) "evil textobjects based on indentation" single ((:url . "http://github.com/cofi/evil-indent-textobject") (:keywords "convenience" "evil")) "melpa"])
  (evil-jumper . [(20141120 614) ((evil (0))) "Jump like vimmers do!" single ((:url . "https://github.com/bling/evil-jumper") (:keywords "evil" "vim" "jumplist" "jump" "list")) "melpa"])
  (evil-lisp-state . [(20141117 1821) ((evil (1 0 9)) (smartparens (1 6 1))) "An evil state to navigate Lisp code and modify it with smartparens" single ((:url . "https://github.com/syl20bnr/evil-lisp-state") (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic")) "melpa"])
  (evil-matchit . [(20141121 530) nil "Vim matchit ported into Emacs (requires EVIL)" tar nil "melpa"])
  (evil-org . [(20141002 253) ((evil (0)) (org (0))) "evil keybindings for org-mode" single ((:url . "https://github.com/edwtjo/evil-org-mode.git") (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets")) "melpa"])
  (evil-search-highlight-persist . [(20141117 17) ((highlight (0))) "Persistent highlights after search" single nil "melpa"])
  (evil-space . [(20141203 121) ((evil (1 0 0))) "Repeat motion in Evil. Correct the behaviour of what SPC should do." single ((:url . "http://github.com/linktohack/evil-space") (:keywords "space" "repeat" "motion")) "melpa"])
  (evil-surround . [(20140616 1127) nil "emulate surround.vim from Vim" single ((:keywords "emulation" "vi" "evil mailing list: <implementations-list at lists.ourproject.org> subscribe: http://tinyurl.com/implementations-list newsgroup: nntp://news.gmane.org/gmane.emacs.vim-emulation archives: http://dir.gmane.org/gmane.emacs.vim-emulation")) "melpa"])
  (evil-tabs . [(20140821 1719) ((evil (0 0 0)) (elscreen (0 0 0))) "Integrating Vim-style tabs for Evil mode users." single ((:url . "https://github.com/krisajenkins/evil-tabs") (:keywords "evil" "tab" "tabs" "vim")) "melpa"])
  (evil-terminal-cursor-changer . [(20140423 1151) ((evil (1 0 8))) "Change cursor by evil state on terminal." single ((:url . "https://github.com/7696122/evil-terminal-cursor-changer") (:keywords "evil" "terminal" "cursor")) "melpa"])
  (evil-visualstar . [(20130925 1114) ((evil (0))) "Starts a * or # search from the visual selection" single ((:url . "https://github.com/bling/evil-visualstar") (:keywords "evil" "vim" "visualstar")) "melpa"])
  (evm . [(20141007 456) ((dash (2 3 0)) (f (0 13 0))) "Emacs Version Manager" single ((:url . "http://github.com/rejeep/evm")) "melpa"])
  (eww-lnum . [(20141123 1157) nil "Conkeror-like functionality for eww" single ((:url . "https://github.com/m00natic/eww-lnum") (:keywords "eww" "browse" "conkeror")) "melpa"])
  (eyebrowse . [(20141202 46) ((dash (2 7 0))) "Easy window config switching" single ((:url . "https://github.com/wasamasa/eyebrowse") (:keywords "convenience")) "melpa"])
  (eyedropper . [(20131226 1838) ((hexrgb (0))) "Pick foreground and background colors at cursor or pointer." single ((:url . "http://www.emacswiki.org/eyedropper.el") (:keywords "color" "rgb" "hsv" "hexadecimal" "face" "frame")) "melpa"])
  (eyuml . [(20141028 1527) ((request (0 2 0)) (s (1 8 0))) "Write textual uml diagram from emacs using yuml.me" single ((:url . "http://github.com/antham/eyuml") (:keywords "uml")) "melpa"])
  (ez-query-replace . [(20140810 517) ((dash (1 2 0))) "a smarter context-sensitive query-replace that can be reapplied" single nil "melpa"])
  (fabric . [(20141024 322) nil "Launch Fabric using Emacs" tar ((:url . "https://github.com/nlamirault/fabric.el") (:keywords "python" "fabric")) "melpa"])
  (face-remap+ . [(20131226 1839) nil "Extensions to standard library `face-remap.el'." single ((:url . "http://www.emacswiki.org/face-remap+.el") (:keywords "window" "frame" "face" "font")) "melpa"])
  (facemenu+ . [(20140831 551) nil "Extensions to `facemenu.el'." single ((:url . "http://www.emacswiki.org/facemenu+.el") (:keywords "faces" "extensions" "convenience" "menus" "local")) "melpa"])
  (faces+ . [(20131226 1840) nil "Extensions to `faces.el'." single ((:url . "http://www.emacswiki.org/faces+.el") (:keywords "faces" "local")) "melpa"])
  (faceup . [(20140921 1319) nil "Regression test system for font-lock" single ((:url . "https://github.com/Lindydancer/faceup") (:keywords "faces" "languages")) "melpa"])
  (fancy-battery . [(20140731 652) ((emacs (24 1))) "Fancy battery display" single ((:url . "https://github.com/lunaryorn/fancy-battery.el") (:keywords "convenience" "tools" "hardware")) "melpa"])
  (fancy-narrow . [(20141123 617) nil "narrow-to-region with more eye candy." single ((:url . "http://github.com/Bruce-Connor/fancy-narrow") (:keywords "faces" "convenience")) "melpa"])
  (fasd . [(20140715 1211) ((grizzl (0))) "Emacs integration for the command-line productivity booster `fasd'" single ((:url . "https://github.com/steckerhalter/emacs-fasd") (:keywords "cli" "bash" "zsh" "autojump")) "melpa"])
  (fasm-mode . [(20141124 1034) nil "Fasm major mode" single ((:url . "https://github.com/Fanael/fasm-mode")) "melpa"])
  (fetch . [(20131130 2330) nil "Fetch and unpack resources" single ((:url . "https://github.com/crshd/fetch.el")) "melpa"])
  (files+ . [(20140907 1958) nil "Enhancements of standard library `files.el'." single ((:url . "http://www.emacswiki.org/files+.el") (:keywords "internal" "extensions" "local")) "melpa"])
  (filesets+ . [(20131226 1842) nil "Extensions to `filesets.el'." single ((:url . "http://www.emacswiki.org/filesets+.el")) "melpa"])
  (finalize . [(20140127 1046) ((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4))) "finalizers for Emacs Lisp" tar nil "melpa"])
  (find-temp-file . [(20141124 307) nil "Open quickly a temporary file" single ((:url . "https://github.com/thisirs/find-temp-file.git") (:keywords "convenience")) "melpa"])
  (finder+ . [(20131226 1844) nil "Extensions to standard library finder.el" single ((:url . "http://www.emacswiki.org/finder+.el") (:keywords "help")) "melpa"])
  (fingers . [(20141205 1710) nil "Modal editing with universal text manipulation helpers." tar ((:url . "http://github.com/fgeller/fingers.el") (:keywords "fingers" "modal" "editing" "workman")) "melpa"])
  (firebelly-theme . [(20140410 155) ((cl-lib (0 5))) "a subdued, dark theme with pastelish colors." single ((:url . "https://github.com/startling/firebelly")) "melpa"])
  (firecode-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on FireCode (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (fish-mode . [(20141026 1934) ((emacs (24))) "Major mode for fish shell scripts" single ((:keywords "fish" "shell")) "melpa"])
  (fit-frame . [(20131226 1844) nil "Resize a frame.  In particular, fit a frame to its buffers." single ((:url . "http://www.emacswiki.org/fit-frame.el") (:keywords "internal" "extensions" "convenience" "local")) "melpa"])
  (flappymacs . [(20140715 901) nil "flappybird clone for emacs" single ((:url . "https://github.com/taksatou/flappymacs") (:keywords "games")) "melpa"])
  (flash-region . [(20130923 1117) nil "Flash a region" single ((:keywords "utility")) "melpa"])
  (flatland-black-theme . [(20141115 2230) ((emacs (24 0))) "an Emacs 24 theme based on Flatland Black (tmTheme)" single ((:url . "https://github.com/emacsfodder/flatland-black-theme")) "melpa"])
  (flatland-theme . [(20140805 305) nil "A simple theme for Emacs based on the Flatland theme for Sublime Text" single ((:url . "http://github.com/gregchapple/flatland-emacs")) "melpa"])
  (flatui-theme . [(20141008 315) nil "A color theme for Emacs based on flatuicolors.com" single ((:url . "https://github.com/john2x/flatui-theme.el")) "melpa"])
  (flim . [(20141109 201) ((apel (10 8))) "A library to provide basic features about message representation or encoding." tar nil "melpa"])
  (fliptext . [(20131114 218) nil "Input method for flipping characters upside down" single ((:keywords "games" "i18n")) "melpa"])
  (floobits . [(20141203 1950) ((json (1 2)) (highlight (0))) "Floobits plugin for real-time collaborative editing" tar ((:url . "http://github.com/Floobits/floobits-emacs") (:keywords "comm" "tools")) "melpa"])
  (flx-isearch . [(20141201 1725) ((emacs (24)) (flx (20140821)) (cl-lib (0 5))) "Fuzzy incremental searching for emacs" single ((:url . "https://github.com/pythonnut/flx-isearch") (:keywords "convenience" "search" "flx")) "melpa"])
  (flycheck-cask . [(20141130 105) ((emacs (24 1)) (flycheck (0 14)) (dash (2 4 0))) "Cask support in Flycheck" single ((:url . "https://github.com/flycheck/flycheck-cask") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-d-unittest . [(20141202 20) ((flycheck (0 21 -3 1)) (dash (1 4 0))) "Add D unittest support to flycheck" single ((:url . "https://github.com/tom-tan/flycheck-d-unittest/") (:keywords "flycheck" "d")) "melpa"])
  (flycheck-dedukti . [(20141002 201) ((flycheck (0 19)) (dedukti-mode (0 1))) "Flycheck integration of Dedukti" single nil "melpa"])
  (flycheck-dmd-dub . [(20140814 1259) ((flycheck (0 17))) "Sets flycheck-dmd-include-paths from dub package information" single ((:url . "http://github.com/atilaneves/flycheck-dmd-dub") (:keywords "languages")) "melpa"])
  (flycheck-google-cpplint . [(20140806 925) ((flycheck (0 20 -3 1))) "Help to comply with the Google C++ Style Guide" single ((:url . "https://github.com/flycheck/flycheck-google-cpplint/") (:keywords "flycheck" "c" "c++")) "melpa"])
  (flycheck-haskell . [(20141003 308) ((flycheck (0 19 -3)) (haskell-mode (13 7)) (dash (2 4 0))) "Flycheck: Cabal projects and sandboxes" tar ((:url . "https://github.com/flycheck/flycheck-haskell") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-hdevtools . [(20140829 853) ((flycheck (0 21 -3 1)) (dash (2 0))) "A flycheck checker for Haskell using hdevtools" single ((:url . "https://github.com/flycheck/flycheck-hdevtools") (:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-ledger . [(20140605 1146) ((flycheck (0 15))) "Flycheck integration for ledger files" single ((:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-mercury . [(20140806 925) ((flycheck (0 20 -3 1)) (s (1 9 0)) (dash (2 4 0))) "Mercury support in Flycheck" single ((:url . "https://github.com/flycheck/flycheck-mercury") (:keywords "convenience" "languages" "tools")) "melpa"])
  (flycheck-ocaml . [(20141203 843) ((emacs (24 1)) (flycheck (0 22 -3 1)) (merlin (2 0))) "Flycheck: OCaml support" single ((:url . "https://github.com/flycheck/flycheck-ocaml") (:keywords "convenience" "tools" "languages")) "melpa"])
  (flycheck-pos-tip . [(20140606 510) ((flycheck (0 18)) (popup (0 5 0))) "Flycheck errors display in tooltip" single ((:url . "https://github.com/flycheck/flycheck-pos-tip") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-pyflakes . [(20140630 1521) ((flycheck (0 18))) "Support pyflakes in flycheck" single nil "melpa"])
  (flycheck-rust . [(20140814 115) ((emacs (24 1)) (flycheck (0 20)) (dash (2 4 0))) "Flycheck: Rust additions and Cargo support" single ((:url . "https://github.com/flycheck/flycheck-rust") (:keywords "tools" "convenience")) "melpa"])
  (flycheck-tip . [(20141019 1159) ((flycheck (0 13)) (dash (1 2)) (emacs (24 1)) (popup (0 5 0)) (s (1 9 0))) "show flycheck's error by popup-tip" tar ((:url . "https://github.com/yuutayamada/flycheck-tip") (:keywords "flycheck")) "melpa"])
  (flymake-cppcheck . [(20140415 557) ((flymake-easy (0 9))) "Flymake work with Cppcheck for C/C++" single ((:url . "https://github.com/senda-akiha/flymake-cppcheck/") (:keywords "flymake" "cppcheck" "c" "c++")) "melpa"])
  (flymake-google-cpplint . [(20140205 525) ((flymake-easy (0 9))) "Help to comply with the Google C++ Style Guide" single ((:url . "https://github.com/senda-akiha/flymake-google-cpplint/") (:keywords "flymake" "c" "c++")) "melpa"])
  (flymake-phpcs . [(20140712 2331) ((flymake-easy (0 9))) "making flymake work with PHP CodeSniffer" single ((:url . "https://github.com/senda-akiha/flymake-phpcs/") (:keywords "flymake" "phpcs" "php")) "melpa"])
  (flymake-puppet . [(20141006 1855) ((flymake-easy (0 9))) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" single ((:url . "https://github.com/benprew/flymake-puppet")) "melpa"])
  (flymake-rust . [(20141004 1552) ((flymake-easy (0 1))) "A flymake handler for rust-mode files" single ((:url . "https://github.com/joaoxsouls/flymake-rust")) "melpa"])
  (flyparens . [(20140723 1146) nil "Check for unbalanced parens on the fly" tar ((:keywords "faces" "convenience" "lisp" "matching" "parentheses" "parens")) "melpa"])
  (font-lock+ . [(20140831 615) nil "Enhancements to standard library `font-lock.el'." single ((:url . "http://www.emacswiki.org/font-lock+.el") (:keywords "languages" "faces" "highlighting")) "melpa"])
  (font-lock-menus . [(20131226 1847) nil "Font-lock menus: enhanced `font-menus.el'" single ((:url . "http://www.emacswiki.org/font-lock-menus.el") (:keywords "font" "highlighting" "syntax" "decoration")) "melpa"])
  (font-lock-studio . [(20141201 1658) ((emacs (24 3))) "interactive debugger for Font Lock keywords." single ((:url . "https://github.com/Lindydancer/font-lock-studio") (:keywords "faces" "tools")) "melpa"])
  (fortpy . [(20141110 1047) ((epc (0 1 0)) (auto-complete (1 4)) (python-environment (0 0 2)) (pos-tip (0 4 5))) "a Fortran auto-completion for Emacs" tar nil "melpa"])
  (fountain-mode . [(20141120 1754) ((s (1 9 0))) "Major mode for screenwriting in Fountain markup" single ((:url . "https://github.com/rnkn/fountain-mode") (:keywords "wp")) "melpa"])
  (framesize . [(20131017 1432) ((key-chord (0 5 20080915))) "change the size of frames in Emacs" single ((:url . "http://github.com/nicferrier/emacs-framesize") (:keywords "frames")) "melpa"])
  (free-keys . [(20140309 1051) ((cl-lib (0 3))) "Show free keybindings for modkeys or prefixes" single ((:url . "https://github.com/Fuco1/free-keys") (:keywords "convenience")) "melpa"])
  (fringe-current-line . [(20140110 2011) nil "show current line on the fringe." single ((:url . "http://github.com/kyanagi/fringe-current-line/raw/master/fringe-current-line.el")) "melpa"])
  (fullframe . [(20140619 305) ((cl-lib (0 5))) "Generalized automatic execution in a single frame" single ((:keywords "fullscreen")) "melpa"])
  (function-args . [(20141204 2359) nil "C++ completion for GNU Emacs" single ((:url . "https://github.com/abo-abo/function-args")) "melpa"])
  (fvwm-mode . [(20141105 2036) nil "major mode for editing Fvwm configuration files" single ((:keywords "files")) "melpa"])
  (geiser . [(20141031 1951) nil "GNU Emacs and Scheme talk to each other" tar nil "melpa"])
  (genrnc . [(20140612 537) ((deferred (0 3 1)) (concurrent (0 3)) (log4e (0 2 0)) (yaxception (0 1))) "generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD." tar ((:url . "https://github.com/aki2o/emacs-genrnc") (:keywords "xml")) "melpa"])
  (gerrit-download . [(20140828 610) ((emacs (24 0)) (magit (20130828 1540))) "Show gerrit reviews in a diff buffer." single ((:url . "https://github.com/chmouel/gerrit-download.el") (:keywords "tools" "gerrit" "git")) "melpa"])
  (ggtags . [(20141202 1838) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single ((:url . "https://github.com/leoliu/ggtags") (:keywords "tools" "convenience")) "melpa"])
  (ghc-imported-from . [(20141124 1132) ((emacs (24 1))) "Haskell documentation lookup with ghc-imported-from" single ((:keywords "languages")) "melpa"])
  (gherkin-mode . [(20140107 804) nil "An emacs major mode for editing gherkin files." single ((:keywords "languages")) "melpa"])
  (git . [(20140128 241) ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) "An Elisp API for programmatically using Git" single ((:url . "http://github.com/rejeep/git.el") (:keywords "git")) "melpa"])
  (git-annex . [(20131119 1445) nil "Mode for easy editing of git-annex'd files" single ((:url . "https://github.com/jwiegley/git-annex-el") (:keywords "files" "data" "git" "annex")) "melpa"])
  (git-commit-training-wheels-mode . [(20131121 544) ((git-commit-mode (0 14 0))) "Helps you craft well formed commit messages with git-commit-mode" single ((:url . "https://github.com/yasuyk/git-commit-training-wheels-mode") (:keywords "convenience" "vc" "git")) "melpa"])
  (git-link . [(20140919 1921) nil "Get the GitHub/Bitbucket/Gitorious URL for a buffer location" single ((:url . "http://github.com/sshaw/git-link") (:keywords "git")) "melpa"])
  (git-rebase-mode . [(20140928 1547) nil "Major mode for editing git rebase files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (git-timemachine . [(20141107 1305) nil "Walk through git revisions of a file" single ((:url . "https://github.com/pidu/git-timemachine") (:keywords "git")) "melpa"])
  (gitattributes-mode . [(20140605 520) nil "Major mode for editing .gitattributes files" single ((:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git")) "melpa"])
  (github-clone . [(20141006 210) ((gh (0 7 2)) (magit (1 2 0)) (emacs (24))) "Fork and clone github repos" single ((:url . "https://github.com/dgtized/github-clone.el") (:keywords "vc" "tools")) "melpa"])
  (gitlab . [(20141117 839) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Gitlab" tar ((:url . "https://github.com/nlamirault/emacs-gitlab") (:keywords "gitlab")) "melpa"])
  (gmail-message-mode . [(20140815 816) ((ham-mode (1 0))) "A major-mode for editing gmail messages using markdown syntax." single ((:url . "http://github.com/Bruce-Connor/gmail-message-mode") (:keywords "mail" "convenience" "emulation")) "melpa"])
  (gnome-calendar . [(20140112 359) nil "Integration with the GNOME Shell calendar" single ((:keywords "gnome" "calendar")) "melpa"])
  (gnomenm . [(20140308 938) ((s (1 9 0)) (dash (2 3 0)) (kv (0 0 19))) "Emacs interface to Gnome nmcli command" single ((:url . "http://github.com/nicferrier/emacs-nm") (:keywords "processes" "hardware")) "melpa"])
  (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" single nil "melpa"])
  (gnu-apl-mode . [(20141127 1921) ((emacs (24))) "Integrate GNU APL with Emacs" tar nil "melpa"])
  (gnus-desktop-notify . [(20140918 847) ((gnus (1 0))) "Gnus Desktop Notification global minor mode" single ((:url . "http://www.thregr.org/~wavexx/software/gnus-desktop-notify/")) "melpa"])
  (gnus-spotlight . [(20130901 1435) nil "Search mail with Spotlight" single ((:keywords "mail" "searching" "spotlight")) "melpa"])
  (gnus-summary-ext . [(20131222 2021) ((macro-utils (1 0))) "Extra limit and process mark commands for the gnus summary buffer" single ((:url . "https://github.com/vapniks/gnus-summary-ext") (:keywords "comm")) "melpa"])
  (gnus-x-gm-raw . [(20140610 31) ((log4e (0 2 0)) (yaxception (0 1))) "Search mail of Gmail using X-GM-RAW as web interface" single ((:url . "https://github.com/aki2o/gnus-x-gm-raw") (:keywords "gnus")) "melpa"])
  (go-direx . [(20140701 826) ((direx (0 1 -3)) (cl-lib (0 5))) "Tree style source code viewer for Go language" single ((:url . "https://github.com/syohex/emacs-go-direx")) "melpa"])
  (go-projectile . [(20141117 1712) ((projectile (0 10 0)) (go-mode (0)) (go-eldoc (0 16))) "Go add-ons for Projectile" single ((:url . "https://github.com/dougm/go-projectile") (:keywords "project" "convenience")) "melpa"])
  (go-stacktracer . [(20141118 1446) nil "parse Go stack traces" single ((:url . "https://github.com/samertm/go-stacktracer") (:keywords "tools")) "melpa"])
  (god-mode . [(20140811 1125) nil "God-like command entering minor mode" single ((:url . "https://github.com/chrisdone/god-mode")) "melpa"])
  (gold-mode . [(20140606 1906) ((sws-mode (0))) "Major mode for editing .gold files" single ((:url . "https://github.com/yuutayamada/gold-mode-el") (:keywords "golang" "template" "gold")) "melpa"])
  (golint . [(20140122 1122) nil "lint for the Go source code" single ((:url . "https://github.com/golang/lint")) "melpa"])
  (gom-mode . [(20131007 1953) nil "Major mode for Gomfile" single ((:url . "https://github.com/syohex/emacs-gom-mode")) "melpa"])
  (google . [(20140330 856) nil "Emacs interface to the Google API" single ((:keywords "comm" "processes" "tools")) "melpa"])
  (gore-mode . [(20131027 2227) nil "Simple mode for gore, a command-line evaluator for golang." single ((:keywords "go" "repl")) "melpa"])
  (gotest . [(20141023 914) ((s (1 9 0)) (f (0 11 0)) (go-mode (20131222))) "Launch GO unit tests" single ((:url . "https://github.com/nlamirault/gotest.el") (:keywords "go" "tests")) "melpa"])
  (gotham-theme . [(20141108 1539) nil "A very dark Emacs color theme." single ((:url . "https://github.com/wasamasa/gotham-theme")) "melpa"])
  (goto-gem . [(20140729 1145) ((s (1 9 0))) "Open dired in gem directory" single ((:keywords "gemfile" "convenience")) "melpa"])
  (gradle-mode . [(20140603 1117) ((s (1 8 0))) "Gradle integration with Emacs' compile" single ((:url . "http://github.com/jacobono/emacs-gradle-mode") (:keywords "gradle")) "melpa"])
  (grails-mode . [(20141024 949) nil "minor-mode that adds some Grails project management to a grails project" single ((:url . "http://blog.wolfman.com")) "melpa"])
  (grails-projectile-mode . [(20141127 2136) ((projectile (0 10 0)) (emacs (24)) (cl-lib (0 5))) "Grails mode with Projectile for projects management." single ((:keywords "grails" "projectile")) "melpa"])
  (grass-mode . [(20140812 1425) ((cl-lib (0 2)) (dash (2 8 0))) "Provides Emacs modes for interacting with the GRASS GIS program" single ((:keywords "grass" "gis")) "melpa"])
  (grep+ . [(20131226 1851) nil "Extensions to standard library `grep.el'." single ((:url . "http://www.emacswiki.org/grep+.el") (:keywords "tools" "processes" "compile")) "melpa"])
  (grunt . [(20140807 2115) ((dash (2 6 0))) "Some glue to stick Emacs and Gruntfiles together" single ((:url . "https://github.com/gempesaw/grunt.el") (:keywords "convenience" "grunt")) "melpa"])
  (gruvbox-theme . [(20141128 816) nil "A retro-groove colour theme for Emacs" single ((:url . "http://github.com/Greduan/emacs-theme-gruvbox")) "melpa"])
  (gs-mode . [(20141026 235) nil "Major mode for editing GrADS script files" single ((:keywords "grads" "script" "major-mode")) "melpa"])
  (guide-key-tip . [(20140406 1820) ((guide-key (1 2 3)) (pos-tip (0 4 5))) "Show guide-key.el hints using pos-tip.el" single ((:url . "https://github.com/aki2o/guide-key-tip") (:keywords "help" "convenience" "tooltip")) "melpa"])
  (gvpr-mode . [(20131208 918) nil "A major mode offering basic syntax coloring for gvpr scripts." single ((:url . "https://raw.github.com/rodw/gvpr-lib/master/extra/gvpr-mode.el") (:keywords "graphviz" "gv" "dot" "gvpr" "graph")) "melpa"])
  (ham-mode . [(20140815 1335) ((html-to-markdown (1 2)) (markdown-mode (2 0))) "Html As Markdown. Transparently edit an html file using markdown." single ((:url . "http://github.com/Bruce-Connor/ham-mode") (:keywords "convenience" "emulation" "wp")) "melpa"])
  (hamlet-mode . [(20131207 2324) ((cl-lib (0 3)) (dash (2 3 0)) (s (1 7 0))) "Hamlet editing mode" single ((:url . "https://github.com/lightquake/hamlet-mode") (:keywords "wp" "languages" "comm")) "melpa"])
  (hayoo . [(20140831 521) ((emacs (24)) (json (1 3))) "Query hayoo and show results in a tabulated buffer." single ((:url . "https://github.com/benma/hayoo.el/") (:keywords "hayoo" "haskell")) "melpa"])
  (hc-zenburn-theme . [(20141031 355) nil "An higher contrast version of the Hc-Zenburn theme." single ((:url . "https:github.com/edran/hc-zenburn-emacs")) "melpa"])
  (helm-ad . [(20140807 230) ((dash (2 8 0)) (helm (1 6 2))) "helm source for Active Directory" single ((:keywords "comm")) "melpa"])
  (helm-ag-r . [(20131123 731) ((helm (1 0))) "Search something by ag and display by helm" single ((:url . "https://github.com/yuutayamada/helm-ag-r") (:keywords "searching")) "melpa"])
  (helm-aws . [(20141206 1208) ((helm (1 5 3))) "Manage AWS EC2 server instances directly from Emacs" single ((:url . "https://github.com/istib/helm-aws")) "melpa"])
  (helm-backup . [(20140124 1404) ((helm (1 5 5)) (s (1 8 0))) "Backup each file change using git" single ((:url . "http://github.com/antham/helm-backup") (:keywords "backup")) "melpa"])
  (helm-bibtex . [(20141116 2228) ((helm (1 5 5)) (ebib (2 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5))) "Helm source for managing BibTeX bibliographies" single nil "melpa"])
  (helm-bibtexkey . [(20140214 704) ((helm (1 5 8))) "Bibtexkey source for helm" tar ((:url . "https://github.com/kenbeese/helm-bibtexkey") (:keywords "bib" "tex")) "melpa"])
  (helm-bind-key . [(20141108 2115) ((bind-key (1 0)) (helm (1 6 4))) "helm-source for for bind-key." single ((:keywords "convenience" "emulation")) "melpa"])
  (helm-bm . [(20131224 705) ((bm (1 0)) (cl-lib (0 3)) (helm (1 5 7)) (s (1 8 0))) "helm sources for bm.el" single ((:url . "https://github.com/yasuyk/helm-bm") (:keywords "helm" "bookmark")) "melpa"])
  (helm-chrome . [(20140116 252) ((helm (1 0)) (cl-lib (0 3)) (emacs (24))) "Helm interface for Chrome bookmarks" single ((:url . "https://github.com/kawabata/helm-chrome") (:keywords "tools")) "melpa"])
  (helm-company . [(20140920 108) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" single ((:url . "https://github.com/yasuyk/helm-company")) "melpa"])
  (helm-css-scss . [(20140626 1725) ((helm (1 0)) (emacs (24))) "CSS/SCSS/LESS Selectors with helm interface" single ((:url . "https://github.com/ShingoFukuyama/helm-css-scss") (:keywords "scss" "css" "less" "selector" "helm")) "melpa"])
  (helm-dash . [(20141205 126) ((helm (0 0 0))) "Offline documentation browser for +150 APIs using Dash docsets." single ((:url . "http://github.com/areina/helm-dash") (:keywords "docs")) "melpa"])
  (helm-dictionary . [(20140506 626) ((helm (1 5 5))) "Helm source for looking up dictionaries" single ((:url . "https://github.com/emacs-helm/helm-dictionary")) "melpa"])
  (helm-dirset . [(20141204 1552) ((f (0 16 2)) (helm (1 6 1)) (s (1 9 0))) "helm sources for multi directories" single ((:url . "http://101000lab.org") (:keywords "files" "directories")) "melpa"])
  (helm-emmet . [(20131013 2329) ((helm (1 0)) (emmet-mode (1 0 2))) "helm sources for emmet-mode's snippets" single ((:url . "https://github.com/yasuyk/helm-emmet") (:keywords "convenience" "helm" "emmet")) "melpa"])
  (helm-filesets . [(20140929 1135) ((helm (1 6 3)) (filesets+ (0))) "A helm source for emacs filesets" single ((:url . "https://github.com/gcla/helm-filesets") (:keywords "filesets")) "melpa"])
  (helm-flycheck . [(20140915 752) ((dash (2 4 0)) (flycheck (0 20 -3)) (helm (1 5 7))) "Show flycheck errors with helm" single ((:url . "https://github.com/yasuyk/helm-flycheck") (:keywords "helm" "flycheck")) "melpa"])
  (helm-ghc . [(20141105 659) ((emacs (24)) (cl-lib (0 5)) (helm (1 6 4)) (ghc (5 2 1 0))) "A Helm datasource for ghc-mod errors" single ((:keywords "languages" "helm")) "melpa"])
  (helm-ghq . [(20141008 534) ((helm (1 6 2))) "ghq with helm interface" single ((:url . "https://github.com/masutaka/emacs-helm-ghq")) "melpa"])
  (helm-git-files . [(20140214 1059) ((helm (1 5 9))) "helm for git files" single ((:keywords "helm" "git")) "melpa"])
  (helm-github-stars . [(20131123 817) ((helm (1 5 5))) "Helm integration for your starred repositories on github" single ((:keywords "helm" "github" "stars")) "melpa"])
  (helm-gitlab . [(20141117 839) ((s (1 9 0)) (dash (2 9 0)) (helm (1 0)) (gitlab (0))) "Helm interface to Gitlab" single ((:url . "https://github.com/nlamirault/emacs-gitlab") (:keywords "gitlab" "helm")) "melpa"])
  (helm-google . [(20140405 1723) ((helm (0)) (google (0))) "Emacs Helm Interface for quick Google searches" single ((:url . "https://github.com/steckerhalter/helm-google") (:keywords "helm" "google" "search" "browse")) "melpa"])
  (helm-growthforecast . [(20140119 1944) ((helm (1 5 9))) "helm extensions for growthforecast." single ((:url . "https://github.com/daic-h/helm-growthforecast")) "melpa"])
  (helm-hatena-bookmark . [(20131128 557) ((helm (1 5 6))) "Hatena::Bookmark helm.el interface" single ((:url . "https://github.com/masutaka/emacs-helm-hatena-bookmark")) "melpa"])
  (helm-hayoo . [(20140730 1425) ((helm (1 6 0)) (json (1 2)) (haskell-mode (13 7))) "Source and configured helm for searching hayoo" single ((:keywords "helm")) "melpa"])
  (helm-helm-commands . [(20130902 1048) ((helm (1 5 4))) "List all helm commands with helm" single ((:url . "https://github.com/vapniks/helm-helm-commands") (:keywords "convenience")) "melpa"])
  (helm-hoogle . [(20140919 503) ((helm (1 6 2))) "Use helm to navigate query results from Hoogle" single ((:url . "https://github.com/jwiegley/haskell-config") (:keywords "haskell" "programming" "hoogle")) "melpa"])
  (helm-idris . [(20141202 957) ((helm (0 0 0)) (idris-mode (0 9 14))) "A Helm datasource for Idris documentation, queried from the compiler" single ((:keywords "languages" "helm")) "melpa"])
  (helm-itunes . [(20140605 2137) ((helm (1 6 1))) "Play local iTunes and Spotify tracks" single ((:url . "https://github.com/daschwa/helm-itunes")) "melpa"])
  (helm-j-cheatsheet . [(20131228 441) ((helm (1 5 3))) "Quick J reference for Emacs" single ((:url . "https://github.com/abo-abo/helm-j-cheatsheet")) "melpa"])
  (helm-ls-hg . [(20140929 2324) ((helm (1 5))) "List hg files in hg project." single nil "melpa"])
  (helm-make . [(20141204 1429) ((helm (1 5 3)) (projectile (0 11 0))) "Select makefile target with helm" single ((:url . "https://github.com/abo-abo/helm-make") (:keywords "makefile")) "melpa"])
  (helm-mode-manager . [(20140224 1504) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" single ((:url . "https://github.com/istib/helm-mode-manager")) "melpa"])
  (helm-package . [(20140108 2223) ((helm (1 0)) (cl-lib (0 3))) "Listing ELPA packages with helm interface" single ((:url . "https://github.com/syohex/emacs-helm-package")) "melpa"])
  (helm-perldoc . [(20140701 1833) ((helm (1 0)) (deferred (0 3 1)) (cl-lib (0 5))) "perldoc with helm interface" tar ((:url . "https://github.com/syohex/emacs-helm-perldoc")) "melpa"])
  (helm-proc . [(20140504 157) ((helm (1 6 0))) "Helm interface for managing system processes" tar nil "melpa"])
  (helm-projectile-all . [(20140429 952) ((helm (1 6 0)) (projectile (0 10 0)) (dash (1 5 0)) (s (1 9 0))) "Find files in all projectile projects using helm" single nil "melpa"])
  (helm-prosjekt . [(20140128 2317) ((prosjekt (0 3)) (helm (1 5 9))) "Helm integration for prosjekt." single ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (helm-pydoc . [(20140701 1914) ((helm (1 0)) (cl-lib (0 5))) "pydoc with helm interface" tar ((:url . "https://github.com/syohex/emacs-helm-pydoc")) "melpa"])
  (helm-rb . [(20131123 839) ((helm (1 0)) (helm-ag-r (20131123))) "Search Ruby's method by ag and display helm" tar ((:url . "https://github.com/yuutayamada/helm-rb") (:keywords "searching" "ruby")) "melpa"])
  (helm-recoll . [(20130905 1822) ((helm (1 5 4))) "helm interface for the recoll desktop search tool." single ((:url . "https://github.com/emacs-helm/helm-recoll") (:keywords "convenience")) "melpa"])
  (helm-robe . [(20140805 659) ((helm (1 0))) "completing read function for robe" single ((:url . "https://github.com/syohex/emacs-helm-robe")) "melpa"])
  (helm-rubygems-org . [(20140826 456) ((emacs (24)) (helm (1 6 3)) (cl-lib (0 5))) "Use helm to search rubygems.org" single ((:url . "https://github.com/neomantic/helm-rubygems-org") (:keywords "ruby" "rubygems" "gemfile" "helm")) "melpa"])
  (helm-sage . [(20141130 549) ((cl-lib (0 5)) (helm (1 5 6)) (sage-shell-mode (0 0 1))) "A helm extension for sage-shell-mode." single ((:url . "https://github.com/stakemori/helm-sage") (:keywords "sage" "math" "helm")) "melpa"])
  (helm-spotify . [(20131014 1421) ((helm (0 0 0)) (multi (2 0 0))) "Control Spotify with Helm." single ((:url . "https://github.com/krisajenkins/helm-spotify") (:keywords "helm" "spotify")) "melpa"])
  (helm-swoop . [(20141124 1742) ((helm (1 0)) (emacs (24))) "Efficiently hopping squeezed lines powered by helm interface" single ((:url . "https://github.com/ShingoFukuyama/helm-swoop") (:keywords "helm" "swoop" "inner" "buffer" "search")) "melpa"])
  (help+ . [(20140504 2037) nil "Extensions to `help.el'." single ((:url . "http://www.emacswiki.org/help+.el") (:keywords "help")) "melpa"])
  (help-fns+ . [(20141129 1825) nil "Extensions to `help-fns.el'." single ((:url . "http://www.emacswiki.org/help-fns+.el") (:keywords "help" "faces" "characters" "packages" "description")) "melpa"])
  (help-mode+ . [(20140117 2115) nil "Extensions to `help-mode.el'" single ((:url . "http://www.emacswiki.org/help-mode+.el") (:keywords "help")) "melpa"])
  (heroku-theme . [(20130809 2143) nil "Heroku color theme" single ((:url . "https://github.com/jonathanchu/heroku-theme")) "melpa"])
  (hide-region . [(20140201 1114) nil "hide regions of text using overlays" single ((:url . "http://mathias.dahl.net/pgm/emacs/elisp/hide-region.el") (:keywords "hide" "region")) "melpa"])
  (hideshow-org . [(20120223 1450) nil "Provides org-mode like hide and show for hideshow.el" single ((:keywords "c" "c++" "java" "lisp" "tools" "editing" "comments" "blocks" "hiding" "outlines" "org-mode" "this" "file" "is" "not" "part" "of" "gnu" "emacs.")) "melpa"])
  (hideshowvis . [(20130824 1200) nil "Add markers to the fringe for regions foldable by hideshow.el" single nil "melpa"])
  (highlight-blocks . [(20141020 1503) ((emacs (24))) "Highlight the blocks point is in" single ((:url . "https://github.com/Fanael/highlight-blocks")) "melpa"])
  (highlight-chars . [(20140513 444) nil "Highlight specified sets of characters, including whitespace." single ((:url . "http://www.emacswiki.org/highlight-chars.el") (:keywords "highlight" "whitespace" "characters" "unicode")) "melpa"])
  (highlight-current-line . [(20051013 1756) nil "highlight line where the cursor is." single ((:keywords "faces")) "melpa"])
  (highlight-defined . [(20140916 1119) ((emacs (24))) "Syntax highlighting of known Elisp symbols" single ((:url . "https://github.com/Fanael/highlight-defined")) "melpa"])
  (highlight-numbers . [(20140916 1121) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" single ((:url . "https://github.com/Fanael/highlight-numbers")) "melpa"])
  (highlight-quoted . [(20140916 1122) ((emacs (24))) "Highlight Lisp quotes and quoted symbols" single ((:url . "https://github.com/Fanael/highlight-quoted")) "melpa"])
  (highlight-stages . [(20141201 1847) nil "highlight staged (quasi-quoted) expressions" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (highlight-tail . [(20140416 141) nil "draw a colourful \"tail\" while you write" single ((:keywords "highlight" "tail" "eye-candy" "visual-effect" "light" "color" "burn" "web" "page:" "http://nic-nac-project.net/~necui/ht.html")) "melpa"])
  (highlight-unique-symbol . [(20130611 2242) ((deferred (0 3 2))) "highlight symbols which not appear in the repository" single ((:url . "https://github.com/hitode909/emacs-highlight-unique-symbol")) "melpa"])
  (hipster-theme . [(20141205 2005) nil "A low contrast color theme for Emacs." single ((:url . "http://github.com/xzerocode/hispter-theme")) "melpa"])
  (historyf . [(20131203 22) nil "file history library like browser" single ((:url . "https://github.com/k1LoW/emacs-historyf")) "melpa"])
  (hiwin . [(20140521 2134) nil "Visible active window mode." single ((:keywords "faces" "editing" "emulating")) "melpa"])
  (hl-anything . [(20141203 1924) ((emacs (24 3))) "Highlight symbols, selections, enclosing parens and more." single nil "melpa"])
  (hl-defined . [(20131226 1912) nil "Highlight defined or undefined symbols in Emacs-Lisp." single ((:url . "http://www.emacswiki.org/hl-defined.el") (:keywords "highlight" "lisp" "functions")) "melpa"])
  (hl-spotlight . [(20131226 1913) nil "Extension of hl-line.el to spotlight current few lines." single ((:url . "http://www.emacswiki.org/hl-spotlight.el") (:keywords "highlight" "cursor" "accessibility")) "melpa"])
  (hookify . [(20141204 555) ((s (1 9 0)) (dash (1 5 0))) "Interactive commands to create temporary hooks" single ((:url . "https://github.com/Silex/hookify") (:keywords "hook" "convenience")) "melpa"])
  (how-many-lines-in-project . [(20140806 2142) nil "Calculate how many lines are there in your project." single ((:keywords "project" "convenience")) "melpa"])
  (howdoi . [(20140309 1614) nil "Instant coding answers via Emacs." tar nil "melpa"])
  (html-to-markdown . [(20131212 1441) nil "HTML to Markdown converter written in Emacs-lisp." single ((:url . "http://github.com/Bruce-Connor/html-to-markdown") (:keywords "tools" "wp" "languages")) "melpa"])
  (http . [(20141127 855) ((emacs (24)) (cl-lib (0 5)) (s (1 9 0)) (request (0 2 0))) "An HTTP client for Emacs" single ((:url . "https://github.com/emacs-pe/http.el") (:keywords "convenience")) "melpa"])
  (httprepl . [(20141101 1034) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "An HTTP REPL" single ((:url . "https://github.com/gregsexton/httprepl.el") (:keywords "http" "repl")) "melpa"])
  (hyde . [(20140131 456) nil "Major mode to help create and manage Jekyll blogs" tar nil "melpa"])
  (i2b2-mode . [(20140709 1804) nil "Highlights corresponding PHI data in the text portion of an i2b2 XML Document." single ((:keywords "xml" "phi" "i2b2" "deidi2b2")) "melpa"])
  (iasm-mode . [(20131004 1644) nil "interactive assembly major mode." tar ((:url . "https://github.com/RAttab/iasm-mode") (:keywords ":" "tools")) "melpa"])
  (ibuffer-git . [(20110508 31) nil "show git status in ibuffer column" single ((:keywords "convenience")) "melpa"])
  (ibuffer-tramp . [(20140301 1006) nil "Group ibuffer's list by TRAMP connection" single ((:url . "http://github.com/svend/ibuffer-tramp") (:keywords "themes")) "melpa"])
  (ido-at-point . [(20140416 656) ((emacs (24))) "ido-style completion-at-point" single ((:url . "https://github.com/katspaugh/ido-at-point") (:keywords "convenience" "abbrev")) "melpa"])
  (ido-select-window . [(20131220 1247) ((emacs (24 1))) "Select a window using ido and buffer names" single ((:url . "https://github.com/pjones/ido-select-window")) "melpa"])
  (idris-mode . [(20141104 154) ((emacs (24))) "Major mode for editing Idris code" tar ((:url . "https://github.com/idris-hackers/idris-mode") (:keywords "languages")) "melpa"])
  (ids-edit . [(20141112 1642) ((emacs (24 3))) "IDS (Ideographic Description Sequence) editing tool" tar ((:url . "http://github.com/kawabata/ids-edit") (:keywords "text")) "melpa"])
  (image-archive . [(20141031 405) ((emacs (24)) (cl-lib (0 5))) "Image thumbnails in archive file with non-blocking" single ((:url . "https://github.com/mhayashi1120/Emacs-image-archive/raw/master/image-archive.el") (:keywords "multimedia")) "melpa"])
  (imakado . [(20141024 223) nil "imakado's usefull macros and functions" single ((:url . "https://github.com/imakado/emacs-imakado") (:keywords "convenience")) "melpa"])
  (imenu+ . [(20140621 2127) nil "Extensions to `imenu.el'." single ((:url . "http://www.emacswiki.org/imenu+.el") (:keywords "tools" "menus")) "melpa"])
  (immutant-server . [(20140311 1508) nil "Run your Immutant server in Emacs" single ((:url . "http://www.github.com/leathekd/immutant-server.el")) "melpa"])
  (indicators . [(20130217 1405) nil "Display the buffer relative location of line in the fringe." single ((:url . "https://github.com/Fuco1/indicators.el") (:keywords "fringe" "frames")) "melpa"])
  (inf-clojure . [(20141205 721) ((emacs (24 1)) (clojure-mode (3 0))) "an inferior-clojure mode" single ((:url . "http://github.com/clojure-emacs/inf-clojure") (:keywords "processes" "clojure")) "melpa"])
  (inform7-mode . [(20131009 2354) ((sws-mode (0 1))) "Major mode for editing Inform 7 source files" single ((:keywords "inform" "inform7" "interactive fiction")) "melpa"])
  (insert-shebang . [(20141119 427) nil "Insert shebang line automatically." single ((:url . "http://github.com/psachin/insert-shebang") (:keywords "shebang" "tool" "convenience")) "melpa"])
  (insfactor . [(20141116 1602) nil "Client for a Clojure project with insfactor in it" single ((:url . "http://github.com/duelinmarkers/insfactor.el") (:keywords "clojure")) "melpa"])
  (io-mode . [(20140814 321) nil "Major mode to edit Io language files in Emacs" single ((:url . "https://github.com/superbobry/io-mode") (:keywords "languages" "io")) "melpa"])
  (io-mode-inf . [(20140128 1134) nil "Interaction with an Io interpreter." single ((:url . "https://github.com/slackorama/io-emacs") (:keywords "io" "languages")) "melpa"])
  (ipretty . [(20140406 2220) nil "Interactive Emacs Lisp pretty-printing" single ((:url . "https://github.com/steckerhalter/ipretty") (:keywords "pretty-print" "elisp" "buffer")) "melpa"])
  (iregister . [(20140525 1456) nil "Interactive register commands for Emacs." tar ((:url . "https://github.com/atykhonov/iregister.el") (:keywords "convenience")) "melpa"])
  (irony . [(20141204 1531) ((cl-lib (0 5)) (json (1 2))) "C/C++ minor mode powered by libclang" tar ((:url . "https://github.com/Sarcasm/irony-mode") (:keywords "c" "convenience" "tools")) "melpa"])
  (isearch-prop . [(20140711 2058) nil "Search text-property or overlay-property contexts." single ((:url . "http://www.emacswiki.org/isearch-prop.el") (:keywords "search" "matching" "invisible" "thing" "help")) "melpa"])
  (isgd . [(20130927 657) nil "Shorten URLs using the isgd.com shortener service" single ((:url . "https://github.com/chmouel/isgd.el")) "melpa"])
  (iss-mode . [(20141001 1213) nil "Mode for InnoSetup install scripts" single nil "melpa"])
  (iterator . [(20140412 2153) ((emacs (24)) (cl-lib (0 5))) "A library to create and use elisp iterators objects." single ((:url . "https://github.com/thierryvolpiatto/iterator")) "melpa"])
  (ivariants . [(20140720 2127) ((emacs (24 3)) (ivs-edit (1 0))) "Ideographic variants editor and browser" tar ((:url . "http://github.com/kawabata/ivariants") (:keywords "i18n" "languages")) "melpa"])
  (ivs-edit . [(20140720 346) ((emacs (24 3)) (dash (2 6 0)) (cl-lib (1 0))) "IVS (Ideographic Variation Sequence) editing tool" tar ((:url . "http://github.com/kawabata/ivs-edit") (:keywords "text")) "melpa"])
  (ix . [(20131027 929) ((grapnel (0 5 3))) "Emacs client for http://ix.io pastebin" single ((:url . "http://www.github.com/theanalyst/ix.el")) "melpa"])
  (jabber . [(20141031 1155) nil "A Jabber client for Emacs." tar nil "melpa"])
  (japanese-holidays . [(20141022 2113) ((cl-lib (0 3))) "calendar functions for the Japanese calendar" single ((:url . "https://github.com/emacs-jp/japanese-holidays") (:keywords "calendar")) "melpa"])
  (jape-mode . [(20140903 806) nil "An Emacs editing mode mode for GATE's JAPE files" single ((:url . "http://github.com/tanzoniteblack/jape-mode") (:keywords "languages" "jape" "gate")) "melpa"])
  (java-snippets . [(20140727 2236) ((yasnippet (0 8 0))) "Yasnippets for Java" tar ((:url . "https://github.com/nekop/yasnippet-java-mode")) "melpa"])
  (jedi-direx . [(20140310 236) ((jedi (0 1 2)) (direx (0 1 -3))) "Tree style source code viewer for Python buffer" single nil "melpa"])
  (jekyll-modes . [(20141117 514) ((polymode (0 2))) "Major modes (markdown and HTML) for authoring Jekyll content" single ((:url . "https://github.com/fred-o/jekyll-modes") (:keywords "docs")) "melpa"])
  (jist . [(20141127 845) ((emacs (24)) (cl-lib (0 5)) (magit (1 2 1)) (request (0 2 0))) "Manage gists from emacs" single ((:url . "https://github.com/emacs-pe/jist.el") (:keywords "convenience")) "melpa"])
  (jquery-doc . [(20131223 845) nil "jQuery api documentation interface for emacs" tar ((:keywords "docs" "jquery")) "melpa"])
  (js-doc . [(20131215 519) nil "Insert JsDoc style comment easily" single ((:url . "https://github.com/mooz/js-doc") (:keywords "document" "comment")) "melpa"])
  (js2-closure . [(20141027 1550) ((js2-mode (20140114))) "Google Closure dependency manager" single ((:url . "http://github.com/jart/js2-closure")) "melpa"])
  (json-mode . [(20141105 138) ((json-reformat (20141009 1155)) (json-snatcher (20131110 1107))) "Major mode for editing JSON files" single ((:url . "https://github.com/joshwnj/json-mode")) "melpa"])
  (json-reformat . [(20141108 1618) nil "Reformatting tool for JSON" single ((:url . "https://github.com/gongo/json-reformat") (:keywords "json")) "melpa"])
  (json-rpc . [(20140602 806) ((emacs (24 1)) (cl-lib (0 5))) "JSON-RPC library" single ((:url . "https://github.com/skeeto/elisp-json-rpc")) "melpa"])
  (json-snatcher . [(20140527 2147) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single ((:url . "http://github.com/sterlingg/json-snatcher")) "melpa"])
  (jsx-mode . [(20130908 1024) nil "major mode for JSX" single ((:url . "https://github.com/jsx/jsx-mode.el")) "melpa"])
  (julia-mode . [(20141130 1008) nil "Major mode for editing Julia source code" single ((:url . "https://github.com/JuliaLang/julia") (:keywords "languages")) "melpa"])
  (jumblr . [(20140908 1352) ((s (1 8 0)) (dash (2 2 0))) "an anagram game for emacs" tar ((:url . "https://github.com/mkmcc/jumblr") (:keywords "anagram" "word game" "games")) "melpa"])
  (jvm-mode . [(20140313 132) ((dash (2 6 0)) (emacs (24))) "Monitor and manage your JVMs" single ((:url . "https://github.com/martintrojer/jvm-mode.el") (:keywords "convenience")) "melpa"])
  (kaesar . [(20131030 2312) nil "Another AES algorithm encrypt/decrypt string with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/kaesar.el") (:keywords "data")) "melpa"])
  (kaesar-file . [(20130912 212) ((kaesar (0 1 1))) "Encrypt/Decrypt file by AES with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/cipher/kaesar-file.el") (:keywords "data" "files")) "melpa"])
  (kaesar-mode . [(20131030 2312) ((kaesar (0 1 4))) "Encrypt/Decrypt buffer by AES with password." single ((:url . "https://github.com/mhayashi1120/Emacs-kaesar/raw/master/cipher/kaesar-mode.el") (:keywords "data" "convenience")) "melpa"])
  (kakapo-mode . [(20141030 2317) ((cl-lib (0 5))) "TABS (hard or soft) for indentation (leading whitespace), and SPACES for alignment." single ((:url . "https://github.com/listx/kakapo-mode") (:keywords "indentation")) "melpa"])
  (karma . [(20141117 420) nil "Karma Test Runner Emacs Integration" single ((:url . "http://github.com/tonini/karma.el") (:keywords "javascript" "js" "karma" "testing")) "melpa"])
  (key-intercept . [(20140210 2349) nil "Intercept prefix keys" single ((:url . "http://github.com/tarao/key-intercept-el") (:keywords "keyboard")) "melpa"])
  (keyset . [(20141123 330) ((dash (2 8 0)) (cl-lib (0 5))) "A small library for structuring key bindings." single nil "melpa"])
  (kfg . [(20140908 2238) ((f (0 17 1))) "an emacs configuration system" single ((:url . "https://github.com/abingham/kfg")) "melpa"])
  (kill-ring-ido . [(20140716 922) nil "command for keyring browsing with ido" single nil "melpa"])
  (know-your-http-well . [(20140608 308) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar nil "melpa"])
  (kolon-mode . [(20140122 334) nil "Syntax highlighting for Text::Xslate's Kolon syntax" single ((:url . "https://github.com/samvtran/kolon-mode") (:keywords "xslate" "perl")) "melpa"])
  (kpm-list . [(20130131 148) nil "An emacs buffer list that tries to intelligently group together buffers." single ((:url . "https://github.com/KMahoney/kpm-list/")) "melpa"])
  (kurecolor . [(20141130 1715) ((emacs (24 1)) (s (1 0))) "color editing goodies for Emacs" single nil "melpa"])
  (langtool . [(20140330 316) nil "Grammar check utility using LanguageTool" single ((:url . "https://github.com/mhayashi1120/Emacs-langtool/raw/master/langtool.el") (:keywords "docs")) "melpa"])
  (latest-clojure-libraries . [(20140314 617) nil "Clojure dependency resolver" single ((:url . "http://github.com/AdamClements/latest-clojure-libraries/")) "melpa"])
  (latex-extra . [(20140921 352) ((auctex (11 86 1)) (cl-lib (0 5))) "Adds several useful functionalities to LaTeX-mode." single ((:url . "http://github.com/Bruce-Connor/latex-extra") (:keywords "tex")) "melpa"])
  (latex-preview-pane . [(20140403 1049) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar nil "melpa"])
  (lavender-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Lavender (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (ledger-mode . [(20141205 2031) nil "Helper code for use with the \"ledger\" command-line tool" tar nil "melpa"])
  (lfe-mode . [(20140420 1632) nil "Lisp Flavoured Erlang mode" tar nil "melpa"])
  (lice . [(20140116 657) nil "License And Header Template" tar ((:url . "https://github.com/buzztaiki/lice-el") (:keywords "template" "license" "tools")) "melpa"])
  (light-soap-theme . [(20140903 1402) ((emacs (24))) "Emacs 24 theme with a light background." single nil "melpa"])
  (lingr . [(20100807 1031) nil "Lingr Client for GNU Emacs" single ((:url . "http://github.com/lugecy/lingr-el") (:keywords "chat" "client" "internet")) "melpa"])
  (link . [(20140717 2029) nil "Hypertext links in text buffers" single ((:keywords "interface" "hypermedia")) "melpa"])
  (linked-buffer . [(20141128 1453) ((emacs (24)) (m-buffer (0 6)) (dash (2 5 0))) "One buffer as a view of another" tar nil "melpa"])
  (lispy . [(20141204 317) ((helm (1 5 3)) (ace-jump-mode (2 0)) (s (1 4 0)) (noflet (0 0 10)) (multiple-cursors (1 3 0)) (iedit (0 97))) "vi-like Paredit" tar nil "melpa"])
  (list-packages-ext . [(20130927 908) ((s (1 6 0)) (ht (1 5 0)) (persistent-soft (0 8 6))) "Extras for list-packages" single ((:keywords "convenience" "tools")) "melpa"])
  (list-processes+ . [(20131117 1935) nil "Add process management to `list-processes'" single ((:url . "not distributed yet")) "melpa"])
  (list-register . [(20130824 1200) nil "List register" single nil "melpa"])
  (lit-mode . [(20141123 936) nil "Major mode for lit" single ((:keywords "languages" "tools")) "melpa"])
  (literate-coffee-mode . [(20141023 2147) ((coffee-mode (0 5 0))) "major-mode for Literate CoffeeScript" single ((:url . "https://github.com/syohex/emacs-literate-coffee-mode")) "melpa"])
  (literate-starter-kit . [(20141201 1848) ((emacs (24 3))) "A literate starter kit to configure Emacs using Org-mode files." tar nil "melpa"])
  (livid-mode . [(20131116 544) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single ((:url . "https://github.com/pandeiro/livid-mode")) "melpa"])
  (logstash-conf . [(20141028 1441) nil "basic mode for editing logstash configuration" single nil "melpa"])
  (lush-theme . [(20141107 806) ((emacs (24))) "A dark theme with strong colors" single ((:url . "https://github.com/andre-richter/emacs-lush-theme") (:keywords "theme" "dark" "strong colors")) "melpa"])
  (lxc . [(20140410 1322) nil "lxc integration with Emacs" single ((:url . "https://github.com/nicferrier/emacs-lxc") (:keywords "processes")) "melpa"])
  (m-buffer . [(20141128 1414) ((dash (2 8 0)) (emacs (24 3))) "Buffer Manipulation Functions" single nil "melpa"])
  (macros+ . [(20131227 136) nil "Extensions to `macros.el'." single ((:url . "http://www.emacswiki.org/macros+.el") (:keywords "abbrev" "local")) "melpa"])
  (magic-latex-buffer . [(20140909 1929) ((cl-lib (0 5)) (emacs (24 3))) "magical syntax highlighting for LaTeX-mode buffers" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (magit-annex . [(20140629 1457) ((cl-lib (0 3)) (magit (1 2 0))) "Use git annex within magit" single ((:url . "https://github.com/kyleam/magit-annex") (:keywords "vc" "tools")) "melpa"])
  (magit-find-file . [(20140908 758) ((magit (1 2 0)) (dash (2 8 0))) "completing-read over all files in Git" single ((:url . "https://github.com/bradleywright/magit-find-file.el") (:keywords "git")) "melpa"])
  (magit-gerrit . [(20141117 1704) ((magit (1 2 0))) "Magit plugin for Gerrit Code Review" single ((:url . "https://github.com/terranpro/magit-gerrit")) "melpa"])
  (magit-gitflow . [(20140512 1437) ((magit (1 3 0))) "gitflow extension for magit" single ((:url . "https://github.com/jtatarik/magit-gitflow") (:keywords "vc" "tools")) "melpa"])
  (magit-log-edit . [(20140522 1137) ((cl-lib (0 3)) (magit (1 3 0))) "[SEMI-OBSOLETE] major mode for editing Git commit messages" single ((:keywords "vc" "tools")) "melpa"])
  (magit-stgit . [(20140807 909) ((cl-lib (0 3)) (magit (1 3 0))) "StGit plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-svn . [(20140807 909) ((cl-lib (0 3)) (magit (1 3 0))) "git-svn plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-topgit . [(20140807 909) ((cl-lib (0 3)) (magit (1 3 0))) "topgit plug-in for Magit" single ((:keywords "vc" "tools")) "melpa"])
  (magit-tramp . [(20140815 1633) ((magit (1 2 0))) "git method for TRAMP" tar ((:url . "https://github.com/sigma/magit-tramp")) "melpa"])
  (magma-mode . [(20141119 148) ((cl-lib (0 3)) (dash (2 6 0)) (f (0 17 1))) "Magma mode for Emacs" tar nil "melpa"])
  (magnatune . [(20141113 242) ((dash (2 9 0)) (s (1 9 0))) "browse to magnatune's music catalog" single nil "melpa"])
  (make-color . [(20140625 450) nil "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" single ((:url . "https://github.com/alezost/make-color.el") (:keywords "color")) "melpa"])
  (make-it-so . [(20141203 811) ((helm (1 5 3)) (emacs (24))) "Transform files with Makefile recipes." tar ((:url . "https://github.com/abo-abo/make-it-so") (:keywords "make" "dired")) "melpa"])
  (maker-mode . [(20141028 426) ((s (1 3 0)) (dash (2 8 0))) "Emacs mode for maker (scala build tool)" single ((:url . "https://github.com/fommil/maker-mode") (:keywords "processes" "tools")) "melpa"])
  (makey . [(20131231 630) ((cl-lib (0 2))) "interactive commandline mode" single nil "melpa"])
  (malabar-mode . [(20141206 818) ((fringe-helper (1 0 1))) "A better Java mode for Emacs" tar ((:url . "http://www.github.com/m0smith/malabar-mode") (:keywords "java" "maven" "language" "malabar")) "melpa"])
  (malinka . [(20141202 807) ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (cl-lib (0 3)) (rtags (0 0)) (projectile (0 11 0))) "A C/C++ project configuration package for Emacs" single ((:url . "https://github.com/LefterisJP/malinka") (:keywords "c" "c++" "project-management")) "melpa"])
  (manage-minor-mode . [(20140310 900) ((emacs (24 3))) "Manage your minor-modes easily" single ((:url . "https://github.com/ShingoFukuyama/manage-minor-mode") (:keywords "minor-mode" "manage" "emacs")) "melpa"])
  (mandoku . [(20141205 1756) ((org (8 0))) "A tool to access repositories of premodern Chinese texts" tar nil "melpa"])
  (mandoku-meta-zb . [(20141203 2155) ((org (8)) (mandoku (0 5))) "Metadata for the ZB repository to be used by Mandoku" tar ((:url . "http://www.mandoku.org") (:keywords "convenience")) "melpa"])
  (marcopolo . [(20141126 918) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Docker API" tar ((:url . "https://github.com/nlamirault/marcopolo") (:keywords "docker")) "melpa"])
  (markdown-toc . [(20140630 413) ((s (1 7 0)) (dash (2 5 0)) (markdown-mode (2 0))) "A simple TOC generator for markdown file" tar nil "melpa"])
  (marmalade . [(20110602 1622) ((furl (0 0 2))) "Elisp interface for the Emacs Lisp package server." single ((:url . "http://code.google.com/p/marmalade")) "melpa"])
  (marmalade-client . [(20141028 712) ((web (0 4 2)) (kv (0 0 19)) (gh (0 8 0))) "client for marmalade API from emacs" tar ((:url . "https://github.com/nicferrier/emacs-marmalade-upload") (:keywords "lisp")) "melpa"])
  (math-symbol-lists . [(20141126 1508) nil "Lists of Unicode mathematical symbols and latex commands" single ((:url . "https://github.com/vspinu/math-symbol-lists") (:keywords "unicode" "symbols" "mathematics")) "melpa"])
  (math-symbols . [(20130910 31) ((helm (1 0))) "Math Symbol Input methods and conversion tools" tar ((:url . "https://github.com/kawabata/math-symbols") (:keywords "math symbols" "tex" "latex")) "melpa"])
  (matlab-mode . [(20141108 14) nil "No description available." tar nil "melpa"])
  (maven-test-mode . [(20141128 1233) nil "No description available." single nil "melpa"])
  (mb-depth+ . [(20131227 137) nil "Indicate minibuffer-depth in prompt" single ((:url . "http://www.emacswiki.org/mb-depth+.el") (:keywords "convenience")) "melpa"])
  (mbe . [(20141112 1042) ((emacs (24)) (cl-lib (0 5))) "Macros by Example" single ((:url . "https://github.com/ijp/mbe.el") (:keywords "tools" "macros")) "melpa"])
  (mbo70s-theme . [(20141122 642) ((emacs (24 0))) "70s style palette, with similarities to mbo theme" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (mc-extras . [(20130909 27) ((multiple-cursors (1 2 1))) "Extra functions for multiple-cursors mode." tar ((:url . "https://github.com/knu/mc-extras.el") (:keywords "editing" "cursors")) "melpa"])
  (md-readme . [(20140819 415) nil "Markdown-formatted READMEs for your ELisp" single ((:url . "http://github.com/thomas11/md-readme/tree/master") (:keywords "lisp" "help" "readme" "markdown" "header" "documentation" "github")) "melpa"])
  (mellow-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Mellow (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (menu-bar+ . [(20140504 2038) nil "Extensions to `menu-bar.el'." single ((:url . "http://www.emacswiki.org/menu-bar+.el") (:keywords "internal" "local" "convenience")) "melpa"])
  (merlin . [(20141130 1239) nil "Mode for Merlin, an assistant for OCaml." tar ((:url . "http://github.com/the-lambda-church/merlin") (:keywords "ocaml" "languages")) "melpa"])
  (message-x . [(20140505 1407) nil "No description available." single nil "melpa"])
  (midje-test-mode . [(20131208 914) ((clojure-mode (1 7)) (cider (0 3 0))) "Minor mode for midje" single ((:keywords "languages" "lisp" "test")) "melpa"])
  (milkode . [(20140926 2229) nil "Command line search and direct jump with Milkode" single ((:keywords "milkode" "search" "grep" "jump" "keyword")) "melpa"])
  (minesweeper . [(20140802 2122) nil "play minesweeper in Emacs" single ((:url . "https://bitbucket.org/zck/minesweeper.el") (:keywords "game" "fun" "minesweeper" "inane" "diversion")) "melpa"])
  (minibuf-isearch . [(20071112 234) nil "incremental search on minibuffer history" tar ((:keywords "minibuffer" "history" "incremental search")) "melpa"])
  (minibuffer-complete-cycle . [(20130813 945) nil "Cycle through the *Completions* buffer" single ((:url . "https://github.com/knu/minibuffer-complete-cycle") (:keywords "completion")) "melpa"])
  (minibuffer-cua . [(20130906 434) nil "Make CUA mode's S-up/S-down work in minibuffer" single ((:url . "https://github.com/knu/minibuffer-cua.el") (:keywords "completion" "editing")) "melpa"])
  (miniedit . [(20100419 1045) nil "Enhanced editing for minibuffer fields." single nil "melpa"])
  (minimal-theme . [(20140409 1601) nil "A light/dark minimalistic Emacs 24 theme." tar ((:url . "http://github.com/ikame/minimal-theme") (:keywords "color" "theme" "minimal")) "melpa"])
  (minitest . [(20141205 716) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar ((:url . "https://github.com/arthurnn/minitest-emacs")) "melpa"])
  (mip-mode . [(20141023 450) nil "virtual projects for emacs." single ((:keywords "workspaces" "workspace" "project" "projects" "mip-mode")) "melpa"])
  (misc-cmds . [(20141129 513) nil "Miscellaneous commands (interactive functions)." single ((:url . "http://www.emacswiki.org/misc-cmds.el") (:keywords "internal" "unix" "extensions" "maint" "local")) "melpa"])
  (mkdown . [(20140517 718) ((markdown-mode (2 0))) "Pretty Markdown previews based on mkdown.com" tar ((:url . "https://github.com/ajtulloch/mkdown.el") (:keywords "markdown")) "melpa"])
  (mobdebug-mode . [(20140109 1946) ((lua-mode (20130419)) (emacs (24))) "Major mode for MobDebug" single ((:url . "https://github.com/deftsp/mobdebug-mode")) "melpa"])
  (mocha-snippets . [(20141009 713) ((yasnippet (0 8 0))) "Yasnippets for the Mocha JS Testing Framework" tar ((:keywords "test" "javascript")) "melpa"])
  (monochrome-theme . [(20140326 350) nil "A dark Emacs 24 theme for your focused hacking sessions" tar nil "melpa"])
  (monroe . [(20141111 107) nil "Yet another client for nREPL" single ((:url . "http://www.github.com/sanel/monroe") (:keywords "languages" "clojure" "nrepl" "lisp")) "melpa"])
  (morlock . [(20140517 908) nil "more font-lock keywords for elisp" single ((:url . "http://github.com/tarsius/morlock") (:keywords "convenience")) "melpa"])
  (mouse3 . [(20140721 2100) nil "Customizable behavior for `mouse-3'." single ((:url . "http://www.emacswiki.org/mouse3.el") (:keywords "mouse" "menu" "keymap" "kill" "rectangle" "region")) "melpa"])
  (move-dup . [(20140925 808) nil "Eclipse-like moving and duplicating lines or rectangles." single ((:keywords "convenience" "wp")) "melpa"])
  (mowedline . [(20140708 1456) nil "elisp utilities for using mowedline" single nil "melpa"])
  (moz . [(20090407 1405) nil "Lets current buffer interact with inferior mozilla." single ((:url . "http://github.com/bard/mozrepl/raw/master/chrome/content/moz.el")) "melpa"])
  (moz-controller . [(20141001 2347) ((moz (0))) "Control Firefox from Emacs" single ((:url . "https://github.com/RenWenshan/emacs-moz-controller")) "melpa"])
  (mpages . [(20141120 1524) nil "An Emacs buffer for quickly writing your Morning Pages" single ((:url . "https://github.com/slevin/mpages")) "melpa"])
  (mu4e-maildirs-extension . [(20140314 231) nil "Show mu4e maildirs summary in mu4e-main-view" single ((:url . "http://github.com/agpchil/mu4e-maildirs-extension")) "melpa"])
  (multi . [(20131013 844) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" single ((:url . "http://github.com/kurisuwhyte/emacs-multi") (:keywords "multimethod" "generic" "predicate" "dispatch")) "melpa"])
  (multi-project . [(20141105 653) nil "Easily work with multiple projects." single ((:url . "https://bitbucket.org/ellisvelo/multi-project/overview") (:keywords "project" "management")) "melpa"])
  (multicolumn . [(20141111 1349) nil "Creating and managing multiple side-by-side windows." single ((:url . "https://github.com/Lindydancer/multicolumn")) "melpa"])
  (mustang-theme . [(20141017 1623) nil "port of vim's mustang theme" single ((:url . "http://github.com/mswift42/mustang-theme")) "melpa"])
  (mustard-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Mustard (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (mvn . [(20131227 2312) nil "helpers for compiling with maven" single ((:url . "https://github.com/apgwoz/mvn-el") (:keywords "compilation" "maven" "java")) "melpa"])
  (mykie . [(20140221 1925) nil "Command multiplexer: Register multiple functions to a keybind" tar ((:url . "https://github.com/yuutayamada/mykie-el") (:keywords "emacs" "configuration" "keybind")) "melpa"])
  (naked . [(20131227 142) nil "Provide for naked key descriptions: no angle brackets." single ((:url . "http://www.emacswiki.org/naked.el") (:keywords "lisp" "key" "print" "format" "help")) "melpa"])
  (names . [(20141118 1459) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar ((:url . "http://github.com/Bruce-Connor/names") (:keywords "extensions" "lisp")) "melpa"])
  (nanowrimo . [(20141102 2139) nil "Track progress for nanowrimo" single ((:url . "https://bitbucket.org/gvol/nanowrimo-mode")) "melpa"])
  (narrow-indirect . [(20140915 37) nil "Narrow using an indirect buffer that is a clone" single ((:url . "http://www.emacswiki.org/narrow-indirect.el") (:keywords "narrow" "indirect" "buffer" "clone" "view" "multiple-modes")) "melpa"])
  (navi-mode . [(20141019 210) nil "major-mode for easy buffer-navigation" single ((:url . "https://github.com/tj64/navi")) "melpa"])
  (navi2ch . [(20141125 1844) nil "Navigator for 2ch for Emacsen" tar ((:keywords "network" "2ch")) "melpa"])
  (navorski . [(20141203 1024) ((s (1 9 0)) (dash (1 5 0)) (multi-term (0 8 14))) "Helping you live in the terminal, like Viktor did." single ((:keywords "terminal")) "melpa"])
  (neotree . [(20141119 443) nil "A tree plugin like NerdTree for Vim" single ((:url . "https://github.com/jaypei/emacs-neotree")) "melpa"])
  (never-comment . [(20140104 1407) nil "Never blocks are comment" single ((:url . "http://stackoverflow.com/a/4554658/89376")) "melpa"])
  (newlisp-mode . [(20141018 1250) nil "newLISP editing mode for Emacs" single ((:url . "https://github.com/kosh04/newlisp-mode") (:keywords "language" "lisp" "newlisp")) "melpa"])
  (nexus . [(20140114 505) nil "REST Client for Nexus Maven Repository servers" tar ((:keywords "comm")) "melpa"])
  (niflheim-theme . [(20141206 1257) nil "A port of the Nifleim theme to Emacs" single ((:url . "https://github.com/niflheim-theme/emacs") (:keywords "themes")) "melpa"])
  (ninja-mode . [(20141203 2159) ((emacs (24))) "Major mode for editing .ninja files" single nil "melpa"])
  (nix-mode . [(20140917 435) nil "Major mode for editing Nix expressions" single ((:url . "https://github.com/NixOS/nix/tree/master/misc/emacs")) "melpa"])
  (nm . [(20140819 729) ((notmuch (0 18)) (peg (0 6)) (company (0)) (emacs (24))) "N E V E R M O R E: an experimental email interface for Notmuch" tar ((:url . "https://github.com/tjim/nevermore")) "melpa"])
  (nnir-est . [(20140301 602) nil "Gnus nnir interface for HyperEstraier" single ((:url . "https://github.com/kawabata/nnir-est") (:keywords "mail")) "melpa"])
  (noccur . [(20141203 636) nil "Run multi-occur on project/dired files" single ((:keywords "convenience")) "melpa"])
  (node-resolver . [(20140930 1023) ((cl-lib (0 5))) "hook to install node modules in background" single ((:url . "https://github.com/meandavejustice/node-resolver.el") (:keywords "convenience" "nodejs" "javascript" "npm")) "melpa"])
  (notmuch-labeler . [(20131230 919) ((notmuch (0))) "Improve notmuch way of displaying labels" tar ((:url . "https://github.com/DamienCassou/notmuch-labeler") (:keywords "emacs" "package" "elisp" "notmuch" "emails")) "melpa"])
  (notmuch-unread . [(20140613 444) ((notmuch (0 18))) "Display unread mail count in the mode line" single nil "melpa"])
  (novice+ . [(20131227 143) nil "Extensions to `novice.el'." single ((:url . "http://www.emacswiki.org/novice+.el") (:keywords "internal" "help")) "melpa"])
  (nrepl-sync . [(20140807 854) ((cider (0 6))) "connect to nrepl port and eval .sync.clj." single ((:url . "https://github.com/phillord/lein-sync")) "melpa"])
  (nu-mode . [(20141109 1444) ((undo-tree (0 6 5)) (helm (20140902 1005))) "Modern Emacs Prompts Based Keybinding." tar nil "melpa"])
  (number . [(20141127 1004) nil "Working with numbers at point." single nil "melpa"])
  (nummm-mode . [(20131117 214) nil "Display the number of minor modes instead of their names" single ((:url . "http://github.com/agpchil/nummm-mode")) "melpa"])
  (nvm . [(20140121 540) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0))) "Manage Node versions within Emacs" single ((:url . "http://github.com/rejeep/nvm.el") (:keywords "node" "nvm")) "melpa"])
  (objc-font-lock . [(20141021 1122) nil "Highlight Objective-C method calls." single ((:url . "https://github.com/Lindydancer/objc-font-lock") (:keywords "languages" "faces")) "melpa"])
  (obsidian-theme . [(20140420 943) nil "port of the eclipse obsidian theme" single ((:url . "http://github.com/mswift42/obsidian-theme")) "melpa"])
  (occur-context-resize . [(20140826 1249) nil "dynamically resize context around matches in occur-mode" single ((:url . "https://github.com/dgtized/occur-context-resize.el") (:keywords "matching")) "melpa"])
  (ocp-indent . [(20141130 2217) nil "automatic indentation with ocp-indent" single ((:url . "http://www.typerex.org/ocp-indent.html") (:keywords "ocaml" "languages")) "melpa"])
  (oldlace-theme . [(20141023 1004) ((emacs (24))) "Emacs 24 theme with an 'oldlace' background." single nil "melpa"])
  (olivetti . [(20141016 1807) nil "Minor mode for a nice writing environment" single ((:keywords "wp")) "melpa"])
  (om-mode . [(20140915 1410) nil "Insert Om component template with life cycle." single ((:keywords "clojurescript")) "melpa"])
  (omniref . [(20140222 1226) nil "Omniref Ruby documentation search engine interface" single ((:url . "http://github.org/dotemacs/omniref.el") (:keywords "docs" "help" "tools")) "melpa"])
  (omnisharp . [(20141205 1148) ((json (1 2)) (flycheck (0 21)) (dash (20141201 2206)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7))) "Omnicompletion (intellisense) and more for C#" tar ((:url . "https://github.com/sp3ctum/omnisharp-emacs") (:keywords "csharp" "c#" "ide" "auto-complete" "intellisense")) "melpa"])
  (on-screen . [(20140502 2010) ((cl-lib (0))) "guide your eyes while scrolling" single ((:url . "https://github.com/michael-heerdegen/on-screen.el") (:keywords "convenience")) "melpa"])
  (oneonone . [(20141201 2156) ((hexrgb (0))) "Frame configuration that uses one frame per window." single ((:url . "http://www.emacswiki.org/oneonone.el") (:keywords "local" "frames")) "melpa"])
  (openstack-cgit-browse-file . [(20130819 227) nil "Browse the current file in OpenStack cgit" single ((:url . "https://github.com/chmouel/openstack-cgit-browse-file") (:keywords "convenience" "vc" "git" "cgit" "gerrit" "openstack")) "melpa"])
  (operate-on-number . [(20140522 430) nil "Operate on number at point with arithmetic functions" single ((:url . "https://github.com/knu/operate-on-number.el") (:keywords "editing")) "melpa"])
  (org-ac . [(20140302 413) ((auto-complete-pcmp (0 0 1)) (log4e (0 2 0)) (yaxception (0 1))) "Some auto-complete sources for org-mode" single ((:url . "https://github.com/aki2o/org-ac") (:keywords "org" "completion")) "melpa"])
  (org-caldav . [(20141116 1436) ((org (7))) "Sync org files with external calendar through CalDAV" single ((:keywords "calendar" "caldav")) "melpa"])
  (org-cliplink . [(20141206 440) nil "insert org-mode link for URL from the clipboard" single ((:url . "http://github.com/rexim/org-cliplink")) "melpa"])
  (org-drill-table . [(20140117 137) ((s (1 7 0)) (dash (2 2 0)) (cl-lib (0 3)) (org-plus-contrib (8 2)) (emacs (24 1))) "Generate drill cards from org tables" single nil "melpa"])
  (org-ehtml . [(20140524 1124) ((web-server (20140109 2200)) (emacs (24 3))) "Export Org-mode files as editable web pages" tar nil "melpa"])
  (org-gcal . [(20140606 2022) ((request-deferred (0 2 0)) (alert (1 1)) (emacs (24)) (cl-lib (0 5)) (org (8 2 4))) "Org sync with Google Calendar" single ((:url . "https://github.com/myuhe/org-gcal.el") (:keywords "convenience")) "melpa"])
  (org-gnome . [(20140111 813) ((notify (2010 8 20)) (telepathy (0 1)) (gnome-calendar (0 1))) "Orgmode integration with the GNOME desktop" single ((:keywords "org" "gnome")) "melpa"])
  (org-grep . [(20140214 2022) nil "Kind of M-x rgrep adapted for Org mode." single ((:url . "https://github.com/pinard/org-grep")) "melpa"])
  (org-impress-js . [(20140616 612) nil "No description available." tar nil "melpa"])
  (org-link-travis . [(20140405 1627) ((org (7))) "Insert/Export the link of Travis CI on org-mode" single ((:url . "https://github.com/aki2o/org-link-travis") (:keywords "org")) "melpa"])
  (org-linkany . [(20140314 1108) ((log4e (0 2 0)) (yaxception (0 1))) "Insert link using anything.el/helm.el on org-mode" single ((:url . "https://github.com/aki2o/org-linkany") (:keywords "org" "completion")) "melpa"])
  (org-mac-link . [(20141015 608) nil "Insert org-mode links to items selected in various Mac apps" single ((:keywords "org" "mac" "hyperlink")) "melpa"])
  (org-mobile-sync . [(20131118 1116) ((emacs (24 3 50)) (org (8 0))) "automatically sync org-mobile on changes" single ((:url . "https://github.com/steckerhalter/org-mobile-sync") (:keywords "org-mode" "org" "mobile" "sync" "todo")) "melpa"])
  (org-page . [(20140722 2014) ((ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0))) "a static site generator based on org mode" tar nil "melpa"])
  (org-pandoc . [(20130729 1850) nil "Export from Org using Pandoc" tar nil "melpa"])
  (org-redmine . [(20140117 10) ((anything (0))) "Redmine tools using Emacs OrgMode" single ((:url . "https://github.com/gongo/org-redmine") (:keywords "redmine")) "melpa"])
  (org-repo-todo . [(20141204 1341) nil "Simple repository todo management with org-mode" single ((:url . "https://github.com/waymondo/org-repo-todo") (:keywords "convenience")) "melpa"])
  (org-screenshot . [(20140503 1234) ((org (7))) "screenshots integrated with org attachment dirs" single ((:url . "https://github.com/dfeich/org-screenshot") (:keywords "org")) "melpa"])
  (org-toc . [(20141110 650) nil "add table of contents to org-mode files" single ((:url . "https://github.com/snosov1/org-toc") (:keywords "org-mode" "org" "toc" "table" "of" "contents")) "melpa"])
  (org-vcard . [(20141203 2154) nil "org-mode support for vCard export and import." tar ((:url . "https://github.com/flexibeast/org-vcard") (:keywords "outlines" "org" "vcard")) "melpa"])
  (org-wc . [(20141031 2320) nil "Count words in org mode trees." single nil "melpa"])
  (organic-green-theme . [(20141028 241) nil "Low-contrast green color theme." single nil "melpa"])
  (orgbox . [(20140528 1826) ((org (8 0)) (cl-lib (0 5))) "Mailbox-like task scheduling Org." single ((:url . "https://github.com/yasuhito/orgbox") (:keywords "org")) "melpa"])
  (orgit . [(20141124 1108) ((cl-lib (0 5)) (dash (2 9 0)) (magit (2 1 0)) (org (8))) "support for Org links to Magit buffers" single ((:url . "https://github.com/magit/orgit")) "melpa"])
  (orgtbl-aggregate . [(20141205 1332) ((cl-lib (0 5))) "Create an aggregated Org table from another one" tar ((:keywords "org" "table" "aggregation" "filtering")) "melpa"])
  (orgtbl-ascii-plot . [(20141102 1233) ((org (7))) "ascii-art bar plots in org-mode tables" single ((:keywords "org" "table" "ascii" "plot")) "melpa"])
  (orgtbl-show-header . [(20141023 137) nil "Show the header of the current column in the minibuffer" single nil "melpa"])
  (origami . [(20141122 1357) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "Flexible text folding" tar ((:url . "https://github.com/gregsexton/") (:keywords "folding")) "melpa"])
  (osx-clipboard . [(20141012 17) nil "Use the OS X clipboard from terminal Emacs" single ((:url . "https://github.com/joddie/osx-clipboard-mode")) "melpa"])
  (osx-pseudo-daemon . [(20131026 1730) nil "Daemon mode that plays nice with OSX." single ((:url . "https://github.com/DarwinAwardWinner/osx-pseudo-daemon") (:keywords "convenience" "osx")) "melpa"])
  (outorg . [(20140921 840) nil "Org-style comment editing" single ((:url . "https://github.com/tj64/outorg")) "melpa"])
  (outshine . [(20141116 2349) ((outorg (2 0))) "outline with outshine outshines outline" single ((:url . "https://github.com/tj64/outshine")) "melpa"])
  (ov . [(20140817 552) ((emacs (24 3))) "Overlay library for Emacs Lisp" single ((:url . "https://github.com/ShingoFukuyama/ov.el") (:keywords "overlay")) "melpa"])
  (owdriver . [(20141011 738) ((smartrep (0 0 3)) (log4e (0 2 0)) (yaxception (0 2 0))) "Quickly perform various actions on other windows" single ((:url . "https://github.com/aki2o/owdriver") (:keywords "convenience")) "melpa"])
  (ox-asciidoc . [(20140215 610) ((org (8 1))) "AsciiDoc Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-asciidoc") (:keywords "org" "asciidoc")) "melpa"])
  (ox-html5slide . [(20131227 2206) ((org (8 0))) "Export org-mode to HTML5 slide." single ((:url . "http://github.com/coldnew/org-html5slide") (:keywords "html" "presentation")) "melpa"])
  (ox-pandoc . [(20140818 2127) ((org (8 2)) (emacs (24)) (dash (2 8)) (ht (2 0))) "org exporter for pandoc." single ((:url . "https://github.com/kawabata/ox-pandoc") (:keywords "tools")) "melpa"])
  (ox-pukiwiki . [(20140215 609) ((org (8 1))) "Pukiwiki Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-pukiwiki") (:keywords "org" "pukiwiki")) "melpa"])
  (ox-reveal . [(20140710 811) ((org (8 0))) "reveal.js Presentation Back-End for Org Export Engine" single ((:keywords "outlines" "hypermedia" "slideshow" "presentation")) "melpa"])
  (ox-textile . [(20140215 607) ((org (8 1))) "Textile Back-End for Org Export Engine" single ((:url . "https://github.com/yashi/org-textile") (:keywords "org" "textile")) "melpa"])
  (ox-tiddly . [(20131124 804) ((org (8))) "org TiddlyWiki exporter" single ((:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org")) "melpa"])
  (ox-twiki . [(20140120 2239) ((org (8))) "org Twiki and Foswiki export" single ((:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org")) "melpa"])
  (package+ . [(20141124 1756) nil "Extensions for the package library." single ((:url . "TBA") (:keywords "extensions" "tools")) "melpa"])
  (package-filter . [(20140105 1426) nil "special handling for package.el" single ((:url . "https://github.com/milkypostman/package-filter")) "melpa"])
  (package-safe-delete . [(20141021 1011) ((emacs (24 3)) (epl (0 7 -3))) "Safely delete package.el packages" single ((:url . "https://github.com/Fanael/package-safe-delete")) "melpa"])
  (package-utils . [(20141005 628) ((epl (0 7 -3))) "Extensions for package.el" single ((:url . "https://github.com/Silex/package-utils") (:keywords "package" "convenience")) "melpa"])
  (packed-git . [(20140828 1148) ((cl-lib (0 5)) (magit (2 1 0)) (packed (0 3 5))) "Utilities for Emacs packages living in Git repositories" single ((:url . "http://tarsius.github.com/packed") (:keywords "compile" "convenience" "lisp" "package" "library")) "melpa"])
  (palette . [(20141020 323) ((hexrgb (0))) "Color palette useful with RGB, HSV, and color names" single ((:url . "http://www.emacswiki.org/palette.el") (:keywords "color" "rgb" "hsv" "hexadecimal" "face" "frame")) "melpa"])
  (palimpsest . [(20130731 821) nil "Various deletion strategies when editing" single nil "melpa"])
  (paradox . [(20141123 628) ((emacs (24 1)) (dash (2 6 0)) (cl-lib (0 5)) (json (1 3))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar ((:url . "http://github.com/Bruce-Connor/paradox") (:keywords "package" "packages" "mode-line")) "melpa"])
  (paren-face . [(20141125 1355) nil "a face for parentheses in lisp modes" single ((:url . "http://github.com/tarsius/paren-face")) "melpa"])
  (parent-mode . [(20141013 1041) nil "get major mode's parent modes" single ((:url . "https://github.com/Fanael/parent-mode")) "melpa"])
  (parse-csv . [(20140203 116) nil "Parse strings with CSV fields into s-expressions" single ((:url . "https://github.com/mrc/el-csv") (:keywords "csv")) "melpa"])
  (passthword . [(20141201 123) ((cl-lib (0 5))) "Simple password manager" single nil "melpa"])
  (password-store . [(20140616 1141) ((dash (1 5 0)) (f (0 11 0)) (s (1 9 0))) "Password store (pass) support" single ((:keywords "pass")) "melpa"])
  (password-vault . [(20131105 1703) ((cl-lib (0 2)) (emacs (24))) "A Password manager for Emacs." single ((:url . "http://github.com/PuercoPop/password-vault.el") (:keywords "password" "productivity")) "melpa"])
  (paxedit . [(20141202 2053) ((cl-lib (0 5)) (paredit (23))) "Structured, Context Driven LISP Editing and Refactoring" single ((:url . "https://github.com/promethial/paxedit") (:keywords "lisp" "refactoring" "context")) "melpa"])
  (pcmpl-homebrew . [(20141024 48) nil "pcomplete for homebrew" single ((:keywords "pcomplete" "homebrew" "tools")) "melpa"])
  (pcmpl-pip . [(20141024 148) nil "pcomplete for pip" single ((:keywords "pcomplete" "pip" "python" "tools")) "melpa"])
  (pcomplete-extension . [(20140604 947) ((emacs (24)) (cl-lib (0 5))) "additional completion for pcomplete" single ((:url . "https://github.com/thierryvolpiatto/pcomplete-extension")) "melpa"])
  (pcsv . [(20131110 750) nil "Parser of csv" single ((:url . "https://github.com/mhayashi1120/Emacs-pcsv/raw/master/pcsv.el") (:keywords "data")) "melpa"])
  (peacock-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Peacock (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (peek-mode . [(20130620 1246) ((elnode (0 9 8 1))) "Serve buffers live over HTTP with elnode backend" tar ((:url . "https://github.com/erikriverson/peek-mode")) "melpa"])
  (peep-dired . [(20140901 210) nil "Peep at files in another window from dired buffers" single ((:keywords "files" "convenience")) "melpa"])
  (perl-completion . [(20090527 2336) nil "No description available." single nil "melpa"])
  (persp-projectile . [(20141009 2310) ((perspective (1 9)) (projectile (0 11 0)) (cl-lib (0 3))) "Perspective integration with Projectile" single ((:keywords "project" "convenience")) "melpa"])
  (phi-autopair . [(20141008 2041) ((paredit (20))) "another simple-minded autopair implementation" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-rectangle . [(20141120 717) nil "another rectangle-mark command (rewrite of rect-mark)" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-search-dired . [(20141125 1736) ((phi-search (2 1 1))) "interactive filtering for dired powered by phi-search" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (phi-search-mc . [(20140619 2229) ((phi-search (2 0 0)) (multiple-cursors (1 2 1))) "multiple-cursors extension for phi-search" single ((:url . "https://github.com/knu/phi-search-mc.el") (:keywords "search" "cursors")) "melpa"])
  (phi-search-migemo . [(20141206 547) ((phi-search (2 1 1)) (migemo (1 9 1))) "migemo extension for phi-search" single ((:url . "http://hins11.yu-yake.com/")) "melpa"])
  (php-auto-yasnippets . [(20141128 1411) ((php-mode (1 11)) (yasnippet (0 8 0))) "Creates snippets for PHP functions" tar ((:url . "https://github.com/ejmr/php-auto-yasnippets")) "melpa"])
  (php-boris-minor-mode . [(20140209 1035) ((php-boris (0 0 1)) (highlight (0))) "a minor mode to evaluate PHP code in the Boris repl" single ((:url . "https://github.com/steckerhalter/php-boris-minor-mode") (:keywords "php" "repl" "eval")) "melpa"])
  (php-refactor-mode . [(20140920 1411) nil "Minor mode to quickly and safely perform common refactorings" single ((:url . "https://github.com/keelerm84/php-refactor-mode.el") (:keywords "php" "refactor")) "melpa"])
  (phpunit . [(20141024 314) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5))) "Launch PHP unit tests using phpunit" single ((:url . "https://github.com/nlamirault/phpunit.el") (:keywords "php" "tests" "phpunit")) "melpa"])
  (pianobar . [(20120128 1301) nil "thin wrapper for Pianobar, a Pandora Radio client" single ((:url . "http://github.com/agrif/pianobar.el")) "melpa"])
  (picolisp-mode . [(20141128 422) nil "major mode for PicoLisp programming." single ((:url . "https://github.com/flexibeast/picolisp-mode") (:keywords "picolisp" "lisp" "programming")) "melpa"])
  (pig-snippets . [(20130912 2324) ((yasnippet (0 8 0))) "Snippets for pig-mode" tar nil "melpa"])
  (pillar . [(20141112 1011) ((makey (0 3))) "Major mode for editing Pillar files" tar ((:url . "http://github.com/DamienCassou/pillar-mode") (:keywords "markup" "major-mode")) "melpa"])
  (pinboard-api . [(20140324 448) nil "Rudimentary http://pinboard.in integration" single ((:url . "https://github.com/danieroux/pinboard-api-el") (:keywords "pinboard" "www")) "melpa"])
  (pinot . [(20140211 1226) nil "Emacs interface to pinot-search" tar nil "melpa"])
  (pip-requirements . [(20140922 1330) ((dash (2 8 0))) "A major mode for editing pip requirements files." single nil "melpa"])
  (pkg-info . [(20140610 630) ((epl (0 4))) "Information about packages" single ((:url . "https://github.com/lunaryorn/pkg-info.el") (:keywords "convenience")) "melpa"])
  (planet-theme . [(20140328 630) ((emacs (24))) "A dark theme inspired by Gmail's 'Planets' theme of yore" single ((:url . "https://github.com/cmack/emacs-planet-theme") (:keywords "themes")) "melpa"])
  (plantuml-mode . [(20131031 1632) ((auto-complete (1 4))) "Major mode for plantuml" single ((:url . "https://github.com/wildsoul/plantuml-mode") (:keywords "uml" "ascii")) "melpa"])
  (plim-mode . [(20140812 1713) nil "Major mode for editing Plim files" single ((:url . "http://github.com/dongweiming/plim-mode") (:keywords "markup" "language")) "melpa"])
  (plsense . [(20140519 1058) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 2 0))) "provide interface for PlSense that is a development tool for Perl." single ((:url . "https://github.com/aki2o/emacs-plsense") (:keywords "perl" "completion")) "melpa"])
  (plsense-direx . [(20140520 1308) ((direx (0 1 -3)) (plsense (0 3 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perl Package Explorer" single ((:url . "https://github.com/aki2o/plsense-direx") (:keywords "perl" "convenience")) "melpa"])
  (plsql . [(20121115 1043) nil "Programming support for PL/SQL code" single ((:url . "http://www.emacswiki.org/elisp/plsql.el") (:keywords "languages")) "melpa"])
  (point-stack . [(20140102 1223) nil "A forward/back stack for point" single nil "melpa"])
  (polymode . [(20141204 2346) ((emacs (24))) "Versatile multiple modes with extensive literate programming support" tar ((:url . "https://github.com/vitoshka/polymode") (:keywords "emacs")) "melpa"])
  (poporg . [(20140616 1453) nil "Pop a comment or string to an empty buffer for text editing" single ((:url . "https://github.com/QBobWatson/poporg") (:keywords "outlines" "tools")) "melpa"])
  (popup-complete . [(20141108 1908) ((popup (0 5 0))) "completion with popup" single ((:url . "https://github.com/syohex/emacs-popup-complete")) "melpa"])
  (popup-kill-ring . [(20131020 1154) ((popup (0 4)) (pos-tip (0 4))) "interactively insert item from kill-ring" single ((:url . "https://github.com/waymondo/popup-kill-ring") (:keywords "popup" "kill-ring" "pos-tip")) "melpa"])
  (portage-navi . [(20140202 2156) ((concurrent (0 3 1)) (ctable (0 1 2))) "portage viewer" single ((:url . "https://github.com/kiwanami/emacs-portage-navi") (:keywords "tools" "gentoo")) "melpa"])
  (pow . [(20140420 106) ((emacs (24)) (cl-lib (0 5))) "pow (http://pow.cx/) manager for emacs" tar ((:url . "http://github.com/yukihr/emacs-pow") (:keywords "develop" "web" "pow")) "melpa"])
  (powerline-evil . [(20140517 1) ((evil (1 0 8)) (powerline (2 3))) "Utilities for better Evil support for Powerline" tar ((:url . "http://github.com/raugturi/powerline-evil/") (:keywords "evil" "mode-line" "powerline")) "melpa"])
  (pp+ . [(20131227 147) nil "Extensions to `pp.el'." single ((:url . "http://www.emacswiki.org/pp%2b.el") (:keywords "lisp")) "melpa"])
  (pp-c-l . [(20131227 147) nil "Display Control-l characters in a pretty way" single ((:url . "http://www.emacswiki.org/pp-c-l.el") (:keywords "display" "convenience" "faces")) "melpa"])
  (preproc-font-lock . [(20141027 1332) nil "Highlight C-style preprocessor directives." single ((:url . "https://github.com/Lindydancer/preproc-font-lock") (:keywords "c" "languages" "faces")) "melpa"])
  (pretty-lambdada . [(20131227 148) nil "Show the word `lambda' as the Greek letter." single ((:url . "http://www.emacswiki.org/pretty-lambdada.el") (:keywords "convenience" "display")) "melpa"])
  (pretty-sha-path . [(20141105 1026) nil "Prettify Guix/Nix store paths" single ((:url . "https://gitorious.org/alezost-emacs/pretty-sha-path") (:keywords "faces" "convenience")) "melpa"])
  (pretty-symbols . [(20140814 259) nil "Draw tokens as Unicode glyphs." single ((:url . "http://github.com/drothlis/pretty-symbols") (:keywords "faces")) "melpa"])
  (prodigy . [(20141109 252) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single ((:url . "http://github.com/rejeep/prodigy.el")) "melpa"])
  (professional-theme . [(20140916 717) nil "Emacs port of Vim's professional theme" single ((:url . "https://github.com/juanjux/professional-theme") (:keywords "theme" "light" "professional")) "melpa"])
  (prognth . [(20130920 1059) nil "Extend prog1 to arbitrary index" single ((:keywords "lisp")) "melpa"])
  (project-explorer . [(20141102 1625) ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) "A project explorer sidebar" single ((:url . "https://github.com/sabof/project-explorer")) "melpa"])
  (project-root . [(20110206 1230) nil "Define a project root and take actions based upon it." single nil "melpa"])
  (projectile-rails . [(20141128 627) ((projectile (1 0 0 -3)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0))) "Minor mode for Rails projects based on projectile-mode" single ((:url . "https://github.com/asok/projectile-rails") (:keywords "rails" "projectile")) "melpa"])
  (projector . [(20141121 1212) ((alert (1 1)) (projectile (0 11 0))) "Lightweight library for managing project/repository-aware shell and command buffers" single ((:url . "https://github.com/waymondo/projector")) "melpa"])
  (projekt . [(20140424 333) ((emacs (24))) "some kind of staging for CVS" single nil "melpa"])
  (prosjekt . [(20140822 453) ((dash (2 8 0))) "a software project tool for emacs" tar ((:url . "https://github.com/abingham/prosjekt")) "melpa"])
  (psci . [(20141030 1021) ((purescript-mode (13 10)) (dash (2 9 0)) (s (1 9 0)) (f (0 17 1)) (deferred (0 3 2))) "Major mode for purescript repl psci" tar ((:url . "https://github.com/ardumont/emacs-psci") (:keywords "purescript" "psci" "repl" "major" "mode")) "melpa"])
  (psession . [(20140829 217) ((emacs (24)) (cl-lib (0 5))) "Persistent save of elisp objects." single ((:url . "https://github.com/thierryvolpiatto/psession")) "melpa"])
  (pt . [(20141018 828) nil "A front-end for pt, The Platinum Searcher." single ((:url . "https://github.com/bling/pt.el") (:keywords "pt" "ack" "ag" "grep" "search")) "melpa"])
  (punctuality-logger . [(20141120 1231) nil "Punctuality logger for Emacs" single ((:url . "https://gitlab.com/elzair/punctuality-logger") (:keywords "reminder" "calendar")) "melpa"])
  (pungi . [(20140615 1013) ((jedi (0 2 0 -3 2))) "Integrates jedi with virtualenv and buildout python environments" single ((:keywords "convenience")) "melpa"])
  (puppetfile-mode . [(20131017 833) nil "Syntax highlighting for Puppetfiles" single nil "melpa"])
  (purescript-mode . [(20140525 1952) nil "A PureScript editing mode" tar nil "melpa"])
  (purple-haze-theme . [(20141014 1929) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single ((:url . "https://github.com/jasonm23/emacs-purple-haze-theme")) "melpa"])
  (pushbullet . [(20140809 532) ((grapnel (0 5 2)) (json (1 2))) "Emacs client for the PushBullet Android app" single ((:url . "http://www.github.com/theanalyst/revolver") (:keywords "convenience")) "melpa"])
  (px . [(20141006 548) nil "preview inline latex in any mode" single ((:url . "http://github.com/aaptel/preview-latex")) "melpa"])
  (py-autopep8 . [(20140908 31) nil "Use autopep8 to beautify a Python buffer" single ((:url . "http://paetzke.me/project/py-autopep8.el")) "melpa"])
  (py-gnitset . [(20140224 2010) nil "Run your Python tests any way you'd like" single ((:url . "https://www.github.com/quodlibetor/py-gnitset")) "melpa"])
  (py-import-check . [(20130802 411) nil "Finds the unused python imports using importchecker" single ((:url . "https://github.com/psibi/emacs-py-import-check") (:keywords "python" "import" "check")) "melpa"])
  (py-isort . [(20141122 503) nil "Use isort to sort the imports in a Python buffer" single ((:url . "http://paetzke.me/project/py-isort.el")) "melpa"])
  (py-test . [(20141123 148) ((dash (2 9 0)) (f (0 17)) (emacs (24))) "A test runner for Python code." single ((:url . "https://github.com/Bogdanp/py-test.el") (:keywords "python" "testing" "py.test")) "melpa"])
  (pydoc-info . [(20110301 34) nil "Better Python support for info-lookup-symbol." tar nil "melpa"])
  (pyenv-mode . [(20141110 1233) nil "Integrate pyenv with python-mode" single ((:url . "https://github.com/proofit404/pyenv-mode")) "melpa"])
  (python-cell . [(20131029 1616) nil "Support for MATLAB-like cells in python mode" single ((:keywords "python" "matlab" "cell")) "melpa"])
  (python-info . [(20141106 1351) nil "Python info manual for Emacs" tar nil "melpa"])
  (pyvenv . [(20140921 816) nil "Python virtual environment interface" single ((:url . "http://github.com/jorgenschaefer/pyvenv") (:keywords "python" "virtualenv" "tools")) "melpa"])
  (qiita . [(20140118 44) ((helm (1 5 9)) (markdown-mode (2 0))) "Qiita API Library for emacs" single ((:url . "https://github.com/gongo/qiita-el") (:keywords "qiita")) "melpa"])
  (quack . [(20130126 1623) nil "enhanced support for editing and running Scheme code" single nil "melpa"])
  (r-autoyas . [(20140101 710) ((ess (0)) (yasnippet (0 8 0))) "Provides automatically created yasnippets for R function argument lists." tar ((:url . "https://github.com/mlf176f2/r-autoyas.el") (:keywords "r" "yasnippet")) "melpa"])
  (racket-mode . [(20141203 1019) ((emacs (24 3))) "Major mode for Racket language." tar ((:url . "https://github.com/greghendershott/racket-mode")) "melpa"])
  (rails-log-mode . [(20140407 2125) nil "Major mode for viewing Rails log files" single ((:keywords "rails" "log")) "melpa"])
  (rails-new . [(20141129 1900) nil "Handy emacs command for generating rails application." single ((:url . "https://github.com/cheunghy/rails-new") (:keywords "rails" "ruby")) "melpa"])
  (rainbow-blocks . [(20140306 1033) nil "Block syntax highlighting for lisp code" single ((:url . "https://github.com/istib/rainbow-blocks")) "melpa"])
  (rainbow-identifiers . [(20141102 726) ((emacs (24))) "Highlight identifiers according to their names" single ((:url . "https://github.com/Fanael/rainbow-identifiers")) "melpa"])
  (rcirc-alert . [(20141127 247) nil "Configurable alert messages on top of RCIRC" tar ((:keywords "lisp" "rcirc" "irc" "alert" "awesome")) "melpa"])
  (rcirc-alertify . [(20140406 1819) ((alert (20140406 1353))) "Cross platform notifications for rcirc" single ((:keywords "comm" "convenience")) "melpa"])
  (rcirc-color . [(20140131 656) nil "color nicks" single ((:keywords "comm")) "melpa"])
  (rcirc-controls . [(20141019 136) nil "control sequences" single nil "melpa"])
  (rcirc-groups . [(20140622 214) nil "an emacs buffer in rcirc-groups major mode" single ((:url . "http://tapoueh.org/emacs/rcirc-groups.html") (:keywords "comm" "convenience")) "melpa"])
  (rcirc-notify . [(20141015 2211) nil "libnotify popups" single ((:keywords "lisp" "rcirc" "irc" "notify" "growl")) "melpa"])
  (rdf-prefix . [(20141102 743) nil "Prefix lookup for RDF" single ((:keywords "convenience" "abbrev")) "melpa"])
  (react-snippets . [(20140120 1034) ((yasnippet (0 7 0))) "Yasnippets for React" tar nil "melpa"])
  (readability . [(20140715 1727) ((oauth (1 4)) (ov (1 0)) (emacs (24 3))) "Read articles from Readability in Emacs" single ((:url . "https://github.com/ShingoFukuyama/emacs-readability") (:keywords "readability" "oauth")) "melpa"])
  (readline-complete . [(20141016 228) nil "offers completions in shell mode" single nil "melpa"])
  (recompile-on-save . [(20140317 1333) ((dash (1 1 0))) "Trigger recompilation on file save." single ((:url . "https://github.com/maio/recompile-on-save.el") (:keywords "convenience" "files" "processes" "tools")) "melpa"])
  (rectangle-utils . [(20140621 2331) ((emacs (24)) (cl-lib (0 5))) "Some useful rectangle functions." single ((:url . "https://github.com/thierryvolpiatto/rectangle-utils")) "melpa"])
  (refheap . [(20140902 1402) ((json (1 2))) "A library for pasting to https://refheap.com" single ((:url . "https://github.com/Raynes/refheap.el")) "melpa"])
  (register-channel . [(20140803 1409) nil "Jump around fast using registers" single ((:keywords "convenience")) "melpa"])
  (relative-buffers . [(20141119 1335) ((cl-lib (0 5)) (dash (2 6 0)) (s (1 9 0)) (f (0 16 2))) "Emacs buffers naming convention" single ((:url . "https://github.com/proofit404/relative-buffers")) "melpa"])
  (relative-line-numbers . [(20141018 1252) ((emacs (24))) "Display relative line numbers on the margin" single ((:url . "https://github.com/Fanael/relative-line-numbers")) "melpa"])
  (relax . [(20131029 1434) ((json (1 2))) "For browsing and interacting with CouchDB" single ((:url . "http://github.com/technomancy/relax.el") (:keywords "database" "http")) "melpa"])
  (replace+ . [(20140416 1604) nil "Extensions to `replace.el'." single ((:url . "http://www.emacswiki.org/replace%2b.el") (:keywords "matching" "help" "internal" "tools" "local")) "melpa"])
  (req-package . [(20141109 1208) ((use-package (1 0)) (dash (2 7 0)) (log4e (0 2 0))) "A use-package wrapper for package runtime dependencies management" single ((:url . "https://github.com/edvorg/req-package") (:keywords "dotemacs" "startup" "speed" "config" "package")) "melpa"])
  (request-deferred . [(20130526 1015) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" single nil "melpa"])
  (reveal-in-finder . [(20140905 335) nil "Reveal file associated with buffer in OS X Finder" single ((:url . "https://github.com/kaz-yos/elisp") (:keywords "os x" "finder")) "melpa"])
  (reveal-next . [(20140516 1521) nil "Progressively reveal text after the cursor." single ((:url . "http://www.emacswiki.org/reveal-next.el") (:keywords "hide" "show" "invisible" "learning")) "melpa"])
  (review-mode . [(20141201 2306) nil "major mode for ReVIEW" single ((:url . "https://github.com/kmuto/review-el")) "melpa"])
  (rich-minority . [(20140821 2020) ((cl-lib (0 5))) "Clean-up and Beautify the list of minor-modes." single ((:url . "http://github.com/Bruce-Connor/rich-minority") (:keywords "mode-line" "faces")) "melpa"])
  (roguel-ike . [(20140227 729) ((popup (0 5 0))) "A coffee-break roguelike" tar nil "melpa"])
  (rotate . [(20140123 116) nil "Rotate the layout of emacs" single ((:url . "https://github.com/daic-h/emacs-rotate") (:keywords "window" "layout")) "melpa"])
  (rpm-spec-mode . [(20140120 50) nil "RPM spec file editing commands for Emacs/XEmacs" single ((:keywords "unix" "languages")) "melpa"])
  (rtags . [(20141105 2318) nil "No description available." tar nil "melpa"])
  (ruby-additional . [(20140729 41) ((emacs (24 3)) (ruby-mode (1 2))) "ruby-mode extensions yet to be merged into Emacs" tar ((:url . "http://svn.ruby-lang.org/cgi-bin/viewvc.cgi/trunk/misc/") (:keywords "ruby" "languages")) "melpa"])
  (ruby-guard . [(20141128 144) nil "Launching guard directly inside emacs." single ((:url . "https://github.com/cheunghy/ruby-guard") (:keywords "ruby" "guard" "rails")) "melpa"])
  (ruby-refactor . [(20140719 1645) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." single ((:url . "https://github.com/ajvargo/ruby-refactor") (:keywords "refactor" "ruby")) "melpa"])
  (runner . [(20140106 758) nil "Improved \"open with\" suggestions for dired" single ((:url . "https://github.com/thamer/runner") (:keywords "shell command" "dired" "file extension" "open with")) "melpa"])
  (sage-shell-mode . [(20141206 745) ((cl-lib (0 5)) (deferred (0 3 2))) "A front-end for Sage Math" tar ((:url . "https://github.com/stakemori/sage-shell-mode") (:keywords "sage" "math")) "melpa"])
  (sane-term . [(20141102 1227) ((emacs (24 1))) "Multi Term is crazy. This is not." single ((:url . "http://github.com/adamrt/sane-term")) "melpa"])
  (sbt-mode . [(20141110 1116) ((scala-mode2 (0 22))) "Major mode for sbt >= 0.12 with scala >= 2.9" tar nil "melpa"])
  (scad-mode . [(20140609 2240) nil "Major mode for editing SCAD files" single ((:url . "https://raw.github.com/openscad/openscad/master/contrib/scad-mode.el") (:keywords "languages")) "melpa"])
  (scala-outline-popup . [(20141121 519) ((dash (2 9 0)) (popup (0 5 1)) (scala-mode2 (0 22))) "scala file summary popup" single ((:url . "https://github.com/ancane/scala-outline-popup.el") (:keywords "scala" "structure" "summary")) "melpa"])
  (scratch-ext . [(20140103 2116) nil "Extensions for *scratch*" single ((:url . "https://github.com/kyanagi/scratch-ext-el")) "melpa"])
  (search-web . [(20120128 2220) nil "Post web search queries using `browse-url'." single nil "melpa"])
  (seclusion-mode . [(20121118 1553) nil "Edit in seclusion. A Dark Room mode." single ((:url . "http://github.com/dleslie/seclusion-mode")) "melpa"])
  (second-sel . [(20131227 151) nil "Secondary selection commands" single ((:url . "http://www.emacswiki.org/second-sel.el") (:keywords "region" "selection" "yank" "paste" "edit")) "melpa"])
  (seethru . [(20141112 1523) ((shadchen (1 4))) "Easily change Emacs' transparency" single ((:url . "http://github.com/benaiah/seethru") (:keywords "lisp" "tools" "alpha" "transparency")) "melpa"])
  (sekka . [(20141129 600) ((cl-lib (0 3)) (concurrent (0 3 1)) (popup (0 5 0))) "A client for Sekka IME server" single ((:url . "https://github.com/kiyoka/sekka") (:keywords "ime" "skk" "japanese")) "melpa"])
  (semi . [(20141109 9) ((flim (1 14 9))) "A library to provide MIME features." tar nil "melpa"])
  (sensitive . [(20131015 635) ((emacs (24)) (sequences (0 1 0))) "A dead simple way to load sensitive information" single ((:keywords "convenience")) "melpa"])
  (sequences . [(20130908 1122) ((emacs (24))) "Ports of some Clojure sequence functions." single ((:keywords "convenience")) "melpa"])
  (sequential-command . [(20100504 855) nil "Many commands into one command" tar ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sequential-command.el") (:keywords "convenience" "lisp")) "melpa"])
  (servant . [(20140216 419) ((s (1 8 0)) (dash (2 2 0)) (f (0 11 0)) (ansi (0 3 0)) (commander (0 5 0)) (epl (0 2)) (shut-up (0 2 1)) (web-server (0 0 1))) "ELPA server written in Emacs Lisp" tar ((:url . "http://github.com/rejeep/servant.el") (:keywords "elpa" "server")) "melpa"])
  (serverspec . [(20140612 315) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (helm (1 6 1))) "Serverspec minor mode" tar ((:url . "http://101000lab.org")) "melpa"])
  (seti-theme . [(20141101 1308) nil "A dark colored theme, inspired by Seti Atom Theme" single ((:url . "https://github.com/caisah/seti-ui-theme.el") (:keywords "themes")) "melpa"])
  (setup-cygwin . [(20140131 305) ((cygwin-mount (0))) "Set up Emacs for using Cygwin" single ((:url . "http://www.emacswiki.org/setup-cygwin.el") (:keywords "os" "unix" "cygwin")) "melpa"])
  (shackle . [(20141204 545) ((cl-lib (0 5))) "Enforce rules for popups" single ((:url . "https://github.com/wasamasa/shackle") (:keywords "convenience")) "melpa"])
  (shadchen . [(20141102 1039) nil "pattern matching for elisp" single nil "melpa"])
  (shadow . [(20110507 24) nil "That's not the file. That's shadow." single ((:keywords "shadow.vim" "files" "processes")) "melpa"])
  (shampoo . [(20131230 219) nil "A remote Smalltalk development mode" tar nil "melpa"])
  (shell-current-directory . [(20140101 1554) nil "create new shell based on buffer directory" single ((:keywords "shell" "comint")) "melpa"])
  (shelldoc . [(20141205 303) ((cl-lib (0 3)) (s (1 9 0))) "shell command editing support with man page." single ((:url . "http://github.com/mhayashi1120/Emacs-shelldoc/raw/master/shelldoc.el") (:keywords "applications")) "melpa"])
  (shm . [(20141128 1328) nil "Structured Haskell Mode" tar ((:keywords "development" "haskell" "structured")) "melpa"])
  (shoulda . [(20140616 1133) ((cl-lib (0 5))) "Shoulda test support for ruby" single ((:keywords "ruby" "tests" "shoulda")) "melpa"])
  (show-css . [(20140816 1008) ((dom (1 0 1))) "Show the css of the html attribute the cursor is on" tar ((:url . "https://github.com/smmcg/showcss-mode") (:keywords "hypermedia")) "melpa"])
  (showtip . [(20080330 259) nil "Show tip at cursor" single ((:keywords "help")) "melpa"])
  (shut-up . [(20140904 44) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single ((:url . "http://github.com/rejeep/shut-up.el")) "melpa"])
  (signature . [(20140730 1249) nil "Signature Survey" tar nil "melpa"])
  (simple+ . [(20131227 154) ((strings (0))) "Extensions to standard library `simple.el'." single ((:url . "http://www.emacswiki.org/simple%2b.el") (:keywords "internal" "lisp" "extensions" "abbrev")) "melpa"])
  (simple-rtm . [(20140926 439) nil "Interactive Emacs mode for Remember The Milk" tar ((:keywords "remember" "the" "milk" "productivity" "todo")) "melpa"])
  (simple-screen . [(20141023 758) nil "Simple screen configuration manager" single ((:url . "https://github.com/wachikun/simple-screen") (:keywords "tools")) "melpa"])
  (skeletor . [(20141202 1253) ((s (1 7 0)) (f (0 14 0)) (dash (2 2 0)) (cl-lib (0 3)) (emacs (24 1))) "Provides project skeletons for Emacs" tar nil "melpa"])
  (skewer-less . [(20131015 622) ((skewer-mode (1 5 3))) "Skewer support for live LESS stylesheet updates" single ((:keywords "languages" "tools")) "melpa"])
  (skewer-reload-stylesheets . [(20140121 544) ((skewer-mode (1 5 3))) "live-edit CSS stylesheets." tar nil "melpa"])
  (skk . [(20141206 316) ((cdb (20141201 754))) "Simple Kana to Kanji conversion program." tar nil "melpa"])
  (skype . [(20131001 2118) nil "skype UI for emacs users.." tar ((:keywords "skype" "chat")) "melpa"])
  (slime-annot . [(20131230 1908) ((slime (0))) "cl-annot support for SLIME" single ((:url . "https://github.com/arielnetworks/cl-annot")) "melpa"])
  (slime-company . [(20141109 1224) ((slime (2 3 2)) (company (0 7))) "slime completion backend for company mode" single ((:keywords "convenience" "lisp" "abbrev")) "melpa"])
  (slime-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Slime (tmTheme)" single ((:url . "https://github.com/emacsfodder/tmtheme-to-deftheme")) "melpa"])
  (slime-volleyball . [(20140717 2141) nil "An SVG Slime Volleyball Game" tar ((:keywords "games")) "melpa"])
  (slovak-holidays . [(20140915 1129) nil "Adds a list of slovak holidays to Emacs calendar" single ((:keywords "calendar")) "melpa"])
  (sly . [(20141204 557) ((emacs (24 3))) "Sylvester the Cat's Common Lisp IDE" tar ((:url . "https://github.com/capitaomorte/sly") (:keywords "languages" "lisp" "sly")) "melpa"])
  (sly-company . [(20141116 1417) ((sly (1 0 0 -3)) (company (0 7)) (emacs (24 3))) "sly completion backend for company mode" single ((:keywords "convenience" "lisp" "abbrev")) "melpa"])
  (smart-cursor-color . [(20141124 919) nil "Change cursor color dynamically" single ((:url . "https://github.com/7696122/smart-cursor-color/") (:keywords "cursor" "color" "face")) "melpa"])
  (smart-indent-rigidly . [(20141205 1615) nil "Smart rigid indenting" single ((:url . "https://github.com/re5et/smart-indent-rigidly") (:keywords "indenting" "coffee-mode" "haml-mode" "sass-mode")) "melpa"])
  (smart-mode-line-powerline-theme . [(20141119 930) ((emacs (24 3)) (powerline (2 3)) (smart-mode-line (2 5))) "smart-mode-line theme that mimics the powerline appearance." single ((:url . "http://github.com/Bruce-Connor/smart-mode-line")) "melpa"])
  (smart-newline . [(20131207 1940) nil "Provide smart newline for one keybind." single nil "melpa"])
  (smart-shift . [(20141110 722) nil "Smart shift text left/right." single ((:url . "https://github.com/hbin/smart-shift") (:keywords "convenience" "tools")) "melpa"])
  (smartscan . [(20131230 739) nil "Jumps between other symbols found at point" single ((:keywords "extensions")) "melpa"])
  (smeargle . [(20141110 1919) ((cl-lib (0 5)) (emacs (24))) "Highlighting region by last updated time" single ((:url . "https://github.com/syohex/emacs-smeargle")) "melpa"])
  (smyx-theme . [(20141127 28) nil "smyx Color Theme" single ((:keywords "color" "theme" "smyx")) "melpa"])
  (snakemake-mode . [(20141128 915) ((emacs (24))) "Major mode for editing Snakemake files" single ((:url . "https://github.com/kyleam/snakemake-mode") (:keywords "tools")) "melpa"])
  (soft-charcoal-theme . [(20140420 943) nil "Dark charcoal theme with soft colors" single ((:url . "http://github.com/mswift42/soft-charcoal-theme")) "melpa"])
  (soft-morning-theme . [(20140615 540) nil "Emacs24 theme with a light background." single ((:url . "http://github.com/mswift42/soft-morning-theme")) "melpa"])
  (soft-stone-theme . [(20140614 135) ((emacs (24))) "Emacs 24 theme with a light background." single ((:url . "http://github.com/mswift42/soft-stone-theme")) "melpa"])
  (sonic-pi . [(20141124 831) ((cl-lib (0 5)) (osc (0 1)) (dash (2 2 0)) (emacs (24))) "A Emacs client for SonicPi" tar ((:url . "http://www.github.com/repl-electric/sonic-pi.el") (:keywords "sonicpi" "ruby")) "melpa"])
  (sos . [(20140912 1013) ((org (7))) "StackOverflow Search" single ((:url . "https://github.com/omouse/emacs-sos") (:keywords "tools" "search" "questions")) "melpa"])
  (soundcloud . [(20131210 1103) ((emms (20131016)) (json (1 2)) (deferred (0 3 1)) (string-utils (0 3 2))) "a SoundCloud client for Emacs" single ((:keywords "soundcloud" "music" "audio")) "melpa"])
  (soundklaus . [(20140810 813) ((dash (1 5 0)) (emacs (24)) (emms (3 0)) (deferred (0 3 2)) (s (1 6 0)) (pkg-info (0 4)) (cl-lib (0 5))) "Play SoundCloud music in Emacs via EMMS" single ((:url . "https://github.com/r0man/soundklaus.el") (:keywords "soundcloud" "music" "emms")) "melpa"])
  (sourcegraph . [(20141020 2101) ((emacs (24 3))) "Minor mode for interacting with srclib and Sourcegraph.com" single ((:url . "https://github.com/sourcegraph/emacs-sourcegraph-mode") (:keywords "sourcegraph")) "melpa"])
  (sourcemap . [(20140929 2221) ((cl-lib (0 5)) (emacs (24))) "Sourcemap parser" single ((:url . "https://github.com/syohex/emacs-sourcemap")) "melpa"])
  (spacegray-theme . [(20131230 1127) ((emacs (24 1))) "A Hyperminimal UI Theme" single ((:url . "http://github.com/bruce/emacs-spacegray-theme") (:keywords "themes")) "melpa"])
  (sparkline . [(20141205 309) nil "Make sparkline images from a list of numbers" single ((:keywords "extensions")) "melpa"])
  (speck . [(20140901 1835) nil "minor mode for spell checking" single ((:keywords "spell" "checking")) "melpa"])
  (speechd-el . [(20141025 912) nil "Client to speech synthesizers and Braille displays." tar nil "melpa"])
  (sphinx-doc . [(20140524 857) ((s (1 9 0)) (cl-lib (0 5))) "Sphinx friendly docstrings for Python functions" single ((:url . "https://github.com/naiquevin/sphinx-doc.el") (:keywords "sphinx" "python")) "melpa"])
  (sphinx-frontend . [(20131223 329) nil "Launch build process for rst documents via sphinx." single ((:url . "https://github.com/kostafey/sphinx-frontend") (:keywords "compile" "sphinx" "restructuredtext")) "melpa"])
  (spray . [(20140801 758) nil "a speed reading mode" single ((:url . "https://github.com/ian-kelling/spray") (:keywords "convenience")) "melpa"])
  (sqlite . [(20140106 2009) nil "use sqlite via elisp" single nil "melpa"])
  (sqlplus . [(20140902 1004) nil "User friendly interface to SQL*Plus and support for PL/SQL compilation" single ((:keywords "sql" "sqlplus" "oracle" "plsql")) "melpa"])
  (sqlup-mode . [(20140918 713) nil "Upcase SQL words for you" single ((:url . "https://github.com/trevoke/sqlup-mode.el") (:keywords "sql" "tools")) "melpa"])
  (stan-snippets . [(20141114 1106) ((yasnippet (0 8 0)) (stan-mode (2 5 2))) "Yasnippets for Stan" tar ((:url . "http://github.com/stan-dev/stan-mode") (:keywords "languages")) "melpa"])
  (state . [(20140714 816) ((emacs (24))) "Quick navigation between workspaces" single ((:url . "https://github.com/thisirs/state.git") (:keywords "convenience" "workspaces")) "melpa"])
  (stekene-theme . [(20141108 1211) ((emacs (24))) "Low-contrast (except for strings) theme, in light and dark versions." tar nil "melpa"])
  (stgit . [(20140213 348) nil "major mode for StGit interaction" single ((:url . "http://www.procode.org/stgit")) "melpa"])
  (sticky-windows . [(20121025 1813) nil "Make windows stay visible" single nil "melpa"])
  (strie . [(20140109 612) nil "A simple trie data structure implementation" single nil "melpa"])
  (string-inflection . [(20140704 2340) nil "underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" single ((:keywords "elisp")) "melpa"])
  (strings . [(20131227 158) nil "Miscellaneous string functions." single ((:url . "http://www.emacswiki.org/strings.el") (:keywords "internal" "strings" "text")) "melpa"])
  (subr+ . [(20140714 2255) nil "Extensions to standard library `subr.el'." single ((:url . "http://www.emacswiki.org/simple%2b.el") (:keywords "strings" "text")) "melpa"])
  (sunny-day-theme . [(20140413 1425) nil "Emacs24 theme with a light background." single ((:url . "http://github.com/mswift42/sunny-day-theme")) "melpa"])
  (swift-mode . [(20141204 2338) ((emacs (24 1))) "Major-mode for Apple's Swift programming language." single ((:keywords "languages" "swift")) "melpa"])
  (swoop . [(20140605 1410) ((ht (2 0)) (pcre2el (1 5)) (async (1 1)) (emacs (24))) "Peculiar buffer navigation for Emacs" tar ((:url . "https://github.com/ShingoFukuyama/swoop") (:keywords "swoop" "inner" "buffer" "search" "navigation")) "melpa"])
  (system-specific-settings . [(20140818 757) nil "Apply settings only on certain systems" single ((:url . "https://github.com/DarwinAwardWinner/emacs-system-specific-settings") (:keywords "configuration")) "melpa"])
  (tab-group . [(20140306 650) nil "Grouped tabs and their tabbar" single ((:url . "http://github.com/tarao/tab-group-el") (:keywords "convenience" "tabs")) "melpa"])
  (take-off . [(20140531 217) ((emacs (24 3)) (web-server (0 1 0))) "Emacs remote web access" tar ((:url . "https://github.com/tburette/take-off")) "melpa"])
  (tango-plus-theme . [(20140425 1511) nil "A color theme based on the tango palette" single ((:url . "https://github.com/tmalsburg/tango-plus-theme")) "melpa"])
  (tbx2org . [(20140224 759) ((dash (2 5 0)) (s (1 8 0)) (cl-lib (0 4))) "Tinderbox to org-mode conversion" single ((:url . "https://github.com/istib/tbx2org") (:keywords "org-mode")) "melpa"])
  (tco . [(20140412 612) ((dash (1 2 0)) (emacs (24))) "tail-call optimisation for Emacs lisp" single nil "melpa"])
  (tdd-status-mode-line . [(20131123 916) nil "TDD status on the mode-line" single ((:url . "https://github.com/algernon/tdd-status-mode-line") (:keywords "faces" "tdd")) "melpa"])
  (telepathy . [(20131209 458) nil "Access Telepathy from Emacs" single ((:keywords "telepathy" "tools")) "melpa"])
  (tempbuf . [(20111124 1307) nil "kill unused buffers in the background" single ((:keywords "convenience")) "melpa"])
  (term+ . [(20130612 652) nil "term-mode enhancement" tar ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (term+key-intercept . [(20140210 2350) ((term+ (0 1)) (key-intercept (0 1))) "term+ intercept key mapping" single ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (term+mux . [(20140210 2349) ((term+ (0 1)) (tab-group (0 1))) "term+ terminal multiplexer and session management" single ((:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation")) "melpa"])
  (term-alert . [(20141121 1205) ((term-cmd (1 0)) (alert (1 1))) "Get notifications when commands complete in the Emacs terminal emulator" single ((:url . "https://github.com/CallumCameron/term-alert") (:keywords "notifications" "processes")) "melpa"])
  (term-cmd . [(20141114 1314) nil "Send commands to Emacs from programs running under term.el" single ((:url . "https://github.com/CallumCameron/term-cmd") (:keywords "processes")) "melpa"])
  (tern . [(20141204 242) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single ((:url . "http://ternjs.net/")) "melpa"])
  (tern-auto-complete . [(20141121 453) ((tern (0 0 1)) (auto-complete (1 4)) (cl-lib (0 5)) (emacs (24))) "Tern Completion by auto-complete.el" single nil "melpa"])
  (tern-django . [(20141206 532) ((emacs (24)) (tern (0 0 1)) (f (0 17 1))) "Create tern projects for django applications." tar ((:url . "https://github.com/proofit404/tern-django")) "melpa"])
  (terraform-mode . [(20141119 2301) ((cl-lib (0 5))) "Major mode for terraform configuration file" single ((:url . "https://github.com/syohex/emacs-terraform-mode")) "melpa"])
  (thing-cmds . [(20141201 1815) ((hide-comnt (0))) "Commands that use things, as defined by `thingatpt.el'." single ((:url . "http://www.emacswiki.org/thing-cmds.el") (:keywords "thingatpt" "thing" "region" "selection")) "melpa"])
  (thingatpt+ . [(20140822 2056) nil "Extensions to `thingatpt.el'." single ((:url . "http://www.emacswiki.org/thingatpt%2b.el") (:keywords "extensions" "matching" "mouse")) "melpa"])
  (thrift . [(20140312 1348) nil "Major mode for Apache Thrift files" single ((:keywords "files")) "melpa"])
  (thumb-frm . [(20141118 225) ((frame-fns (0)) (frame-cmds (0))) "Commands for thumbnail frames." single ((:url . "http://www.emacswiki.org/thumb-frm.el") (:keywords "frame" "icon")) "melpa"])
  (timesheet . [(20140418 502) ((s (1)) (org (7)) (auctex (11 87 4))) "Timesheet management add-on for org-mode" tar ((:url . "https://github.com/tmarble/timesheet.el") (:keywords "org" "timesheet")) "melpa"])
  (tiny . [(20141205 248) nil "Quickly generate linear ranges in Emacs" single ((:url . "https://github.com/abo-abo/tiny")) "melpa"])
  (tinysegmenter . [(20141124 213) ((cl-lib (0 5))) "Super compact Japanese tokenizer in Javascript ported to emacs lisp" single ((:url . "https://github.com/myuhe/tinysegmenter.el") (:keywords "convenience")) "melpa"])
  (toggle . [(20140815 245) nil "quickly open corresponding file (eg test vs impl)." single ((:keywords "files" "extensions" "convenience")) "melpa"])
  (toggle-quotes . [(20140710 226) nil "Toggle between single and double quoted string" single ((:url . "https://github.com/toctan/toggle-quotes.el") (:keywords "convenience" "quotes")) "melpa"])
  (toggle-test . [(20140722 2237) nil "Toggle between source and test files in various programming languages" single ((:url . "https://github.com/rags/toggle-test") (:keywords "tdd" "test" "toggle" "productivity")) "melpa"])
  (toml . [(20130903 555) nil "TOML (Tom's Obvious, Minimal Language) parser" single ((:url . "https://github.com/gongo/emacs-toml") (:keywords "toml" "parser")) "melpa"])
  (tommyh-theme . [(20131004 1630) nil "A bright, bold-colored theme for emacs" single nil "melpa"])
  (tool-bar+ . [(20131227 203) nil "Extensions to standard library tool-bar.el" single ((:url . "http://www.emacswiki.org/tool-bar%2b.el") (:keywords "tool-bar" "convenience" "mouse" "button" "frame")) "melpa"])
  (tornado-template-mode . [(20141128 208) nil "A major mode for editing tornado templates" single nil "melpa"])
  (tox . [(20141004 1403) nil "Launch current python test with tox" single ((:url . "https://github.com/chmouel/tox.el") (:keywords "convenience" "tox" "python" "tests")) "melpa"])
  (traad . [(20140910 712) ((deferred (0 3 2)) (popup (0 5 0)) (request (0 2 0)) (request-deferred (0 2 0))) "emacs interface to the traad refactoring server." single ((:url . "https://github.com/abingham/traad")) "melpa"])
  (traad-autocomplete . [(20140817 411) ((traad (0 1)) (auto-complete (1 4 0))) "auto-complete sources for traad" single ((:url . "https://github.com/abingham/traad")) "melpa"])
  (tracwiki-mode . [(20140108 853) ((xml-rpc (1 6 8))) "Emacs Major mode for working with Trac" single ((:keywords "trac" "wiki" "tickets")) "melpa"])
  (tramp-term . [(20141104 1345) nil "Automatic setup of directory tracking in ssh sessions." single ((:url . "https://github.com/randymorris/tramp-term.el") (:keywords "tramp" "ssh")) "melpa"])
  (travis . [(20141121 408) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Travis" tar ((:url . "https://github.com/nlamirault/emacs-travis") (:keywords "travis")) "melpa"])
  (tronesque-theme . [(20140922 256) nil "Color Theme based on Tron universe." single ((:url . "https://github.com/aurelienbottazini/tronesque")) "melpa"])
  (try . [(20141116 1631) ((emacs (24))) "Try out Emacs packages." single ((:url . "http://github.com/larstvei/try") (:keywords "packages")) "melpa"])
  (tss . [(20140914 304) ((auto-complete (1 4 0)) (json-mode (1 1 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a interface for auto-complete.el/flymake.el on typescript-mode." tar ((:url . "https://github.com/aki2o/emacs-tss") (:keywords "typescript" "completion")) "melpa"])
  (tt-mode . [(20130804 410) nil "Emacs major mode for editing Template Toolkit files." single nil "melpa"])
  (turnip . [(20141122 1524) ((dash (2 6 0)) (s (1 9 0))) "Interacting with tmux from Emacs" single ((:keywords "terminals" "tools")) "melpa"])
  (twig-mode . [(20130220 1050) nil "A major mode for twig" single nil "melpa"])
  (typed-clojure-mode . [(20141128 745) ((clojure-mode (2 1 1)) (cider (0 8 1))) "Typed Clojure minor mode for Emacs" tar ((:url . "https://github.com/typedclojure/typed-clojure-mode")) "melpa"])
  (ucs-cmds . [(20131227 204) nil "Macro to create commands that insert Unicode chars." single ((:url . "http://www.emacswiki.org/ucs-cmds.el") (:keywords "unicode" "characters" "encoding" "commands" "ucs-names")) "melpa"])
  (ujelly-theme . [(20140504 1852) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single ((:url . "http://github.com/marktran/color-theme-ujelly")) "melpa"])
  (unbound . [(20140307 928) nil "Find convenient unbound keystrokes" single ((:keywords "keyboard")) "melpa"])
  (undercover . [(20141202 233) ((emacs (24)) (dash (2 0 0)) (shut-up (0 3 2))) "Test coverage library for Emacs" single ((:url . "https://github.com/sviridov/undercover.el") (:keywords "lisp" "tests" "coverage" "tools")) "melpa"])
  (unidecode . [(20140317 2118) ((cl-lib (0 4))) "Convert Unicode text into safe ASCII strings" tar nil "melpa"])
  (unipoint . [(20140113 1424) nil "a simple way to insert unicode characters by TeX name" single ((:url . "https://github.com/apgwoz/unipoint")) "melpa"])
  (unison-mode . [(20140127 1024) nil "Syntax highlighting for unison file synchronization program" single ((:url . "https://github.com/impaktor/unison-mode") (:keywords "symchronization" "unison")) "melpa"])
  (url-shortener . [(20131218 353) nil "shorten long url and expand tinyurl" single ((:url . "https://github.com/yuyang0/url-shortener")) "melpa"])
  (urlenc . [(20140116 656) nil "URL encoding/decoding utility for Emacs." single ((:url . "https://github.com/buzztaiki/urlenc-el") (:keywords "url")) "melpa"])
  (utop . [(20141105 259) ((emacs (24))) "Universal toplevel for OCaml" single ((:url . "https://github.com/diml/utop") (:keywords "ocaml" "languages")) "melpa"])
  (uuidgen . [(20140918 1601) nil "Provides various UUID generating functions" single ((:keywords "extensions" "lisp" "tools")) "melpa"])
  (uzumaki . [(20140522 1747) ((cl-lib (0 5))) "A simple buffer cycler" single ((:url . "http://github.com/geyslan/uzumaki") (:keywords "buffer" "convenience")) "melpa"])
  (vagrant . [(20141125 1959) nil "Manage a vagrant box from emacs" single ((:url . "https://github.com/ottbot/vagrant.el") (:keywords "vagrant" "chef")) "melpa"])
  (vagrant-tramp . [(20140709 814) nil "Vagrant method for TRAMP" tar ((:url . "https://github.com/dougm/vagrant-tramp") (:keywords "vagrant")) "melpa"])
  (vala-mode . [(20110407 721) nil "Vala mode derived mode" single ((:keywords "vala" "languages" "oop")) "melpa"])
  (vbasense . [(20140221 1553) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a environment like Visual Basic Editor." tar ((:url . "https://github.com/aki2o/emacs-vbasense") (:keywords "vba" "completion")) "melpa"])
  (vc-auto-commit . [(20141128 1352) nil "Auto-committing feature for your repository" tar ((:url . "http://github.com/thisirs/vc-auto-commit.git") (:keywords "vc" "convenience")) "melpa"])
  (vc-check-status . [(20141026 817) nil "Warn you when quitting emacs and leaving repo dirty." tar ((:url . "https://github.com/thisirs/vc-check-status") (:keywords "vc" "convenience")) "melpa"])
  (vc-fossil . [(20141031 22) nil "VC backend for the fossil sofware configuraiton management system" tar nil "melpa"])
  (vc-osc . [(20120910 211) nil "non-resident support for osc version-control" single nil "melpa"])
  (vi-tilde-fringe . [(20141027 1942) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." single ((:url . "https://github.com/syl20bnr/vi-tilde-fringe") (:keywords "emulation")) "melpa"])
  (vim-region . [(20140329 924) ((expand-region (20140127))) "Select region as vim" single ((:url . "https://github.com/ongaeshi/emacs-vim-region")) "melpa"])
  (virtualenvwrapper . [(20141026 1301) ((dash (1 5 0)) (s (1 6 1))) "a featureful virtualenv tool for Emacs" single ((:url . "http://github.com/porterjamesj/virtualenvwrapper.el") (:keywords "python" "virtualenv" "virtualenvwrapper")) "melpa"])
  (vkill . [(20091203 1022) nil "view and kill Unix processes from within Emacs" single nil "melpa"])
  (vlf . [(20141118 202) nil "View Large Files" tar ((:url . "https://github.com/m00natic/vlfi") (:keywords "large files" "utilities")) "melpa"])
  (volume . [(20121025 1538) nil "tweak your sound card volume from Emacs" single ((:url . "http://www.brockman.se/software/volume-el/")) "melpa"])
  (vs-emulation-mode . [(20140922 1322) ((emacs (24)) (cl-lib (0 5))) "Emulate a certain proprietary IDE" single ((:url . "https://github.com/Fanael/vs-emulation-mode")) "melpa"])
  (w32-browser . [(20131227 208) nil "Run Windows application associated with a file." single ((:url . "http://www.emacswiki.org/w32-browser.el") (:keywords "mouse" "dired" "w32" "explorer")) "melpa"])
  (w32browser-dlgopen . [(20131227 209) nil "Use w32browser with standard Windows Open File box." single ((:url . "http://www.emacswiki.org/w32browser-dlgopen.el") (:keywords "files" "extensions" "convenience" "dialog")) "melpa"])
  (waher-theme . [(20141115 430) ((emacs (24 1))) "Emacs 24 theme based on waher for st2 by dduckster" single ((:url . "https://github.com/jasonm23/emacs-waher-theme")) "melpa"])
  (wakatime-mode . [(20141123 1958) nil "Automatic time tracking extension based on WakaTime" single ((:keywords "calendar" "comm")) "melpa"])
  (wand . [(20141104 1645) ((dash (2 5 0))) "Magic wand for Emacs - Selecting and executing" tar ((:url . "https://github.com/cmpitg/wand") (:keywords "extensions" "tools")) "melpa"])
  (warm-night-theme . [(20141024 526) ((emacs (24))) "Emacs 24 theme with a dark background." single nil "melpa"])
  (wc-goal-mode . [(20140829 659) nil "Running word count with goals (minor mode)" single ((:url . "https://github.com/bnbeckwith/wc-goal-mode")) "melpa"])
  (weather-metno . [(20141005 838) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar nil "melpa"])
  (web-beautify . [(20131118 226) nil "Format HTML, CSS and JavaScript/JSON by js-beautify" single ((:url . "https://github.com/yasuyk/web-beautify")) "melpa"])
  (web-server . [(20140905 1706) ((emacs (24 3))) "Emacs Web Server" tar ((:url . "https://github.com/eschulte/emacs-web-server") (:keywords "http" "server" "network")) "melpa"])
  (wedge-ws . [(20140714 1449) nil "Wedge whitespace between columns in text" single ((:keywords "formatting" "indentation")) "melpa"])
  (wgrep-ag . [(20141012 311) ((wgrep (2 1 5))) "Writable ag buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ag.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (wgrep-pt . [(20140510 1531) ((wgrep (2 1 5))) "Writable pt buffer and apply the changes to files" single ((:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-pt.el") (:keywords "grep" "edit" "extensions")) "melpa"])
  (whitespace-cleanup-mode . [(20140820 128) nil "Intelligently call whitespace-cleanup on save" single ((:url . "https://github.com/purcell/whitespace-cleanup-mode") (:keywords "convenience")) "melpa"])
  (wid-edit+ . [(20131227 210) nil "Extensions to standard library `wid-edit.el'." single ((:url . "http://www.emacswiki.org/wid-edit%2b.el") (:keywords "widget" "color")) "melpa"])
  (wide-n . [(20140812 2352) nil "Cycle among buffer restrictions" single ((:url . "http://www.emacswiki.org/wide-n.el") (:keywords "narrow" "restriction" "widen")) "melpa"])
  (wimpy-del . [(20140715 1539) nil "Require confirmation for large region deletion." single ((:url . "http://www.emacswiki.org/wimpy-del.el") (:keywords "region" "cut" "kill" "copy")) "melpa"])
  (windata . [(20080412 1455) nil "convert window configuration to list" single ((:keywords "convenience" "frames")) "melpa"])
  (window+ . [(20141025 1758) nil "Extensions to `window.el'." single ((:url . "http://www.emacswiki.org/window%2b.el") (:keywords "internal" "window")) "melpa"])
  (window-numbering . [(20130902 930) nil "Numbered window shortcuts" single ((:url . "http://nschum.de/src/emacs/window-numbering-mode/") (:keywords "faces" "matching")) "melpa"])
  (wispjs-mode . [(20140103 1432) ((clojure-mode (0))) "Major mode for Wisp code." single ((:url . "https://github.com/krisajenkins/wispjs-mode")) "melpa"])
  (with-editor . [(20141124 1308) ((emacs (24)) (cl-lib (0 5)) (dash (2 9 0))) "use the Emacsclient as $EDITOR" single ((:url . "https://github.com/magit/magit")) "melpa"])
  (wn-mode . [(20141206 1000) nil "No description available." single nil "melpa"])
  (wolfram-mode . [(20140118 757) ((emacs (24 3))) "Mathematica editing and inferior mode." single ((:url . "https://github.com/kawabata/wolfram-mode/") (:keywords "languages" "processes" "tools")) "melpa"])
  (wonderland . [(20130912 1819) ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) "declarative configuration for Emacsen" single ((:url . "http://github.com/kurisuwhyte/emacs-wonderland") (:keywords "configuration" "profile" "wonderland")) "melpa"])
  (wordsmith-mode . [(20140203 427) nil "Syntax analysis and NLP text-processing in Emacs (OSX-only)" single nil "melpa"])
  (worf . [(20141205 220) ((helm (1 5 3)) (ace-jump-mode (2 0)) (ace-link (0 1 0))) "A warrior does not press so many keys! (in org-mode)" single ((:url . "https://github.com/abo-abo/worf") (:keywords "lisp")) "melpa"])
  (ws-butler . [(20140816 1448) nil "Unobtrusively remove trailing whitespace." single ((:url . "https://github.com/lewang/ws-butler")) "melpa"])
  (wwtime . [(20120629 1350) nil "Insert a time of day with appropriate world-wide localization" single ((:keywords "time")) "melpa"])
  (x-dict . [(20091203 1023) nil "emacs interface for several online dictionaries" single nil "melpa"])
  (xahk-mode . [(20140611 1757) nil "Major mode for editing AutoHotkey scripts." single ((:keywords "ahk" "autohotkey" "hotkey" "keyboard shortcut" "automation")) "melpa"])
  (xcscope . [(20140510 1437) nil "cscope interface for (X)Emacs" single ((:url . "https://github.com/dkogan/xcscope.el") (:keywords "languages" "c")) "melpa"])
  (xkcd . [(20140505 511) ((json (1 3))) "View xkcd from Emacs" single ((:url . "https://github.com/vibhavp/emacs-xkcd") (:keywords "xkcd" "webcomic")) "melpa"])
  (xmlunicode . [(20140121 623) nil "Unicode support for XML" tar ((:keywords "utf-8" "unicode" "xml" "characters")) "melpa"])
  (xquery-mode . [(20140121 943) nil "A simple mode for editing xquery programs" tar nil "melpa"])
  (xterm-color . [(20130904 1826) nil "ANSI & XTERM 256 color support" single nil "melpa"])
  (xterm-title . [(20091203 1023) nil "Update xterm titles" single nil "melpa"])
  (xtest . [(20141108 1951) ((cl-lib (0 5))) "Simple Testing with Emacs & ERT" single ((:url . "https://github.com/promethial/xtest") (:keywords "testing" "ert")) "melpa"])
  (yabin . [(20140205 1951) nil "Yet Another Bignum package (A thin wrapper of calc.el)." single ((:keywords "data")) "melpa"])
  (yafolding . [(20141202 2056) nil "Yet another folding extension for Emacs" single ((:keywords "folding")) "melpa"])
  (yandex-weather . [(20140423 421) nil "Fetch Yandex Weather forecasts." tar nil "melpa"])
  (ycm . [(20140904 1118) nil "Emacs client for the YouCompleteMe auto-completion server." single ((:keywords "c" "abbrev")) "melpa"])
  (ycmd . [(20141126 2221) ((emacs (24)) (dash (1 2 0)) (deferred (0 3 2)) (popup (0 5 0))) "emacs bindings to the ycmd completion server" tar ((:url . "https://github.com/abingham/emacs-ycmd")) "melpa"])
  (zeal-at-point . [(20131210 503) nil "Search the word at point with Zeal" single ((:url . "https://github.com/jinzhu/zeal-at-point")) "melpa"])
  (zonokai-theme . [(20140909 1941) nil "No description available." tar nil "melpa"])
  (zoom-window . [(20141204 546) nil "Zoom window like tmux" single ((:url . "https://github.com/syohex/emacs-zoom-window")) "melpa"])
  (zop-to-char . [(20140416 1015) ((cl-lib (0 5))) "A replacement of zap-to-char." single ((:url . "https://github.com/thierryvolpiatto/zop-to-char")) "melpa"])
  (ztree . [(20140610 359) nil "Several text-tree applications" tar nil "melpa"])
  (zygospore . [(20140703 152) nil "reversible C-x 1 (delete-other-windows)" single ((:url . "https://github.com/louiskottmann/zygospore.el")) "melpa"])
 )
